[
  {
    "_id": "SnN_At8YN",
    "name": "1 drum pads starter copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67b79465eb63dd504bbcce6b",
          "67b79465eb63dd504bbcce6c",
          "67b79465eb63dd504bbcce72",
          "67b79465eb63dd504bbcce73"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67b79465eb63dd504bbcce6a",
        "createdAt": "2022-02-16T21:18:14.789Z",
        "updatedAt": "2022-02-16T21:18:14.789Z",
        "id": "67b79465eb63dd504bbcce6a"
      },
      {
        "name": "sketch.js",
        "content": "// Click the mouse to play kick drum\n\n// Create a Players object and load the drum kit files\nconst kit = new Tone.Players({\n  kick: \"samples/505/kick.mp3\",\n  snare: \"samples/505/snare.mp3\",\n  hh: \"samples/505/hh.mp3\",\n  hho: \"samples/505/hho.mp3\",\n});\nkit.toDestination();\n\nlet g = 120;\n// Set the tempo to 120 beats per minute\nTone.Transport.bpm.value = g;\n\n// Set the time signature to 4/4.\nTone.Transport.timeSignature = [3, 4];\n\n// Create a loop: call playBeat every quarter note\nTone.Transport.scheduleRepeat(playBeat, \"4n\");\n\nlet cells = [\n  [0, 1, 0, 1],\n  [1, 1, 1, 0],\n];\n\nlet pw, ph;\n\nfunction mousePressed() {\n  if (kit.loaded) {\n    // Make sure the sound file has been completely loaded\n    if (mouseX > 0 && mouseX < pw && mouseY > 0 && mouseY < ph) {\n      kit.player(\"kick\").start();\n    } else if (\n      mouseX > pw &&\n      mouseX < 2 * pw &&\n      mouseY > ph &&\n      mouseY < 2 * ph\n    ) {\n      kit.player(\"snare\").start();\n    } else if (mouseX > pw && mouseX < 2 * pw && mouseY > 0 && mouseY < ph) {\n      kit.player(\"hh\").start();\n    } else if (mouseX > 0 && mouseX < pw && mouseY > ph && mouseY < 2 * ph) {\n      kit.player(\"hho\").start();\n    }\n  }\n}\n\nfunction setup() {\n  createCanvas(200, 200);\n  pw = width / 2;\n  ph = height / 2;\n  background(0);\n\n  btn = createButton(\"play\");\n  btn.mousePressed(togglePlay);\n  btn.position(pw - btn.width / 2, height + 10);\n  slider = createSlider(50, 180);\n  slider.position(pw - slider.width / 3, height + 40);\n  slider.size(80);\n}\n\nfunction togglePlay() {\n  if (Tone.Transport.state == \"started\") {\n    Tone.Transport.pause();\n    btn.html(\"play\");\n  } else {\n    Tone.Transport.start();\n    btn.html(\"pause\");\n  }\n}\n\nfunction playBeat(time) {\n  let beat = Tone.Transport.position.split(\":\")[1];\n  console.log(beat);\n  if (cells[0][beat] == 1) {\n    kit.player(\"snare\").start(time);\n  }\n  if (cells[1][beat] == 1) {\n    kit.player(\"kick\").start(time);\n  }\n}\n\nfunction draw() {\n  background(0);\n  Tone.Transport.bpm.value = g;\n  g = slider.value();\n  textSize(32);\n  fill(255);\n  stroke(0);\n  strokeWeight(4);\n  text(g, width/2.5 , height/2);\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67b79465eb63dd504bbcce72",
        "createdAt": "2022-02-16T21:18:14.789Z",
        "updatedAt": "2022-02-16T21:18:14.789Z",
        "id": "67b79465eb63dd504bbcce72"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/tone/14.8.9/Tone.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b79465eb63dd504bbcce6b",
        "createdAt": "2022-02-16T21:18:14.789Z",
        "updatedAt": "2022-02-16T21:18:14.789Z",
        "id": "67b79465eb63dd504bbcce6b"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b79465eb63dd504bbcce73",
        "createdAt": "2022-02-16T21:18:14.789Z",
        "updatedAt": "2022-02-16T21:18:14.789Z",
        "id": "67b79465eb63dd504bbcce73"
      },
      {
        "name": "samples",
        "content": "",
        "children": [
          "67b79465eb63dd504bbcce6d"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67b79465eb63dd504bbcce6c",
        "createdAt": "2022-02-16T21:18:14.789Z",
        "updatedAt": "2022-02-16T21:18:14.789Z",
        "id": "67b79465eb63dd504bbcce6c"
      },
      {
        "name": "505",
        "content": "",
        "children": [
          "67b79465eb63dd504bbcce6e",
          "67b79465eb63dd504bbcce6f",
          "67b79465eb63dd504bbcce70",
          "67b79465eb63dd504bbcce71"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67b79465eb63dd504bbcce6d",
        "createdAt": "2022-02-16T21:18:14.789Z",
        "updatedAt": "2022-02-16T21:18:14.789Z",
        "id": "67b79465eb63dd504bbcce6d"
      },
      {
        "name": "kick.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/146d523d-df87-4cfe-803c-89a1ee418bd0.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b79465eb63dd504bbcce70",
        "createdAt": "2022-02-16T21:18:14.789Z",
        "updatedAt": "2022-02-16T21:18:14.789Z",
        "id": "67b79465eb63dd504bbcce70"
      },
      {
        "name": "hh.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/160847c4-5b82-4a1e-991f-7f5363518509.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b79465eb63dd504bbcce6e",
        "createdAt": "2022-02-16T21:18:14.789Z",
        "updatedAt": "2022-02-16T21:18:14.789Z",
        "id": "67b79465eb63dd504bbcce6e"
      },
      {
        "name": "snare.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/cdc757c9-e29b-471c-a105-55b68be6ed3d.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b79465eb63dd504bbcce71",
        "createdAt": "2022-02-16T21:18:14.789Z",
        "updatedAt": "2022-02-16T21:18:14.789Z",
        "id": "67b79465eb63dd504bbcce71"
      },
      {
        "name": "hho.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/eef71ece-6325-45d0-9c9e-7b221206116c.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b79465eb63dd504bbcce6f",
        "createdAt": "2022-02-16T21:18:14.789Z",
        "updatedAt": "2022-02-16T21:18:14.789Z",
        "id": "67b79465eb63dd504bbcce6f"
      }
    ],
    "createdAt": "2025-02-20T20:45:25.798Z",
    "updatedAt": "2025-02-20T20:45:25.798Z",
    "id": "SnN_At8YN"
  },
  {
    "_id": "VDeQgWYs8",
    "name": "10 - Comet Shower - Perlin Noise Flow Field responds to Volume copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "675a0520e5bc60fd0d72697b",
          "675a0520e5bc60fd0d72697c",
          "675a0520e5bc60fd0d72697d",
          "675a0520e5bc60fd0d72697e"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "675a0520e5bc60fd0d72697a",
        "createdAt": "2024-12-11T21:33:27.964Z",
        "updatedAt": "2024-12-11T21:33:27.964Z",
        "id": "675a0520e5bc60fd0d72697a"
      },
      {
        "name": "sketch.js",
        "content": "let inc = 0.01;\nlet scl = 20;\nlet rows;\nlet cols;\nlet field;\nlet zoff = 0;\nlet particleNum = 250;\nlet particles = [];\nlet mic;\nlet sensitivity;\nlet sens;\n\nfunction setup() {\n  createCanvas(600, 600);\n  rows = width / scl;\n  cols = height / scl;\n  field = new Array(rows * cols);\n  mic = new p5.AudioIn;\n  mic.start();\n  for (let i = 0; i < particleNum; i++) {\n      particles[i] = new Particle();\n  }\n}\n\nfunction draw() {\n  background(0, 10);\n  let xoff;\n  let yoff = 0;\n  sensitivity = document.querySelector('#sensitivity').value;\n  sens = map(sensitivity, 0, 1, 1, 0);\n  strokeWeight(1);\n  stroke(1);\n  for (let y = 0; y < rows; y++) {\n      xoff = 0;\n      for (let x = 0; x < cols; x++) {\n        let index = x + y * cols;\n        let angle = noise(xoff, yoff, zoff) * TWO_PI;\n        field[index] = p5.Vector.fromAngle(angle);\n        field[index].setMag(2);\n        /*\n        push();\n        translate(x * scl, y * scl);\n        rotate(field[index].heading());\n        line(0, 0, scl, 0);\n        pop(); */\n        xoff += inc;\n      }\n      yoff += inc;\n      zoff += 0.0001;\n    }\n  \n  for (let i = 0; i < particleNum; i++) {\n    particles[i].follow(field, scl, cols);\n    let windSpeed = map(mic.getLevel(0.5), 0, sens, 0.1, 8);\n    particles[i].update(windSpeed);\n    particles[i].show();\n  }\n\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "675a0520e5bc60fd0d72697d",
        "createdAt": "2024-12-11T21:33:27.964Z",
        "updatedAt": "2024-12-11T21:33:27.964Z",
        "id": "675a0520e5bc60fd0d72697d"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.0/addons/p5.sound.js\"></script>\n    <script src=\"particle.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n    <input type=\"range\" id=\"sensitivity\" name=\"sensitivity\" min=\"0\" max=\"0.99\" value=\"0.8\" step=\"0.05\" />\n    <label for=\"sensitivity\">Sensitivity - higher volume creates faster wind</label>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675a0520e5bc60fd0d72697b",
        "createdAt": "2024-12-11T21:33:27.964Z",
        "updatedAt": "2024-12-11T21:33:27.964Z",
        "id": "675a0520e5bc60fd0d72697b"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675a0520e5bc60fd0d72697e",
        "createdAt": "2024-12-11T21:33:27.964Z",
        "updatedAt": "2024-12-11T21:33:27.964Z",
        "id": "675a0520e5bc60fd0d72697e"
      },
      {
        "name": "particle.js",
        "content": "class Particle {\n  constructor() {\n    this.pos = createVector(random(width), random(height));\n    this.vel = createVector(0,0);\n    this.acc = createVector(0,0);\n    this.prev = this.pos.copy();\n  }\n  \n  show() {\n    strokeWeight(1);\n    stroke(140, 210, 250, 255);\n    line(this.prev.x, this.prev.y, this.pos.x, this.pos.y);\n  }\n  \n  update(maxSpeed) {\n    if (this.pos.x > width) {\n        this.pos.x = 0;\n    }\n    if (this.pos.x < 0) {\n        this.pos.x = width;\n    }\n    if (this.pos.y > height) {\n        this.pos.y = 0;\n    }\n    if (this.pos.y < 0) {\n        this.pos.y = height;\n    }\n    this.prev = this.pos.copy();\n    this.vel.add(this.acc);\n    this.vel.limit(maxSpeed);\n    this.pos.add(this.vel);\n    this.acc.set(0, 0);\n  }\n  \n  follow(flowfield, scl, cols) {\n    let x = floor(this.pos.x / scl);\n    let y = floor(this.pos.y / scl);\n    let index = x + y * cols;\n    let force = flowfield[index];\n    this.applyForce(force);\n  }\n  \n  applyForce(force) {\n    this.acc.add(force);\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675a0520e5bc60fd0d72697c",
        "createdAt": "2024-12-11T21:33:27.964Z",
        "updatedAt": "2024-12-11T21:33:27.964Z",
        "id": "675a0520e5bc60fd0d72697c"
      }
    ],
    "createdAt": "2024-12-11T21:33:20.590Z",
    "updatedAt": "2024-12-11T21:33:27.964Z",
    "id": "VDeQgWYs8"
  },
  {
    "_id": "axXeZUndn",
    "name": "20columns-alternating",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66faf5ed96eb82dceeceddc7",
          "66faf5ed96eb82dceeceddc8",
          "66faf5ed96eb82dceeceddc9"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66faf5ed96eb82dceeceddc6",
        "createdAt": "2024-09-30T19:03:30.035Z",
        "updatedAt": "2024-09-30T19:03:30.035Z",
        "id": "66faf5ed96eb82dceeceddc6"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(255);\n\n  let W;\n  let num = 20;\n  let mycolor1 = \"red\";\n  let mycolor2 = \"blue\";\n  let i = 0;\n\n  W = width / num;\n\n  while (i < num) {\n    let xpos = i * W;\n\n    if (i % 2 == 0 && mouseX > xpos && mouseX < xpos + W) {\n      fill(mycolor1); // fill first half red\n    } else if (i % 2 != 0 && mouseX > xpos && mouseX < xpos + W) {\n      fill(mycolor2); // fill second half blue\n    } else {\n      fill(255); // when not hovering, white\n    }\n\n    rect(xpos, 0, W, height); // draw rect\n    i++; // increment\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66faf5ed96eb82dceeceddc8",
        "createdAt": "2024-09-30T19:03:30.035Z",
        "updatedAt": "2024-09-30T19:03:30.035Z",
        "id": "66faf5ed96eb82dceeceddc8"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66faf5ed96eb82dceeceddc7",
        "createdAt": "2024-09-30T19:03:30.035Z",
        "updatedAt": "2024-09-30T19:03:30.035Z",
        "id": "66faf5ed96eb82dceeceddc7"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66faf5ed96eb82dceeceddc9",
        "createdAt": "2024-09-30T19:03:30.035Z",
        "updatedAt": "2024-09-30T19:03:30.035Z",
        "id": "66faf5ed96eb82dceeceddc9"
      }
    ],
    "createdAt": "2024-09-30T19:03:10.003Z",
    "updatedAt": "2024-09-30T19:03:30.035Z",
    "id": "axXeZUndn"
  },
  {
    "_id": "Ipu8B-pM_",
    "name": "20columns-bluered",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66faf235c96f4fd56248f306",
          "66faf235c96f4fd56248f307",
          "66faf235c96f4fd56248f308"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66faf235c96f4fd56248f305",
        "createdAt": "2024-09-30T19:03:04.836Z",
        "updatedAt": "2024-09-30T19:03:04.836Z",
        "id": "66faf235c96f4fd56248f305"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(255);\n\n  let W;\n  let num = 20;\n  let mycolor1 = \"red\";\n  let mycolor2 = \"blue\";\n  let i = 0;\n\n  W = width / num;\n\n  while (i < num) {\n    let xpos = i * W;\n\n    if (i <= 9 && mouseX > xpos && mouseX < xpos + W) {\n      fill(mycolor1); // fill first half red\n    } else if (i > 9 && mouseX > xpos && mouseX < xpos + W) {\n      fill(mycolor2); // fill second half blue\n    } else {\n      fill(255); // when not hovering, white\n    }\n\n    rect(xpos, 0, W, height); // draw rect\n    i++; // increment\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66faf235c96f4fd56248f307",
        "createdAt": "2024-09-30T19:03:04.836Z",
        "updatedAt": "2024-09-30T19:03:04.836Z",
        "id": "66faf235c96f4fd56248f307"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66faf235c96f4fd56248f306",
        "createdAt": "2024-09-30T19:03:04.836Z",
        "updatedAt": "2024-09-30T19:03:04.836Z",
        "id": "66faf235c96f4fd56248f306"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66faf235c96f4fd56248f308",
        "createdAt": "2024-09-30T19:03:04.836Z",
        "updatedAt": "2024-09-30T19:03:04.836Z",
        "id": "66faf235c96f4fd56248f308"
      }
    ],
    "createdAt": "2024-09-30T18:47:17.128Z",
    "updatedAt": "2024-09-30T19:03:04.836Z",
    "id": "Ipu8B-pM_"
  },
  {
    "_id": "UFSsXE6Wj",
    "name": "20columns-forloop",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66faed1ee86a8b9e6eb0d687",
          "66faed1ee86a8b9e6eb0d686",
          "66faed1ee86a8b9e6eb0d688"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66faed1ee86a8b9e6eb0d689",
        "createdAt": "2024-10-16T01:27:49.556Z",
        "updatedAt": "2024-10-16T01:27:49.556Z",
        "id": "66faed1ee86a8b9e6eb0d689"
      },
      {
        "name": "sketch.js",
        "content": "let W;\nlet num = 20;\nlet mycolor = \"red\";\nlet isRed = false;\n\nfunction setup() {\n  createCanvas(400, 400);\n  W = width / num;\n}\n\nfunction draw() {\n  background(255);\n  for (i = 0; i < num; i++) {\n    let xpos = W * i;\n\n    if (mouseX > xpos && mouseX < xpos + W) {\n      fill(mycolor);\n    } else {\n      fill(\"white\");\n    }\n\n    rect(xpos, 0, W, height);\n  }\n}\n\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66faed1ee86a8b9e6eb0d686",
        "createdAt": "2024-10-16T01:27:49.556Z",
        "updatedAt": "2024-10-16T01:27:49.556Z",
        "id": "66faed1ee86a8b9e6eb0d686"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66faed1ee86a8b9e6eb0d687",
        "createdAt": "2024-10-16T01:27:49.556Z",
        "updatedAt": "2024-10-16T01:27:49.556Z",
        "id": "66faed1ee86a8b9e6eb0d687"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66faed1ee86a8b9e6eb0d688",
        "createdAt": "2024-10-16T01:27:49.556Z",
        "updatedAt": "2024-10-16T01:27:49.556Z",
        "id": "66faed1ee86a8b9e6eb0d688"
      }
    ],
    "updatedAt": "2024-10-16T01:27:49.556Z",
    "createdAt": "2024-09-30T18:27:33.297Z",
    "id": "UFSsXE6Wj"
  },
  {
    "_id": "ovV4Uk0zP",
    "name": "20columns-noloop",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66fae797e86a8b9e6eb0d683",
          "66fae797e86a8b9e6eb0d682",
          "66fae797e86a8b9e6eb0d684"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66fae797e86a8b9e6eb0d685",
        "createdAt": "2024-09-30T18:24:58.520Z",
        "updatedAt": "2024-09-30T18:24:58.520Z",
        "id": "66fae797e86a8b9e6eb0d685"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n  let rWidth = width / 20;\n\n  if (mouseX > 0 && mouseX < rWidth) {\n    fill(\"red\");\n  } else {\n    fill(255);\n  }\n  rect(0, 0, rWidth, height);\n\n  if (mouseX > rWidth && mouseX < 2 * rWidth) {\n    fill(\"red\");\n  } else {\n    fill(255);\n  }\n  rect(rWidth, 0, rWidth, height);\n\n  if (mouseX > 2 * rWidth && mouseX < 3 * rWidth) {\n    fill(\"red\");\n  } else {\n    fill(255);\n  }\n  rect(2 * rWidth, 0, rWidth, height);\n\n  if (mouseX > 3 * rWidth && mouseX < 4 * rWidth) {\n    fill(\"red\");\n  } else {\n    fill(255);\n  }\n  rect(3 * rWidth, 0, rWidth, height);\n\n  if (mouseX > 4 * rWidth && mouseX < 5 * rWidth) {\n    fill(\"red\");\n  } else {\n    fill(255);\n  }\n  rect(4 * rWidth, 0, rWidth, height);\n\n  if (mouseX > 5 * rWidth && mouseX < 6 * rWidth) {\n    fill(\"red\");\n  } else {\n    fill(255);\n  }\n  rect(5 * rWidth, 0, rWidth, height);\n\n  if (mouseX > 6 * rWidth && mouseX < 7 * rWidth) {\n    fill(\"red\");\n  } else {\n    fill(255);\n  }\n  rect(6 * rWidth, 0, rWidth, height);\n\n  if (mouseX > 7 * rWidth && mouseX < 8 * rWidth) {\n    fill(\"red\");\n  } else {\n    fill(255);\n  }\n  rect(7 * rWidth, 0, rWidth, height);\n\n  if (mouseX > 8 * rWidth && mouseX < 9 * rWidth) {\n    fill(\"red\");\n  } else {\n    fill(255);\n  }\n\n  rect(8 * rWidth, 0, rWidth, height);\n\n  if (mouseX > 9 * rWidth && mouseX < 10 * rWidth) {\n    fill(\"red\");\n  } else {\n    fill(255);\n  }\n  rect(9 * rWidth, 0, rWidth, height);\n\n  if (mouseX > 10 * rWidth && mouseX < 11 * rWidth) {\n    fill(\"red\");\n  } else {\n    fill(255);\n  }\n  rect(10 * rWidth, 0, rWidth, height);\n\n  if (mouseX > 11 * rWidth && mouseX < 12 * rWidth) {\n    fill(\"red\");\n  } else {\n    fill(255);\n  }\n  rect(11 * rWidth, 0, rWidth, height);\n\n  if (mouseX > 12 * rWidth && mouseX < 13 * rWidth) {\n    fill(\"red\");\n  } else {\n    fill(255);\n  }\n  rect(12 * rWidth, 0, rWidth, height);\n\n  if (mouseX > 13 * rWidth && mouseX < 14 * rWidth) {\n    fill(\"red\");\n  } else {\n    fill(255);\n  }\n  rect(13 * rWidth, 0, rWidth, height);\n\n  if (mouseX > 14 * rWidth && mouseX < 15 * rWidth) {\n    fill(\"red\");\n  } else {\n    fill(255);\n  }\n  rect(14 * rWidth, 0, rWidth, height);\n\n  if (mouseX > 15 * rWidth && mouseX < 16 * rWidth) {\n    fill(\"red\");\n  } else {\n    fill(255);\n  }\n  rect(15 * rWidth, 0, rWidth, height);\n\n  if (mouseX > 16 * rWidth && mouseX < 17 * rWidth) {\n    fill(\"red\");\n  } else {\n    fill(255);\n  }\n  rect(16 * rWidth, 0, rWidth, height);\n\n  if (mouseX > 17 * rWidth && mouseX < 18 * rWidth) {\n    fill(\"red\");\n  } else {\n    fill(255);\n  }\n  rect(17 * rWidth, 0, rWidth, height);\n\n  if (mouseX > 18 * rWidth && mouseX < 19 * rWidth) {\n    fill(\"red\");\n  } else {\n    fill(255);\n  }\n  rect(18 * rWidth, 0, rWidth, height);\n\n  if (mouseX > 19 * rWidth && mouseX < 20 * rWidth) {\n    fill(\"red\");\n  } else {\n    fill(255);\n  }\n  rect(19 * rWidth, 0, rWidth, height);\n\n  if (mouseX > 20 * rWidth && mouseX < 21 * rWidth) {\n    fill(\"red\");\n  } else {\n    fill(255);\n  }\n  rect(20 * rWidth, 0, rWidth, height);\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66fae797e86a8b9e6eb0d682",
        "createdAt": "2024-09-30T18:24:58.520Z",
        "updatedAt": "2024-09-30T18:24:58.520Z",
        "id": "66fae797e86a8b9e6eb0d682"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fae797e86a8b9e6eb0d683",
        "createdAt": "2024-09-30T18:24:58.520Z",
        "updatedAt": "2024-09-30T18:24:58.520Z",
        "id": "66fae797e86a8b9e6eb0d683"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fae797e86a8b9e6eb0d684",
        "createdAt": "2024-09-30T18:24:58.520Z",
        "updatedAt": "2024-09-30T18:24:58.520Z",
        "id": "66fae797e86a8b9e6eb0d684"
      }
    ],
    "updatedAt": "2024-09-30T18:24:58.520Z",
    "createdAt": "2024-09-30T18:24:47.614Z",
    "id": "ovV4Uk0zP"
  },
  {
    "_id": "wV5yd22g7",
    "name": "20columns-randomfill",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66faf61996eb82dceeceddcb",
          "66faf61996eb82dceeceddcc",
          "66faf61996eb82dceeceddcd"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66faf61996eb82dceeceddca",
        "createdAt": "2024-09-30T19:11:27.794Z",
        "updatedAt": "2024-09-30T19:11:27.794Z",
        "id": "66faf61996eb82dceeceddca"
      },
      {
        "name": "sketch.js",
        "content": "let i = 0;\nlet W;\nlet num = 20;\nlet mycolor = [];\n\nfunction setup() {\n  createCanvas(400, 400);\n  for (let i = 0; i < num; i++) {\n    mycolor[i] = color(random(255), random(255), random(255));\n  }\n}\n\nfunction draw() {\n  background(255);\n\n  W = width / num;\n\n  for (i = 0; i < num; i++) {\n    let xpos = i * W;\n\n    if (mouseX > xpos && mouseX < xpos + W) {\n      fill(mycolor[i]); // random color\n    } else {\n      fill(255); // when not hovering, white\n    }\n\n    rect(xpos, 0, W, height); // draw rect\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66faf61996eb82dceeceddcc",
        "createdAt": "2024-09-30T19:11:27.794Z",
        "updatedAt": "2024-09-30T19:11:27.794Z",
        "id": "66faf61996eb82dceeceddcc"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66faf61996eb82dceeceddcb",
        "createdAt": "2024-09-30T19:11:27.794Z",
        "updatedAt": "2024-09-30T19:11:27.794Z",
        "id": "66faf61996eb82dceeceddcb"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66faf61996eb82dceeceddcd",
        "createdAt": "2024-09-30T19:11:27.794Z",
        "updatedAt": "2024-09-30T19:11:27.794Z",
        "id": "66faf61996eb82dceeceddcd"
      }
    ],
    "createdAt": "2024-09-30T19:03:53.668Z",
    "updatedAt": "2024-09-30T19:11:27.794Z",
    "id": "wV5yd22g7"
  },
  {
    "_id": "515mAURoV",
    "name": "20columns-skip7",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66faf12f72037a06dbad3ab9",
          "66faf12f72037a06dbad3aba",
          "66faf12f72037a06dbad3abb"
        ],
        "fileType": "folder",
        "_id": "66faf12f72037a06dbad3ab8",
        "createdAt": "2024-09-30T18:47:12.750Z",
        "updatedAt": "2024-09-30T18:47:12.750Z",
        "id": "66faf12f72037a06dbad3ab8"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(255);\n\n  let W;\n  let num = 20;\n  let mycolor1 = \"red\";\n  let mycolor2 = \"blue\";\n  let i = 0;\n\n  W = width / num;\n\n  while (i < num) {\n    let xpos = i * W;\n    \n    if (i==6) {\n      i++\n      continue\n    }\n\n    if (mouseX > xpos && mouseX < xpos + W) {\n      fill(mycolor1);\n    } else {\n      fill(255);\n    } \n      \n    rect(xpos, 0, W, height);\n    i += 1;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66faf12f72037a06dbad3aba",
        "createdAt": "2024-09-30T18:47:12.750Z",
        "updatedAt": "2024-09-30T18:47:12.750Z",
        "id": "66faf12f72037a06dbad3aba"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "66faf12f72037a06dbad3ab9",
        "createdAt": "2024-09-30T18:47:12.750Z",
        "updatedAt": "2024-09-30T18:47:12.750Z",
        "id": "66faf12f72037a06dbad3ab9"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "66faf12f72037a06dbad3abb",
        "createdAt": "2024-09-30T18:47:12.750Z",
        "updatedAt": "2024-09-30T18:47:12.750Z",
        "id": "66faf12f72037a06dbad3abb"
      }
    ],
    "createdAt": "2024-09-30T18:42:55.782Z",
    "updatedAt": "2024-09-30T18:47:12.750Z",
    "id": "515mAURoV"
  },
  {
    "_id": "lOUZApwhi",
    "name": "20columns-whileloop",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66faefbe72037a06dbad3ab5",
          "66faefbe72037a06dbad3ab6",
          "66faefbe72037a06dbad3ab7"
        ],
        "fileType": "folder",
        "_id": "66faefbe72037a06dbad3ab4",
        "createdAt": "2024-09-30T18:42:50.590Z",
        "updatedAt": "2024-09-30T18:42:50.590Z",
        "id": "66faefbe72037a06dbad3ab4"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(255);\n\n  let W;\n  let num = 20;\n  let mycolor = \"red\";\n  let i = 0;\n\n  W = width / num;\n\n  while (i < num) {\n    let xpos = i * W;\n\n    if (mouseX > xpos && mouseX < xpos + W) {\n      fill(mycolor);\n    } else {\n      fill(255);\n    }\n\n    rect(xpos, 0, W, height);\n    i += 1;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66faefbe72037a06dbad3ab6",
        "createdAt": "2024-09-30T18:42:50.590Z",
        "updatedAt": "2024-09-30T18:42:50.590Z",
        "id": "66faefbe72037a06dbad3ab6"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "66faefbe72037a06dbad3ab5",
        "createdAt": "2024-09-30T18:42:50.590Z",
        "updatedAt": "2024-09-30T18:42:50.590Z",
        "id": "66faefbe72037a06dbad3ab5"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "66faefbe72037a06dbad3ab7",
        "createdAt": "2024-09-30T18:42:50.590Z",
        "updatedAt": "2024-09-30T18:42:50.590Z",
        "id": "66faefbe72037a06dbad3ab7"
      }
    ],
    "createdAt": "2024-09-30T18:36:46.119Z",
    "updatedAt": "2024-09-30T18:42:50.590Z",
    "id": "lOUZApwhi"
  },
  {
    "_id": "rB78eeeZw",
    "name": "23_03_2020_load array of images in a for loop copy copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67d6eecfcf50d036d312241d",
          "67d6eecfcf50d036d3122442",
          "67d6eecfcf50d036d3122443",
          "67d6eecfcf50d036d3122444"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d312241c",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d312241c"
      },
      {
        "name": "sketch.js",
        "content": "var ims = [];\nvar ii = 0;\n\nfunction preload() {\n  let images = 35;\n  for (let i = 0; i < images; i++) {\n    let path = 'images/' + String(i) + '.jpg'; // Corrected str() issue\n    let loaded_image = loadImage(path); // Use let for local scope\n    ims.push(loaded_image);\n  }\n}\n\nfunction setup() {\n  if (ims.length > 0) {\n    createCanvas(ims[0].width, ims[0].height); // Ensure ims[0] is defined\n  } else {\n    createCanvas(400, 400); // Fallback in case images fail to load\n  }\n  frameRate(5);\n}\n\nfunction draw() {\n  if (ims.length > 0) {\n    image(ims[ii], 0, 0);\n    ii = (ii + 1) % ims.length; // Ensure it loops correctly\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67d6eecfcf50d036d3122443",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d3122443"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d3122442",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d3122442"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d3122444",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d3122444"
      },
      {
        "name": "images",
        "content": "",
        "children": [
          "67d6eecfcf50d036d312241e",
          "67d6eecfcf50d036d312241f",
          "67d6eecfcf50d036d3122420",
          "67d6eecfcf50d036d3122421",
          "67d6eecfcf50d036d3122422",
          "67d6eecfcf50d036d3122423",
          "67d6eecfcf50d036d3122424",
          "67d6eecfcf50d036d3122425",
          "67d6eecfcf50d036d3122426",
          "67d6eecfcf50d036d3122427",
          "67d6eecfcf50d036d3122428",
          "67d6eecfcf50d036d3122429",
          "67d6eecfcf50d036d312242a",
          "67d6eecfcf50d036d312242b",
          "67d6eecfcf50d036d312242c",
          "67d6eecfcf50d036d312242d",
          "67d6eecfcf50d036d312242e",
          "67d6eecfcf50d036d312242f",
          "67d6eecfcf50d036d3122430",
          "67d6eecfcf50d036d3122431",
          "67d6eecfcf50d036d3122432",
          "67d6eecfcf50d036d3122433",
          "67d6eecfcf50d036d3122434",
          "67d6eecfcf50d036d3122435",
          "67d6eecfcf50d036d3122436",
          "67d6eecfcf50d036d3122437",
          "67d6eecfcf50d036d3122438",
          "67d6eecfcf50d036d3122439",
          "67d6eecfcf50d036d312243a",
          "67d6eecfcf50d036d312243b",
          "67d6eecfcf50d036d312243c",
          "67d6eecfcf50d036d312243d",
          "67d6eecfcf50d036d312243e",
          "67d6eecfcf50d036d312243f",
          "67d6eecfcf50d036d3122440",
          "67d6eecfcf50d036d3122441"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d312241d",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d312241d"
      },
      {
        "name": "3.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d3122435",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d3122435"
      },
      {
        "name": "4.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d312243c",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d312243c"
      },
      {
        "name": "2.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d312242a",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d312242a"
      },
      {
        "name": "5.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d312243d",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d312243d"
      },
      {
        "name": "6.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d312243e",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d312243e"
      },
      {
        "name": "7.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d312243f",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d312243f"
      },
      {
        "name": "8.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d3122440",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d3122440"
      },
      {
        "name": "9.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d3122441",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d3122441"
      },
      {
        "name": "10.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d3122420",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d3122420"
      },
      {
        "name": "11.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d3122421",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d3122421"
      },
      {
        "name": "12.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d3122422",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d3122422"
      },
      {
        "name": "13.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d3122423",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d3122423"
      },
      {
        "name": "14.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d3122424",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d3122424"
      },
      {
        "name": "15.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d3122425",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d3122425"
      },
      {
        "name": "16.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d3122426",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d3122426"
      },
      {
        "name": "17.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d3122427",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d3122427"
      },
      {
        "name": "18.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d3122428",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d3122428"
      },
      {
        "name": "19.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d3122429",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d3122429"
      },
      {
        "name": "20.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d312242b",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d312242b"
      },
      {
        "name": "21.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d312242c",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d312242c"
      },
      {
        "name": "22.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d312242d",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d312242d"
      },
      {
        "name": "23.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d312242e",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d312242e"
      },
      {
        "name": "24.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d312242f",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d312242f"
      },
      {
        "name": "25.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d3122430",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d3122430"
      },
      {
        "name": "26.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d3122431",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d3122431"
      },
      {
        "name": "27.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d3122432",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d3122432"
      },
      {
        "name": "28.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d3122433",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d3122433"
      },
      {
        "name": "29.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d3122434",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d3122434"
      },
      {
        "name": "30.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d3122436",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d3122436"
      },
      {
        "name": "31.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d3122437",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d3122437"
      },
      {
        "name": "32.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d3122438",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d3122438"
      },
      {
        "name": "33.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d3122439",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d3122439"
      },
      {
        "name": "34.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d312243a",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d312243a"
      },
      {
        "name": "35.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d312243b",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d312243b"
      },
      {
        "name": "0.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d312241e",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d312241e"
      },
      {
        "name": "1.jpg",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6eecfcf50d036d312241f",
        "createdAt": "2020-03-23T10:32:34.011Z",
        "updatedAt": "2020-03-23T10:32:34.011Z",
        "id": "67d6eecfcf50d036d312241f"
      }
    ],
    "createdAt": "2025-03-16T15:31:27.894Z",
    "updatedAt": "2025-03-16T15:31:27.894Z",
    "id": "rB78eeeZw"
  },
  {
    "_id": "dHFN4LjAy",
    "name": "Accents copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67aba3957d53feea4aac831e",
          "67aba3957d53feea4aac831f",
          "67aba3957d53feea4aac8322",
          "67aba3957d53feea4aac8323"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67aba3957d53feea4aac831d",
        "createdAt": "2021-02-18T23:42:03.898Z",
        "updatedAt": "2021-02-18T23:42:03.898Z",
        "id": "67aba3957d53feea4aac831d"
      },
      {
        "name": "sketch.js",
        "content": "// Create a Player object and load the \"kick.mp3\" file\nconst drum = new Tone.Player(\"samples/505/kick.mp3\");\n\n// Connect the player output to the computer's audio output\ndrum.toDestination();\n\n// Set the tempo to 120 beats per minute\nTone.Transport.bpm.value = 120;\n\n// Set the time signature to 4/4.\nTone.Transport.timeSignature = [3, 4];\n\n// Create a loop: call playBeat every quarter note\nTone.Transport.scheduleRepeat(playDrum, \"4n\");\n\nfunction playDrum(time) {\n  // Tone's position gives us a string:\n  // bar:beat:sixteenth\n  // Slice the string by \":\" and get the number in the second position (the beat)\n  let beat = Tone.Transport.position.split(\":\")[1];\n  console.log(beat);\n\n  // Play the first beat louder than the rest.\n  // Try changing the time signature above and listen.\n  if (beat == 0) {\n    drum.volume.rampTo(2, 0.05);\n  } else {\n    drum.volume.rampTo(-20, 0.05);\n  }\n  drum.start(time);\n}\n\n// let snarePattern = [0, 1, 0, 1];\n// let kickPattern = [1, 0, 1, 0];\n\n// let cells = [\n//   [0, 1, 0, 1],\n//   [1, 1, 1, 0],\n// ];\n\n// function playBeat(time) {\n//   let beat = Tone.Transport.position.split(\":\")[1];\n//   if (cells[0][beat] == 1) {\n//     kit.player(\"snare\").start(time);\n//   }\n//   if (cells[1][beat] == 1) {\n//     kit.player(\"kick\").start(time);\n//   }\n// }\n\n// Interface: p5 functions\nfunction setup() {\n  btn = createButton(\"play\");\n  btn.mousePressed(togglePlay);\n  btn.position(0, 0);\n}\n\nfunction togglePlay() {\n  if (Tone.Transport.state == \"started\") {\n    Tone.Transport.pause();\n    btn.html(\"play\");\n  } else {\n    Tone.Transport.start();\n    btn.html(\"pause\");\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67aba3957d53feea4aac8322",
        "createdAt": "2021-02-18T23:42:03.898Z",
        "updatedAt": "2021-02-18T23:42:03.898Z",
        "id": "67aba3957d53feea4aac8322"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/tone/14.8.9/Tone.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67aba3957d53feea4aac831e",
        "createdAt": "2021-02-18T23:42:03.898Z",
        "updatedAt": "2021-02-18T23:42:03.898Z",
        "id": "67aba3957d53feea4aac831e"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67aba3957d53feea4aac8323",
        "createdAt": "2021-02-18T23:42:03.898Z",
        "updatedAt": "2021-02-18T23:42:03.898Z",
        "id": "67aba3957d53feea4aac8323"
      },
      {
        "name": "samples",
        "content": "",
        "children": [
          "67aba3957d53feea4aac8320"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67aba3957d53feea4aac831f",
        "createdAt": "2021-02-18T23:42:03.898Z",
        "updatedAt": "2021-02-18T23:42:03.898Z",
        "id": "67aba3957d53feea4aac831f"
      },
      {
        "name": "505",
        "content": "",
        "children": [
          "67aba3957d53feea4aac8321"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67aba3957d53feea4aac8320",
        "createdAt": "2021-02-18T23:42:03.898Z",
        "updatedAt": "2021-02-18T23:42:03.898Z",
        "id": "67aba3957d53feea4aac8320"
      },
      {
        "name": "kick.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/9da4ef93-09ca-4da1-afa3-d02a2b3b09e2.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67aba3957d53feea4aac8321",
        "createdAt": "2021-02-18T23:42:03.898Z",
        "updatedAt": "2021-02-18T23:42:03.898Z",
        "id": "67aba3957d53feea4aac8321"
      }
    ],
    "createdAt": "2025-02-11T19:23:02.530Z",
    "updatedAt": "2025-02-11T19:23:02.530Z",
    "id": "dHFN4LjAy"
  },
  {
    "_id": "b_d_4WQU0",
    "name": "Accents COPY",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67aba536878b676babd6a4b5",
          "67aba536878b676babd6a4b6",
          "67aba536878b676babd6a4b9",
          "67aba536878b676babd6a4ba"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67aba536878b676babd6a4b4",
        "createdAt": "2025-02-11T19:30:38.137Z",
        "updatedAt": "2025-02-11T19:30:38.137Z",
        "id": "67aba536878b676babd6a4b4"
      },
      {
        "name": "sketch.js",
        "content": "// MISSING SNARE MP3, THAT'S THE BUG!!!!!!\n\n// Create a Player object and load the \"kick.mp3\" file\n// Create a Players object and load the drum kit files\nconst kit = new Tone.Players({\n  \"kick\": \"samples/505/kick.mp3\", \n  \"snare\": \"samples/505/snare.mp3\",\n  \"hh\": \"samples/505/hh.mp3\",\n  \"hho\": \"samples/505/hho.mp3\"\n});\nkit.toDestination();\n\n// // Connect the player output to the computer's audio output\n// drum.toDestination();\n\n// Set the tempo to 120 beats per minute\nTone.Transport.bpm.value = 120;\n\n// Set the time signature to 4/4. \nTone.Transport.timeSignature = [3, 4];\n\n// Create a loop: call playBeat every quarter note\nTone.Transport.scheduleRepeat(playBeat, \"4n\");\n\n// let snarePattern = [0, 1, 0, 1];\n// let kickPattern = [1, 0, 1, 0];\n\nlet cells = [\n  [0, 1, 0, 1],\n  [1, 1, 1, 0],\n];\n\nfunction playBeat(time) {\n  let beat = Tone.Transport.position.split(\":\")[1];\n  console.log(beat);\n  if (cells[0][beat] == 1) {\n    kit.player(\"snare\").start(time);\n  }\n  if (cells[1][beat] == 1) {\n    kit.player(\"kick\").start(time);\n  }\n}\n\nfunction playDrum(time) {\n  // Tone's position gives us a string: \n  // bar:beat:sixteenth\n  // Slice the string by \":\" and get the number in the second position (the beat)\n  let beat = Tone.Transport.position.split(\":\")[1];\n  console.log(beat);\n  \n  // Play the first beat louder than the rest.\n  // Try changing the time signature above and listen.\n  if (beat == 0) {\n    drum.volume.rampTo(2, 0.05);\n  } else {\n    drum.volume.rampTo(-20, 0.05);\n  }\n  drum.start(time);\n\n}\n\n// Interface: p5 functions\nfunction setup() {\n  btn = createButton(\"play\");\n  btn.mousePressed(togglePlay);\n  btn.position(0, 0);\n}\n\nfunction togglePlay() {\n  if (Tone.Transport.state == \"started\") {\n    Tone.Transport.pause();\n    btn.html(\"play\");\n  } else {\n    Tone.Transport.start();\n    btn.html(\"pause\");\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67aba536878b676babd6a4b9",
        "createdAt": "2025-02-11T19:30:38.137Z",
        "updatedAt": "2025-02-11T19:30:38.137Z",
        "id": "67aba536878b676babd6a4b9"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/tone/14.8.9/Tone.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67aba536878b676babd6a4b5",
        "createdAt": "2025-02-11T19:30:38.137Z",
        "updatedAt": "2025-02-11T19:30:38.137Z",
        "id": "67aba536878b676babd6a4b5"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67aba536878b676babd6a4ba",
        "createdAt": "2025-02-11T19:30:38.137Z",
        "updatedAt": "2025-02-11T19:30:38.137Z",
        "id": "67aba536878b676babd6a4ba"
      },
      {
        "name": "samples",
        "content": "",
        "children": [
          "67aba536878b676babd6a4b7"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67aba536878b676babd6a4b6",
        "createdAt": "2025-02-11T19:30:38.137Z",
        "updatedAt": "2025-02-11T19:30:38.137Z",
        "id": "67aba536878b676babd6a4b6"
      },
      {
        "name": "505",
        "content": "",
        "children": [
          "67aba536878b676babd6a4b8"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67aba536878b676babd6a4b7",
        "createdAt": "2025-02-11T19:30:38.137Z",
        "updatedAt": "2025-02-11T19:30:38.137Z",
        "id": "67aba536878b676babd6a4b7"
      },
      {
        "name": "kick.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/5336766d-c0a9-4e87-b50e-f3310f9daca5.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67aba536878b676babd6a4b8",
        "createdAt": "2025-02-11T19:30:38.137Z",
        "updatedAt": "2025-02-11T19:30:38.137Z",
        "id": "67aba536878b676babd6a4b8"
      }
    ],
    "createdAt": "2025-02-11T19:29:59.220Z",
    "updatedAt": "2025-02-11T19:30:38.137Z",
    "id": "b_d_4WQU0"
  },
  {
    "_id": "GO-ocOzRP",
    "name": "AccPrec",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66da5884552084db507a51a0",
          "66da5884552084db507a519f",
          "66da5884552084db507a51a1"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66da5884552084db507a51a2",
        "createdAt": "2024-09-06T01:59:24.975Z",
        "updatedAt": "2024-09-06T01:59:24.975Z",
        "id": "66da5884552084db507a51a2"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(533.6, 425);\n  angleMode(DEGREES)\n}\n\nfunction draw() {\n  background(0,255,255);\n  \n  push();\n  rectMode(CENTER);\n  fill(255,0,0);\n  noStroke();\n  rotate(38.5);\n  rect(100,0,1500,40);\n  pop();\n  \n  push();\n  ellipseMode(CENTER);\n  fill(0,200,1);\n  noStroke();\n  ellipse(266.8,212.5,275,200);\n  pop();\n  \n  push();\n  rectMode(CENTER);\n  fill(0,0,128);\n  noStroke();\n  rect(384,192.5,40);\n  pop();\n  \n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66da5884552084db507a519f",
        "createdAt": "2024-09-06T01:59:24.975Z",
        "updatedAt": "2024-09-06T01:59:24.975Z",
        "id": "66da5884552084db507a519f"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66da5884552084db507a51a0",
        "createdAt": "2024-09-06T01:59:24.975Z",
        "updatedAt": "2024-09-06T01:59:24.975Z",
        "id": "66da5884552084db507a51a0"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66da5884552084db507a51a1",
        "createdAt": "2024-09-06T01:59:24.975Z",
        "updatedAt": "2024-09-06T01:59:24.975Z",
        "id": "66da5884552084db507a51a1"
      }
    ],
    "updatedAt": "2024-09-06T01:59:24.975Z",
    "createdAt": "2024-09-06T01:59:24.975Z",
    "id": "GO-ocOzRP"
  },
  {
    "_id": "Nm11vqA10",
    "name": "AnimatedSketch",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66e9f6b6d5b84d15347dcec0",
          "66e9f6b5c0408f1be64ff379",
          "66e9f6b5c0408f1be64ff36f",
          "66e35b8d8f555be1aeb3df49",
          "66e35b8d8f555be1aeb3df48",
          "66e35b8d8f555be1aeb3df4a",
          "66e9f6b5b0ac3f9100a1886c",
          "66e9f6b6b0ac3f9100a18878"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66e35b8d8f555be1aeb3df4b",
        "createdAt": "2024-09-19T16:42:11.134Z",
        "updatedAt": "2024-09-19T16:42:11.134Z",
        "id": "66e35b8d8f555be1aeb3df4b"
      },
      {
        "name": "sketch.js",
        "content": "// function mouseMoved() {\n//   console.log(`Mouse X: ${mouseX}, Mouse Y: ${mouseY}`);\n// }\n\nfunction preload() {\n  img1 = loadImage(\"girls.png\");\n  img2 = loadImage(\"airlock.png\");\n  img3 = loadImage(\"hozier.png\");\n  img4 = loadImage(\"summit.png\");\n  img5 = loadImage(\"you.png\");\n}\n\nlet bg = 0;\nlet mygray = 210;\nlet dia = 25;\nlet R;\nlet G;\nlet B;\nlet imgs;\nlet choice;\nlet BGcolor = [\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"indigo\", \"violet\"];\nlet index = 0;\n\nfunction setup() {\n  createCanvas(400, 400);\n  rectMode(CENTER);\n  angleMode(DEGREES);\n  background(\"black\");\n\n  // randomizes color\n  R = random(0, 255);\n  G = random(0, 255);\n  B = random(0, 255);\n  c1 = color(R, G, B);\n  c2 = color(B, R, G);\n  imgs = [img1, img2, img3, img4, img5];\n  choice = random(imgs);\n\n  setInterval(changeBG, 800);\n}\n\nfunction draw() {\n  \n  // resize the album images\n  img1.resize(50, 0);\n  img2.resize(50, 0);\n  img3.resize(50, 0);\n  img4.resize(50, 0);\n  img5.resize(50, 0);\n\n  // wire for headphones\n  push();\n  noFill();\n  strokeWeight(5);\n  stroke(BGcolor[index]);\n  beginShape();\n  curveVertex(205, 117);\n  curveVertex(205, 117);\n  curveVertex(175, 88);\n  curveVertex(113, 87);\n  curveVertex(112, 117);\n  curveVertex(132, 125);\n  curveVertex(150, 117);\n  curveVertex(144, 85);\n  curveVertex(107, 52);\n  curveVertex(59, 37);\n  curveVertex(22, 58);\n  curveVertex(26, 109);\n  curveVertex(66, 112);\n  curveVertex(100, 137);\n  curveVertex(112, 187);\n  curveVertex(84, 234);\n  curveVertex(38, 237);\n  curveVertex(18, 257);\n  curveVertex(24, 307);\n  curveVertex(149, 350);\n  curveVertex(285, 412);\n  curveVertex(285, 412);\n  endShape();\n  pop();\n\n  // creating the gradient background\n  let grad = drawingContext.createLinearGradient(100, 200, 200, 200);\n\n  grad.addColorStop(0, c1);\n  grad.addColorStop(0.8, c2);\n\n  // draw rect\n  drawingContext.save();\n  drawingContext.fillStyle = grad;\n\n  // gradient is behind ipod\n  stroke(BGcolor[index]);\n  rotate(-20);\n  rect(130, 255, 100, 150, 10);\n\n  // restore p5js style\n  drawingContext.restore();\n\n  // screen & buttons\n  push();\n  rotate(-20);\n  stroke(BGcolor[index]);\n  fill(\"white\");\n  rect(130, 220, 75, 55, 10);\n  pop();\n\n  // wire for headphones\n  push();\n  noFill();\n  strokeWeight(5);\n  stroke(BGcolor[index]);\n  beginShape();\n  curveVertex(460, 269);\n  curveVertex(403, 350);\n  curveVertex(362, 244);\n  curveVertex(359, 118);\n  curveVertex(359, 118);\n  endShape();\n  beginShape();\n  curveVertex(460, 269);\n  curveVertex(403, 350);\n  curveVertex(362, 244);\n  curveVertex(286, 187);\n  curveVertex(275, 130);\n  curveVertex(275, 130);\n  endShape();\n  pop();\n\n  // speakers of headphones\n  push();\n  fill(255);\n  stroke(BGcolor[index]);\n  ellipse(363, 116, 15, 25);\n  ellipse(279, 129, 15, 25);\n  stroke(0);\n  fill(c2);\n  ellipse(282, 129, 10, 25);\n  ellipse(366, 116, 10, 25);\n  pop();\n\n  // large circle\n  push();\n  stroke(BGcolor[index]);\n  fill(\"white\");\n  circle(220, 225, 65);\n  pop();\n\n  // small circle button\n  push();\n  stroke(BGcolor[index]);\n  fill(c2);\n  circle(220, 225, dia);\n  pop();\n\n  // album cover (changes on click of button)\n  push();\n  rotate(-20);\n  image(choice, 105, 195);\n  pop();\n}\n\nfunction mouseClicked() {\n  if (circleHitTest(mouseX, mouseY, 220, 225, dia / 2)) {\n    choice = random(imgs);\n  }\n}\n\nfunction changeBG() {\n  index++;\n\n  if (index >= BGcolor.length) {\n    index = 0;\n  }\n}\n\n// returns true if pX, pY is inside a circle\n// that is centred at cX, cY with radius r\nfunction circleHitTest(pX, pY, cX, cY, radius) {\n  // calculate distance from pX, pY  to centre of circle\n  let d = myDist(pX, pY, cX, cY);\n\n  // if it's less than radius, we have a hit\n  if (d <= radius) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// returns the distance between point P at (pX, pY)\n// and point Q at (qX, qY)\nfunction myDist(pX, pY, qX, qY) {\n  let a = pY - qY; // y difference\n  let b = pX - qX; // x difference\n  let c = sqrt(a * a + b * b);\n  return c;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66e35b8d8f555be1aeb3df48",
        "createdAt": "2024-09-19T16:42:11.134Z",
        "updatedAt": "2024-09-19T16:42:11.134Z",
        "id": "66e35b8d8f555be1aeb3df48"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66e35b8d8f555be1aeb3df49",
        "createdAt": "2024-09-19T16:42:11.134Z",
        "updatedAt": "2024-09-19T16:42:11.134Z",
        "id": "66e35b8d8f555be1aeb3df49"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66e35b8d8f555be1aeb3df4a",
        "createdAt": "2024-09-19T16:42:11.134Z",
        "updatedAt": "2024-09-19T16:42:11.134Z",
        "id": "66e35b8d8f555be1aeb3df4a"
      },
      {
        "name": "hozier.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/33d7f74a-2b27-4cf8-b1a6-90d36cc1c862.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66e9f6b5c0408f1be64ff36f",
        "createdAt": "2024-09-19T16:42:11.134Z",
        "updatedAt": "2024-09-19T16:42:11.134Z",
        "id": "66e9f6b5c0408f1be64ff36f"
      },
      {
        "name": "girls.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/c0740324-927f-4b1c-9554-eae64ed5d53e.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66e9f6b5c0408f1be64ff379",
        "createdAt": "2024-09-19T16:42:11.134Z",
        "updatedAt": "2024-09-19T16:42:11.134Z",
        "id": "66e9f6b5c0408f1be64ff379"
      },
      {
        "name": "summit.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/b9f1df96-0aaa-4845-9ddb-320ae89bdfd9.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66e9f6b5b0ac3f9100a1886c",
        "createdAt": "2024-09-19T16:42:11.134Z",
        "updatedAt": "2024-09-19T16:42:11.134Z",
        "id": "66e9f6b5b0ac3f9100a1886c"
      },
      {
        "name": "you.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/47484624-ee0c-480a-9953-f2f63be0d16d.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66e9f6b6b0ac3f9100a18878",
        "createdAt": "2024-09-19T16:42:11.134Z",
        "updatedAt": "2024-09-19T16:42:11.134Z",
        "id": "66e9f6b6b0ac3f9100a18878"
      },
      {
        "name": "airlock.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/bfeaeff1-cfe1-473c-a4c3-cbf0e9d1dd21.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66e9f6b6d5b84d15347dcec0",
        "createdAt": "2024-09-19T16:42:11.134Z",
        "updatedAt": "2024-09-19T16:42:11.134Z",
        "id": "66e9f6b6d5b84d15347dcec0"
      }
    ],
    "updatedAt": "2024-09-19T16:42:11.134Z",
    "createdAt": "2024-09-12T21:27:12.040Z",
    "id": "Nm11vqA10"
  },
  {
    "_id": "eCxUK3-la",
    "name": "ARDUINO CODE - tinydeskVJ",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67569410dc083b131fda27f9",
          "67569410dc083b131fda27f8",
          "67569410dc083b131fda27fa"
        ],
        "fileType": "folder",
        "_id": "67569410dc083b131fda27fb",
        "createdAt": "2024-12-09T07:00:19.363Z",
        "updatedAt": "2024-12-09T07:00:19.363Z",
        "id": "67569410dc083b131fda27fb"
      },
      {
        "name": "sketch.js",
        "content": "// #include <EncoderStepCounter.h>\n// unsigned int ADCValue;\n\n// // Pin assignments\n// const int rot1PinA = 2; // Rotary encoder 1\n// const int rot1PinB = 3;\n// const int rot1ButtonPin = 4; // Rotary encoder 1 button\n\n// const int rot2PinA = 5; // Rotary encoder 2\n// const int rot2PinB = 6;\n\n// const int slider1Pin = A0;\n// const int slider2Pin = A1;\n// const int slider3Pin = A2;\n// const int slider4Pin = A3;\n\n// const int pot1Pin = A4;\n// const int pot2Pin = A5;\n// const int pot3Pin = A6;\n\n// const int button1Pin = 7;\n// const int button2Pin = 8;\n// const int button3Pin = 9;\n// const int button4Pin = 10;\n// const int button5Pin = 11;\n// const int button6Pin = 12;\n\n// // Rotary encoder instances\n// EncoderStepCounter encoder1(rot1PinA, rot1PinB);\n// EncoderStepCounter encoder2(rot2PinA, rot2PinB);\n\n// // Encoder previous positions\n// int oldRot1 = 0;\n// int oldRot2 = 0;\n\n// // Button state variables for rotary encoder button\n// int rot1_button = 0; // Current state of the rot1 button toggle\n// int lastRot1ButtonState = LOW; // Previous button state\n\n// unsigned long lastDebounceTime = 0; // For debouncing\n// const unsigned long debounceDelay = 50; // Debounce delay in ms\n\n// // Button toggle states and last read states\n// int buttonStates[6] = {0, 0, 0, 0, 0, 0}; // Toggle states for buttons 1-6\n// int lastButtonStates[6] = {LOW, LOW, LOW, LOW, LOW, LOW}; // Previous button states\n// unsigned long lastDebounceTimes[6] = {0, 0, 0, 0, 0, 0}; // Last debounce times\n\n// void setup() {\n// Serial.begin(9600);\n\n// // Initialize encoders\n// encoder1.begin();\n// encoder2.begin();\n\n// attachInterrupt(digitalPinToInterrupt(rot1PinA), interruptRot1, CHANGE);\n// attachInterrupt(digitalPinToInterrupt(rot1PinB), interruptRot1, CHANGE);\n// attachInterrupt(digitalPinToInterrupt(rot2PinA), interruptRot2, CHANGE);\n// attachInterrupt(digitalPinToInterrupt(rot2PinB), interruptRot2, CHANGE);\n\n// // Configure button pins\n// pinMode(rot1ButtonPin, INPUT_PULLUP);\n// pinMode(button1Pin, INPUT_PULLDOWN);\n// pinMode(button2Pin, INPUT_PULLDOWN);\n// pinMode(button3Pin, INPUT_PULLDOWN);\n// pinMode(button4Pin, INPUT_PULLDOWN);\n// pinMode(button5Pin, INPUT_PULLDOWN);\n// pinMode(button6Pin, INPUT_PULLDOWN);\n// }\n\n// void loop() {\n// // Update encoders\n// encoder1.tick();\n// encoder2.tick();\n\n// // Read rotary encoder positions and map to 0-23\n// int rot1 = encoder1.getPosition() % 24;\n// int rot2 = encoder2.getPosition() % 24;\n\n// // Reset encoders if they exceed the range\n// if (rot1 < 0) rot1 += 24;\n// if (rot2 < 0) rot2 += 24;\n\n// // Handle rotary encoder button toggle with debounce\n// int currentRot1ButtonState = digitalRead(rot1ButtonPin);\n// if (currentRot1ButtonState != lastRot1ButtonState) {\n// if (millis() - lastDebounceTime > debounceDelay) {\n// lastDebounceTime = millis();\n// if (currentRot1ButtonState == LOW) { // Button pressed\n// rot1_button = !rot1_button; // Toggle between 0 and 1\n// }\n// }\n// }\n// lastRot1ButtonState = currentRot1ButtonState;\n\n// // Read sliders and map to 0-100\n// int slider1 = map(analogRead(slider1Pin), 0, 1023, 0, 100);\n// int slider2 = map(analogRead(slider2Pin), 0, 1023, 0, 100);\n// int slider3 = map(analogRead(slider3Pin), 0, 1023, 0, 100);\n// int slider4 = map(analogRead(slider4Pin), 0, 1023, 0, 100);\n\n// // Read potentiometers and map to specific ranges\n// int pot1 = map(analogRead(pot1Pin), 0, 1023, 10, 60);\n// int pot2 = map(analogRead(pot2Pin), 0, 1023, 0, 10);\n// int pot3 = map(analogRead(pot3Pin), 0, 1023, 0, 6);\n\n// // Handle button toggles with debounce\n// int buttonPins[6] = {button1Pin, button2Pin, button3Pin, button4Pin, button5Pin, button6Pin};\n// for (int i = 0; i < 6; i++) {\n// int currentButtonState = digitalRead(buttonPins[i]);\n// if (currentButtonState != lastButtonStates[i]) {\n// if (millis() - lastDebounceTimes[i] > debounceDelay) {\n// lastDebounceTimes[i] = millis();\n// if (currentButtonState == HIGH) { // Button pressed\n// buttonStates[i] = !buttonStates[i]; // Toggle state\n// }\n// }\n// }\n// lastButtonStates[i] = currentButtonState;\n// }\n\n// // Print all values in the specified order\n// Serial.print(rot1); Serial.print(',');\n// Serial.print(rot1_button); Serial.print(',');\n// Serial.print(slider1); Serial.print(',');\n// Serial.print(slider2); Serial.print(',');\n// Serial.print(rot2); Serial.print(',');\n// Serial.print(slider3); Serial.print(',');\n// Serial.print(slider4); Serial.print(',');\n// Serial.print(pot1); Serial.print(',');\n// Serial.print(pot2); Serial.print(',');\n// Serial.print(pot3); Serial.print(',');\n// for (int i = 0; i < 6; i++) {\n// Serial.print(buttonStates[i]);\n// if (i < 5) Serial.print(',');\n// }\n// Serial.println();\n\n// delay(100); // Stabilization delay\n// }\n\n// // Interrupt service routines for rotary encoders\n// void interruptRot1() {\n// encoder1.tick();\n// }\n\n// void interruptRot2() {\n// encoder2.tick();\n// }\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67569410dc083b131fda27f8",
        "createdAt": "2024-12-09T07:00:19.363Z",
        "updatedAt": "2024-12-09T07:00:19.363Z",
        "id": "67569410dc083b131fda27f8"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "67569410dc083b131fda27f9",
        "createdAt": "2024-12-09T07:00:19.363Z",
        "updatedAt": "2024-12-09T07:00:19.363Z",
        "id": "67569410dc083b131fda27f9"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "67569410dc083b131fda27fa",
        "createdAt": "2024-12-09T07:00:19.363Z",
        "updatedAt": "2024-12-09T07:00:19.363Z",
        "id": "67569410dc083b131fda27fa"
      }
    ],
    "updatedAt": "2024-12-09T07:00:19.363Z",
    "createdAt": "2024-12-09T06:54:43.267Z",
    "id": "eCxUK3-la"
  },
  {
    "_id": "mBrtVX3ue",
    "name": "Arduino to P5",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67420ca856567f0dfbdb1cc3",
          "67420ca856567f0dfbdb1cc4",
          "67420ca856567f0dfbdb1cc5"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67420ca856567f0dfbdb1cc2",
        "createdAt": "2024-11-23T17:16:37.478Z",
        "updatedAt": "2024-11-23T17:16:37.478Z",
        "id": "67420ca856567f0dfbdb1cc2"
      },
      {
        "name": "sketch.js",
        "content": "// variable to hold an instance of the p5.webserial library:\nconst serial = new p5.WebSerial();\nlet pot1 = 0;\nlet pot2 = 0;\nlet pot3 = 0;\nlet button1 = 0;\nlet button2 = 0;\n\n// HTML button object:\nlet portButton;\nlet inData = []; // for incoming serial data\nlet inString = [];\nlet outByte = 0; // for outgoing data\n\nfunction setup() {\n  // check to see if serial is available:\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n  // if serial is available, add connect/disconnect listeners:\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n  // check for any ports that are available:\n  serial.getPorts();\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n}\n\n// if there's no port selected,\n// make a port select button appear:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n\n// make the port selector window appear:\nfunction choosePort() {\n  if (portButton) portButton.show();\n  serial.requestPort();\n}\n\n// open the selected port, and make the port\n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  serial.open().then(initiateSerial);\n\n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n\n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n\n// read any incoming data:\nfunction serialEvent() {\n  // read from port until new line:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  if (inString != null) {\n    let list = split(trim(inString), \",\");\n    if (list.length > 4) {\n      // conver list items to floats:\n      pot1 = float(list[0]);\n      pot2 = float(list[1]);\n      pot3 = float(list[2]);\n      button1 = float(list[3]);\n      button2 = float(list[4]);\n      console.log(\n        pot1 + \",\" + pot2 + \",\" + pot3 + \",\" + button1 + \",\" + button2\n      );\n      // send a byte to the microcontroller to get new data:\n      serial.write(\"x\");\n    }\n  }\n}\n\n// try to connect if a new serial port\n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n\n// if a port is disconnected:\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n\nfunction closePort() {\n  serial.close();\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67420ca856567f0dfbdb1cc4",
        "createdAt": "2024-11-23T17:16:37.478Z",
        "updatedAt": "2024-11-23T17:16:37.478Z",
        "id": "67420ca856567f0dfbdb1cc4"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n      \n<script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67420ca856567f0dfbdb1cc3",
        "createdAt": "2024-11-23T17:16:37.478Z",
        "updatedAt": "2024-11-23T17:16:37.478Z",
        "id": "67420ca856567f0dfbdb1cc3"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67420ca856567f0dfbdb1cc5",
        "createdAt": "2024-11-23T17:16:37.478Z",
        "updatedAt": "2024-11-23T17:16:37.478Z",
        "id": "67420ca856567f0dfbdb1cc5"
      }
    ],
    "createdAt": "2024-11-23T17:11:04.256Z",
    "updatedAt": "2024-11-23T17:16:37.478Z",
    "id": "mBrtVX3ue"
  },
  {
    "_id": "xp5VZIpGm",
    "name": "Arduino to P5 - soundStorm",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67422fe87db270c1f50ecd37",
          "67422fe87db270c1f50ecd38",
          "67422fe87db270c1f50ecd39",
          "67422fe87db270c1f50ecd3a",
          "67422fe87db270c1f50ecd3b",
          "67422fe87db270c1f50ecd3c",
          "67422fe87db270c1f50ecd3d",
          "67422fe87db270c1f50ecd3e",
          "67422fe87db270c1f50ecd3f"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67422fe87db270c1f50ecd36",
        "createdAt": "2024-12-03T20:46:49.062Z",
        "updatedAt": "2024-12-03T20:46:49.062Z",
        "id": "67422fe87db270c1f50ecd36"
      },
      {
        "name": "sketch.js",
        "content": "// ------------------- Variables -------------------\n\n// Sound and FFT analysis\nlet song;\nlet fft;\nlet mic;\nlet amp, mappedAmp;\n\n// Serial communication variables\nlet num;\nlet light = 0,\n  lightA = 0,\n  lightB = 0,\n  lightC = 0;\nlet rippleA = 0,\n  rippleB = 0,\n  rippleC = 0;\n\n// Frame rate and visual effects\nlet FR = 60; // Frame rate (10 to 60)\nlet blur = 3; // (0 to 10)\nlet BGbutton = 0;\n\n// Grain and transparency\nlet grain;\nlet grainA = 0; // Transparency (0-10)\nlet prevA;\n\nlet rot1 = 0,\n  rot2 = 0;\n\n// Background colors (HSB mode)\nlet hue1 = 0,\n  sat1 = 0,\n  br1 = 0; // Hue, Saturation, Brightness\n\n// Effect colors (HSB mode)\nlet hue2 = 0,\n  sat2 = 100,\n  br2 = 100; // Hue, Saturation, Brightness\nlet hue2A, hue2B, hue2C; // Variants of hue2 for effects\n\n// Ball and ripple properties\nlet bballs = [];\nlet drop = [];\nlet X1 = 0,\n  Y1 = 0,\n  X2 = 0,\n  Y2 = 0,\n  X3 = 0,\n  Y3 = 0;\nlet circleSize1 = 0,\n  circleSize2 = 0,\n  circleSize3 = 0;\nlet opacity1 = 255,\n  opacity2 = 255,\n  opacity3 = 255;\n\n// Line animation coordinates\nlet xCoord1 = 0,\n  yCoord1 = 0,\n  xCoord2 = 0,\n  yCoord2 = 0;\n\n// ------------------- Preload Function -------------------\n// function preload() {\n//   song = loadSound(\"sunshine.mp3\"); // Load the sound file\n// }\n\n// variable to hold an instance of the p5.webserial library:\nconst serial = new p5.WebSerial();\n\n// HTML button object:\nlet portButton;\nlet inData = []; // for incoming serial data\nlet inString = [];\nlet outByte = 0; // for outgoing data\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  createFilmGrain(0, 0, windowWidth, windowHeight, 500, 3); // Initial grain creation\n\n  // Initialize variables and modes\n  xCoord2 = 0;\n  yCoord2 = windowHeight / 2;\n  colorMode(HSB, 360, 100, 100, 100);\n  num = windowWidth * 5;\n\n  // Start the song and FFT analysis\n  initializeSound();\n\n  // Initialize drops and balls\n  for (let i = 0; i < 200; i++) drop[i] = new Drop();\n  for (let i = 0; i <= num; i++) {\n    bballs.push(\n      new Ball(\n        i / 2,\n        random(5, 25),\n        random(20, 50),\n        random(0.3, 0.5),\n        random(100, 200)\n      )\n    );\n  }\n  // check to see if serial is available:\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n  // if serial is available, add connect/disconnect listeners:\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n  // check for any ports that are available:\n  serial.getPorts();\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n}\n\n// ------------------- Draw Function -------------------\nfunction draw() {\n  fft.analyze();\n  // Get amplitude energy from FFT\n  amp = fft.getEnergy(10, 1050);\n\n  // Map amp value to the range 0-100\n  mappedAmp = map(amp, 0, 255, 0, 100);\n\n  frameRate(FR);\n\n  // Set the background color\n  background(hue1, sat1, br1);\n  hue1 = map(rot1, 0, 23, 0, 360);\n  hue2 = map(rot2, 0, 23, 0, 360);\n  // Generate hue variants for effects\n  hue2A = random((hue2 + 0) % 360, (hue2 + 50) % 360);\n  hue2B = random((hue2 + 120) % 360, (hue2 + 190) % 360);\n  hue2C = random((hue2 + 240) % 360, (hue2 + 350) % 360);\n  button();\n  // Draw light effects\n  myLight(200, 100, 230);\n  myLightA(hue2A, sat2, br2);\n  myLightB(hue2B, sat2, br2);\n  myLightC(hue2C, sat2, br2);\n\n  // Update and show drops\n  for (let i = 0; i < 200; i++) {\n    drop[i].show();\n    drop[i].update();\n  }\n\n  // Draw bouncing balls\n  for (let i = 0; i < num; i++) bballs[i].draw();\n\n  // Draw ripple effects\n  myRipple1(hue2A, sat2, br2);\n  myRipple2(hue2B, sat2, br2);\n  myRipple3(hue2C, sat2, br2);\n\n  // Apply visual effects\n  if (blur > 0) filter(BLUR, blur);\n  if (BGbutton === 1) filter(INVERT);\n\n  // Display grain effect\n  // console.log(grainA);\n  if (grainA != prevA) {\n    createFilmGrain(0, 0, windowWidth, windowHeight, 500, 3); // Initial grain creation\n    prevA = grainA;\n  }\n  updateGrain();\n  displayGrain();\n}\n\n// ------------------- Key Pressed Functions -------------------\nfunction keyPressed() {\n  // // Toggle song play/pause with space\n  // if (key === \" \" && song.isPlaying()) song.pause();\n  // else if (key === \" \") song.loop();\n  // // Reset song with left arrow\n  // else if (keyCode === LEFT_ARROW) {\n  //   song.stop();\n  //   song.loop();\n  // } else \n    if (keyCode === 27) {\n    fullscreen(!fullscreen());\n  }\n}\n\nfunction button() {\n  if (rippleA === 1) setRipple1();\n  else if (rippleB === 1) setRipple2();\n  else if (rippleC === 1) setRipple3();\n}\n\n// ------------------- Mouse Interaction Functions -------------------\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n  createFilmGrain(0, 0, windowWidth, windowHeight, 100, 3);\n\n  initializeMic();\n  for (let i = 0; i < 200; i++) drop[i] = new Drop();\n}\n\n// ------------------- Initialize Mic -------------------\n\nfunction initializeSound() {\n     // Start FFT analysis\n  fft = new p5.FFT();\n  mic = new p5.AudioIn();\n  mic.start();\n  fft.setInput(mic);\n}\n\n\n// ------------------- Utility Functions -------------------\n\nfunction myLight(H, S, B) {\n  for (var i = 0; i < 300; i++) {\n    xCoord1 = xCoord2;\n    yCoord1 = yCoord2;\n    xCoord2 = xCoord1 + int(random(-20, 20));\n    yCoord2 = yCoord1 + int(random(-10, 20));\n    if (light === 1) {\n      stroke(H, S, B);\n    } else {\n      noStroke();\n    }\n    strokeWeight(random(3, 5));\n    strokeJoin(MITER);\n    line(xCoord1, yCoord1, xCoord2, yCoord2);\n\n    if (\n      (xCoord2 > windowWidth) |\n      (xCoord2 < 0) |\n      (yCoord2 > windowHeight) |\n      (yCoord2 < 0)\n    ) {\n      xCoord2 = int(random(0, windowWidth));\n      yCoord2 = 0;\n    }\n  }\n}\nfunction myLightA(H, S, B) {\n  for (var i = 0; i < 300; i++) {\n    xCoord1 = xCoord2;\n    yCoord1 = yCoord2;\n    xCoord2 = xCoord1 + int(random(-20, 20));\n    yCoord2 = yCoord1 + int(random(-10, 20));\n    strokeWeight(random(3, 5));\n    strokeJoin(MITER);\n    line(xCoord1, yCoord1, xCoord2, yCoord2);\n\n    if (\n      (xCoord2 > windowWidth) |\n      (xCoord2 < 0) |\n      (yCoord2 > windowHeight) |\n      (yCoord2 < 0)\n    ) {\n      if (lightA === 1) {\n        strokeWeight(10);\n        stroke(H, S, B);\n      } else {\n        noStroke();\n      }\n      xCoord2 = int(random(0, windowWidth));\n      yCoord2 = 0;\n    }\n  }\n}\n\nfunction myLightB(H, S, B) {\n  for (var i = 0; i < 300; i++) {\n    xCoord1 = xCoord2;\n    yCoord1 = yCoord2;\n    xCoord2 = xCoord1 + int(random(-20, 20));\n    yCoord2 = yCoord1 + int(random(-10, 20));\n    strokeWeight(random(3, 5));\n    strokeJoin(MITER);\n    line(xCoord1, yCoord1, xCoord2, yCoord2);\n\n    if (\n      (xCoord2 > windowWidth) |\n      (xCoord2 < 0) |\n      (yCoord2 > windowHeight) |\n      (yCoord2 < 0)\n    ) {\n      if (lightB === 1) {\n        strokeWeight(10);\n        stroke(H, S, B);\n      } else {\n        noStroke();\n      }\n      xCoord2 = int(random(0, windowWidth));\n      yCoord2 = 0;\n    }\n  }\n}\n\nfunction myLightC(H, S, B) {\n  for (var i = 0; i < 300; i++) {\n    xCoord1 = xCoord2;\n    yCoord1 = yCoord2;\n    xCoord2 = xCoord1 + int(random(-20, 20));\n    yCoord2 = yCoord1 + int(random(-10, 20));\n    strokeWeight(random(3, 5));\n    strokeJoin(MITER);\n    line(xCoord1, yCoord1, xCoord2, yCoord2);\n\n    if (\n      (xCoord2 > windowWidth) |\n      (xCoord2 < 0) |\n      (yCoord2 > windowHeight) |\n      (yCoord2 < 0)\n    ) {\n      if (lightC === 1) {\n        strokeWeight(10);\n        stroke(H, S, B);\n      } else {\n        noStroke();\n      }\n      xCoord2 = int(random(0, windowWidth));\n      yCoord2 = 0;\n    }\n  }\n}\n\n// Set properties for Ripple1\nfunction setRipple1() {\n  X1 = random(0, windowWidth);\n  Y1 = random(windowHeight / 5, windowHeight);\n  circleSize1 = 0;\n  opacity1 = 255;\n}\n\n// Set properties for Ripple2\nfunction setRipple2() {\n  X2 = random(0, windowWidth);\n  Y2 = random(windowHeight / 5, windowHeight);\n  circleSize2 = 0;\n  opacity2 = 255;\n}\n\n// Set properties for Ripple3\nfunction setRipple3() {\n  X3 = random(0, windowWidth);\n  Y3 = random(windowHeight / 5, windowHeight);\n  circleSize3 = 0;\n  opacity3 = 255;\n}\n\nfunction myRipple1(H, S, B) {\n  circleSize1 += 10;\n  opacity1 -= 3;\n  noFill();\n  strokeWeight(10);\n  stroke(H, S, B, opacity1);\n  circle(X1, Y1, circleSize1);\n  circle(X1, Y1, circleSize1 * 0.75);\n  circle(X1, Y1, circleSize1 * 0.5);\n}\n\nfunction myRipple2(H, S, B) {\n  circleSize2 += 10;\n  opacity2 -= 3;\n  noFill();\n  strokeWeight(10);\n  stroke(H, S, B, opacity2);\n  circle(X2, Y2, circleSize2);\n  circle(X2, Y2, circleSize2 * 0.75);\n  circle(X2, Y2, circleSize2 * 0.5);\n}\nfunction myRipple3(H, S, B) {\n  circleSize3 += 10;\n  opacity3 -= 3;\n  noFill();\n  strokeWeight(10);\n  stroke(H, S, B, opacity3);\n  circle(X3, Y3, circleSize3);\n  circle(X3, Y3, circleSize3 * 0.75);\n  circle(X3, Y3, circleSize3 * 0.5);\n}\n\n// Update the grain buffer when alpha changes\nfunction updateGrain() {\n  grain.update();\n}\n\n// Display the grain buffer on the canvas\nfunction displayGrain() {\n  grain.display();\n}\n\n// Create a film grain effect\nfunction createFilmGrain(x, y, w, h, patternSize, sampleSize) {\n  grain = new FilmGrainEffect(\n    x,\n    y,\n    w,\n    h,\n    patternSize,\n    sampleSize,\n    grainA * 0.1\n  );\n}\n\n// ------------------- Classes -------------------\n\n// Drop class (animated falling shapes)\nfunction Drop() {\n  this.x = random(0, windowWidth);\n  this.y = random(0, -windowHeight);\n\n  this.show = function () {\n    stroke(hue2B, sat2, br2);\n    strokeWeight(0.5);\n    fill(hue2B, sat2, br2);\n    ellipse(this.x, this.y, random(5, 10), random(5, 10));\n  };\n\n  this.update = function () {\n    this.speed = mappedAmp / 4;\n    this.gravity = 1.05;\n    this.y += this.speed * this.gravity;\n\n    if (this.y > windowHeight) {\n      this.y = random(0, -windowHeight);\n      this.gravity = 0;\n    }\n  };\n}\n\n// Ball class (bouncing balls)\nclass Ball {\n  constructor(xpos, ypos, w, dy, limit) {\n    this.xpos = xpos;\n    this.ypos = ypos;\n    this.w = w;\n    this.dy = dy;\n    this.limit = limit;\n    this.colorOffset = random(240, 350); // Random offset for hue, relative to hue2\n  }\n\n  getColor() {\n    // Compute color dynamically based on current hue2 and the random offset\n    return (hue2 + this.colorOffset) % 360;\n  }\n\n  draw() {\n    this.move();\n    noStroke();\n    fill(this.getColor(), 100, mappedAmp * 1.5, 10);\n    circle(this.xpos, this.ypos, this.w);\n  }\n\n  move() {\n    if (this.ypos + this.w / 2 >= this.limit || this.ypos - this.w / 2 <= -20) {\n      this.dy = -this.dy;\n    }\n    this.ypos += this.dy;\n  }\n}\n\n// ------------------- Serial Stuff -------------------\n// if there's no port selected,\n// make a port select button appear:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n\n// make the port selector window appear:\nfunction choosePort() {\n  if (portButton) portButton.show();\n  serial.requestPort();\n}\n\n// open the selected port, and make the port\n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  serial.open().then(initiateSerial);\n\n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n\n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n\n// read any incoming data:\nfunction serialEvent() {\n  // read from port until new line:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  if (inString != null) {\n    let list = split(trim(inString), \",\");\n    if (list.length > 15) {\n      // conver list items to floats:\n      rot1 = float(list[0]);\n      BGbutton = float(list[1]);\n      sat1 = float(list[2]);\n      br1 = float(list[3]);\n      rot2 = float(list[4]);\n      sat2 = float(list[5]);\n      br2 = float(list[6]);\n      FR = float(list[7]);\n      blur = float(list[8]);\n      grainA = float(list[9]);\n      rippleA = float(list[10]);\n      rippleB = float(list[11]);\n      rippleC = float(list[12]);\n      lightA = float(list[13]);\n      lightB = float(list[14]);\n      lightC = float(list[15]);\n\n      // console.log(\n      //   rot1 +\n      //     \",\" +\n      //     BGbutton +\n      //     \",\" +\n      //     sat1 +\n      //     \",\" +\n      //     br1 +\n      //     \",\" +\n      //     rot2 +\n      //     \",\" +\n      //     sat2 +\n      //     \",\" +\n      //     br2 +\n      //     \",\" +\n      //     FR +\n      //     \",\" +\n      //     blur +\n      //     \",\" +\n      //     grainA +\n      //     \",\" +\n      //     rippleA +\n      //     \",\" +\n      //     rippleB +\n      //     \",\" +\n      //     rippleC +\n      //     \",\" +\n      //     lightA +\n      //     \",\" +\n      //     lightB +\n      //     \",\" +\n      //     lightC\n      // );\n      // send a byte to the microcontroller to get new data:\n      serial.write(\"x\");\n    }\n  }\n}\n\n// try to connect if a new serial port\n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n\n// if a port is disconnected:\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n\nfunction closePort() {\n  serial.close();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67422fe87db270c1f50ecd3c",
        "createdAt": "2024-12-03T20:46:49.062Z",
        "updatedAt": "2024-12-03T20:46:49.062Z",
        "id": "67422fe87db270c1f50ecd3c"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n      <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"FilmGrainEffect.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67422fe87db270c1f50ecd3a",
        "createdAt": "2024-12-03T20:46:49.062Z",
        "updatedAt": "2024-12-03T20:46:49.062Z",
        "id": "67422fe87db270c1f50ecd3a"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67422fe87db270c1f50ecd3d",
        "createdAt": "2024-12-03T20:46:49.062Z",
        "updatedAt": "2024-12-03T20:46:49.062Z",
        "id": "67422fe87db270c1f50ecd3d"
      },
      {
        "name": "sunshine.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/960f04ee-afbb-4bb2-81cb-ae2fe5607938.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67422fe87db270c1f50ecd3e",
        "createdAt": "2024-12-03T20:46:49.062Z",
        "updatedAt": "2024-12-03T20:46:49.062Z",
        "id": "67422fe87db270c1f50ecd3e"
      },
      {
        "name": "shiver-short.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/a6951f0b-362d-4337-9e60-64e3d1e99725.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67422fe87db270c1f50ecd3b",
        "createdAt": "2024-12-03T20:46:49.062Z",
        "updatedAt": "2024-12-03T20:46:49.062Z",
        "id": "67422fe87db270c1f50ecd3b"
      },
      {
        "name": "beach.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/1d748218-76db-41d0-b28e-8ced924f6cf7.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67422fe87db270c1f50ecd38",
        "createdAt": "2024-12-03T20:46:49.062Z",
        "updatedAt": "2024-12-03T20:46:49.062Z",
        "id": "67422fe87db270c1f50ecd38"
      },
      {
        "name": "sweet.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/2887c48a-4bf0-44c0-bdb8-0c84ab6cf3fe.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67422fe87db270c1f50ecd3f",
        "createdAt": "2024-12-03T20:46:49.062Z",
        "updatedAt": "2024-12-03T20:46:49.062Z",
        "id": "67422fe87db270c1f50ecd3f"
      },
      {
        "name": "data.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/5e8cfb75-fb45-41d0-9f28-fc6de21a0c24.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67422fe87db270c1f50ecd39",
        "createdAt": "2024-12-03T20:46:49.062Z",
        "updatedAt": "2024-12-03T20:46:49.062Z",
        "id": "67422fe87db270c1f50ecd39"
      },
      {
        "name": "FilmGrainEffect.js",
        "content": "class Effects {\n  static counter = 0;\n}\n\nclass FilmGrainEffect {\n  static counter = 0;\n  static index = 0;\n\n  constructor(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.id = \"FilmGrain_\" + Effects.counter++;\n    this.reset(x, y, w, h, patternSize, sampleSize, patternAlpha);\n  }\n\n  reset(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.samples = [];\n    this.currentSampleSet = [];\n    this.patternRefreshInterval = 4;\n    FilmGrainEffect.counter = 0;\n    FilmGrainEffect.index = 0;\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.p = patternSize;\n    this.s = sampleSize;\n    this.a = map(patternAlpha, 0, 1, 0, 255);\n    for (let i = 0; i < sampleSize; i++) {\n      this.samples.push(\n        this.pattern(this.x, this.y, this.w, this.h, this.p, this.a)\n      );\n    }\n  }\n\n  add(effect) {}\n\n  pattern(x, y, w, h, patternSize, patternAlpha) {\n    // luodaan uusi p5 canvas || create new p5 canvas\n    let pg = createGraphics(patternSize, patternSize);\n    pg.pixelDensity(1);\n\n    // luodaan kohina | create noise\n    pg.loadPixels();\n    for (var _y = 0; _y < patternSize; _y += 1) {\n      for (var _x = 0; _x < patternSize; _x += 1) {\n        let i = (_x + _y * patternSize) * 4;\n        let value = (Math.random() * 255) | 0;\n        pg.pixels[i] = value;\n        pg.pixels[i + 1] = value;\n        pg.pixels[i + 2] = value;\n        pg.pixels[i + 3] = patternAlpha;\n      }\n    }\n    pg.updatePixels();\n\n    // lasketaan kohinapalojen paikat ja tallennetaan ne | calculate position of noise pieces and save them\n    let xlen = w / patternSize;\n    let ylen = h / patternSize;\n\n    let samples = [];\n    for (let i = 0; i < ylen; i++) {\n      for (let j = 0; j < xlen; j++) {\n        let _x = x + patternSize * j;\n        let _y = y + patternSize * i;\n        samples.push({\n          canvas: pg,\n          x: _x,\n          y: _y,\n          w: patternSize,\n          h: patternSize,\n        });\n      }\n    }\n    \n    return samples;\n  }\n\n  update(data) {\n    if (FilmGrainEffect.counter++ === this.patternRefreshInterval) {\n      FilmGrainEffect.counter = 0;\n      FilmGrainEffect.index++;\n      if (!this.samples[FilmGrainEffect.index]) {\n        FilmGrainEffect.index = 0;\n      }\n    }\n    this.currentSampleSet = this.samples[FilmGrainEffect.index];\n  }\n\n  display() {\n    for (let sample of this.currentSampleSet) {\n      image(sample.canvas, sample.x, sample.y, sample.w, sample.h);\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.currentSampleSet;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67422fe87db270c1f50ecd37",
        "createdAt": "2024-12-03T20:46:49.062Z",
        "updatedAt": "2024-12-03T20:46:49.062Z",
        "id": "67422fe87db270c1f50ecd37"
      }
    ],
    "createdAt": "2024-11-23T19:41:29.522Z",
    "updatedAt": "2024-12-03T20:46:49.062Z",
    "id": "xp5VZIpGm"
  },
  {
    "_id": "hJieNZN61",
    "name": "Arduino to P5 - soundWaves",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "674278c7a8f0f1534f3728a2",
          "674278c7a8f0f1534f3728a3",
          "674278c7a8f0f1534f3728a4",
          "674278c7a8f0f1534f3728a5",
          "674278c7a8f0f1534f3728a6",
          "674278c7a8f0f1534f3728a7",
          "674278c7a8f0f1534f3728a8",
          "674278c7a8f0f1534f3728a9",
          "674278c7a8f0f1534f3728aa"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "674278c7a8f0f1534f3728a1",
        "createdAt": "2024-12-03T17:29:11.271Z",
        "updatedAt": "2024-12-03T17:29:11.271Z",
        "id": "674278c7a8f0f1534f3728a1"
      },
      {
        "name": "sketch.js",
        "content": "// ------------------- Variables -------------------\n\n// Sound and FFT analysis\nlet song;\nlet fft;\nlet mic;\n\n// Waveform visualization\nlet pointSize = 2;\nlet wavefX = 0;\nlet wavefWidth;\n\n// Frame rate and visual effects\nlet FR = 10; // Frame rate (10 to 60)\nlet blur = 0;\nlet BGbutton = 0; // Background inversion toggle\n\n// Grain and transparency\nlet grain;\nlet grainA = 0; // Transparency (0-10)\nlet prevA;\n\nlet rot1 = 0,\n  rot2 = 0;\n\n// Background colors (HSB mode)\nlet hue1 = 0,\n  sat1 = 0,\n  br1 = 0; // Hue, Saturation, Brightness\n\n// Effect colors (HSB mode)\nlet hue2 = 0,\n  sat2 = 100,\n  br2 = 100; // Hue, Saturation, Brightness\nlet hue2A, hue2B, hue2C; // Variants of hue2 for effects\n\n// variable to hold an instance of the p5.webserial library:\nconst serial = new p5.WebSerial();\n\n// HTML button object:\nlet portButton;\nlet inData = []; // for incoming serial data\nlet inString = [];\nlet outByte = 0; // for outgoing data\n\n// ------------------- Preload Function -------------------\n// function preload() {\n//   // Load the sound file\n//   song = loadSound(\"beach.mp3\");\n// }\n\n// ------------------- Setup Function -------------------\nfunction setup() {\n  // Create canvas and initialize color mode\n  createCanvas(windowWidth, windowHeight);\n  colorMode(HSB, 360, 100, 100, 100);\n\n  // Create film grain effect and start the song\n  createFilmGrain(0, 0, windowWidth, windowHeight, 500, 3);\n  // song.loop();\n\n  // Initialize FFT for waveform analysis\n  initializeMic()\n\n  // Set waveform width to match canvas width\n  wavefWidth = windowWidth;\n  \n    // check to see if serial is available:\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n  // if serial is available, add connect/disconnect listeners:\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n  // check for any ports that are available:\n  serial.getPorts();\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n}\n\n// ------------------- Draw Function -------------------\nfunction draw() {\n  // Set frame rate and draw the background\n  frameRate(FR);\n  hue1 = map(rot1, 0, 23, 0, 360);\n  hue2 = map(rot2, 0, 23, 0, 360);\n  background(hue1, sat1, br1, 40); // Transparent background with alpha\n\n  // Generate hue variants for visual effects\n  hue2A = (hue2 + 240) % 360;\n  hue2B = (hue2 + 290) % 360;\n  hue2C = (hue2 + 330) % 360;\n\n  // Draw waveform and points\n  myWave(hue2B, sat2, br2);\n  wavePoints(hue2A, hue2C, sat2, br2);\n\n  // Apply visual effects if enabled\n  if (blur > 0) filter(BLUR, blur);\n  if (BGbutton === 1) filter(INVERT);\n\n  // Display grain effect\n  // console.log(grainA);\n  if (grainA != prevA) {\n    createFilmGrain(0, 0, windowWidth, windowHeight, 500, 3); // Initial grain creation\n    prevA = grainA;\n  }\n  updateGrain();\n  displayGrain();\n}\n\n// ------------------- Initialize Mic -------------------\n\nfunction initializeMic() {\n     // Start FFT analysis\n  fft = new p5.FFT();\n  mic = new p5.AudioIn();\n  mic.start();\n  fft.setInput(mic);\n}\n\n\n// ------------------- Resize Handling -------------------\nfunction windowResized() {\n  // Resize canvas and recreate film grain\n  resizeCanvas(windowWidth, windowHeight);\n  createFilmGrain(0, 0, windowWidth, windowHeight, 500, 3);\n\n  initializeMic();\n\n  // Update waveform width\n  wavefWidth = windowWidth;\n}\n\n// ------------------- Waveform Functions -------------------\n\n// Draw waveform points with color variations\nfunction wavePoints(H1, H2, S, B) {\n  let waveArray = fft.waveform();\n\n  for (let i = 0; i < wavefWidth; i++) {\n    // Map pixel positions to waveform data\n    let waveIndex = floor(map(i, 0, wavefWidth, 0, waveArray.length));\n\n    // Calculate point coordinates\n    let x = i;\n    let y = waveArray[waveIndex] * 200 + windowHeight / 2;\n\n    // Draw points with alternating colors\n    noStroke();\n    pointSize = random(2, 4);\n    fill(H1, S, B);\n    rect(x, y - 100, pointSize);\n    fill(H2, S, B);\n    rect(x, y + 100, pointSize);\n  }\n}\n\n// Draw the waveform as a line\nfunction myWave(H, S, B) {\n  let myWaveform = fft.waveform();\n\n  // Set up the line style\n  noFill();\n  stroke(H, S, B);\n  strokeWeight(2);\n\n  // Draw the waveform\n  beginShape();\n  for (let w = 0; w < myWaveform.length; w++) {\n    let wh = myWaveform[w] / 2; // Normalize waveform values\n    let y = map(wh, -1, 1, 0, windowHeight); // Map to canvas height\n    let x = map(w, 0, myWaveform.length, 0, windowWidth); // Map to canvas width\n    vertex(x, y);\n  }\n  endShape();\n}\n\n// ------------------- Grain Effect Functions -------------------\n\n// Update the grain buffer when alpha changes\nfunction updateGrain() {\n  grain.update();\n}\n\n// Display the grain buffer on the canvas\nfunction displayGrain() {\n  grain.display();\n}\n\n// Create a film grain effect\nfunction createFilmGrain(x, y, w, h, patternSize, sampleSize) {\n  grain = new FilmGrainEffect(\n    x,\n    y,\n    w,\n    h,\n    patternSize,\n    sampleSize,\n    grainA * 0.1\n  );\n}\n\n// ------------------- Key Interaction -------------------\n\n// Key handling for song control\nfunction keyPressed() {\n  // Toggle song play/pause with space\n  // if (key === \" \" && song.isPlaying()) song.pause();\n  // else if (key === \" \") song.loop();\n  // // Restart song with left arrow\n  // else if (keyCode === LEFT_ARROW) {\n  //   song.stop();\n  //   song.loop();\n  // } else \n    if (keyCode === 27) {\n    fullscreen(!fullscreen());\n  }\n}\n\n// ------------------- Serial Stuff -------------------\n// if there's no port selected,\n// make a port select button appear:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n\n// make the port selector window appear:\nfunction choosePort() {\n  if (portButton) portButton.show();\n  serial.requestPort();\n}\n\n// open the selected port, and make the port\n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  serial.open().then(initiateSerial);\n\n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n\n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n\n// read any incoming data:\nfunction serialEvent() {\n  // read from port until new line:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  if (inString != null) {\n    let list = split(trim(inString), \",\");\n    if (list.length > 15) {\n      // convert list items to floats:\n      rot1 = float(list[0]);\n      BGbutton = float(list[1]);\n      sat1 = float(list[2]);\n      br1 = float(list[3]);\n      rot2 = float(list[4]);\n      sat2 = float(list[5]);\n      br2 = float(list[6]);\n      FR = float(list[7]);\n      blur = float(list[8]);\n      grainA = float(list[9]);\n      // rippleA = float(list[10]);\n      // rippleB = float(list[11]);\n      // rippleC = float(list[12]);\n      // lightA = float(list[13]);\n      // lightB = float(list[14]);\n      // lightC = float(list[15]);\n\n      // console.log(\n      //   rot1 +\n      //     \",\" +\n      //     BGbutton +\n      //     \",\" +\n      //     sat1 +\n      //     \",\" +\n      //     br1 +\n      //     \",\" +\n      //     rot2 +\n      //     \",\" +\n      //     sat2 +\n      //     \",\" +\n      //     br2 +\n      //     \",\" +\n      //     FR +\n      //     \",\" +\n      //     blur +\n      //     \",\" +\n      //     grainA +\n      //     \",\" +\n      //     rippleA +\n      //     \",\" +\n      //     rippleB +\n      //     \",\" +\n      //     rippleC +\n      //     \",\" +\n      //     lightA +\n      //     \",\" +\n      //     lightB +\n      //     \",\" +\n      //     lightC\n      // );\n      // send a byte to the microcontroller to get new data:\n      serial.write(\"x\");\n    }\n  }\n}\n\n// try to connect if a new serial port\n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n\n// if a port is disconnected:\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n\nfunction closePort() {\n  serial.close();\n}\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "674278c7a8f0f1534f3728a7",
        "createdAt": "2024-12-03T17:29:11.271Z",
        "updatedAt": "2024-12-03T17:29:11.271Z",
        "id": "674278c7a8f0f1534f3728a7"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\">\n  </script>\n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"FilmGrainEffect.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674278c7a8f0f1534f3728a5",
        "createdAt": "2024-12-03T17:29:11.271Z",
        "updatedAt": "2024-12-03T17:29:11.271Z",
        "id": "674278c7a8f0f1534f3728a5"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674278c7a8f0f1534f3728a8",
        "createdAt": "2024-12-03T17:29:11.271Z",
        "updatedAt": "2024-12-03T17:29:11.271Z",
        "id": "674278c7a8f0f1534f3728a8"
      },
      {
        "name": "sunshine.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/92741c85-74f6-4980-a2f1-8329920bf840.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674278c7a8f0f1534f3728a9",
        "createdAt": "2024-12-03T17:29:11.271Z",
        "updatedAt": "2024-12-03T17:29:11.271Z",
        "id": "674278c7a8f0f1534f3728a9"
      },
      {
        "name": "shiver-short.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/470fc9f0-9842-43f9-9f3e-ed2306b518c3.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674278c7a8f0f1534f3728a6",
        "createdAt": "2024-12-03T17:29:11.271Z",
        "updatedAt": "2024-12-03T17:29:11.271Z",
        "id": "674278c7a8f0f1534f3728a6"
      },
      {
        "name": "beach.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/43a48175-4e6b-4e65-8c8b-c28645da5604.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674278c7a8f0f1534f3728a3",
        "createdAt": "2024-12-03T17:29:11.271Z",
        "updatedAt": "2024-12-03T17:29:11.271Z",
        "id": "674278c7a8f0f1534f3728a3"
      },
      {
        "name": "sweet.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/4d165776-b3a2-406c-9694-eee6d5d8345c.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674278c7a8f0f1534f3728aa",
        "createdAt": "2024-12-03T17:29:11.271Z",
        "updatedAt": "2024-12-03T17:29:11.271Z",
        "id": "674278c7a8f0f1534f3728aa"
      },
      {
        "name": "data.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/b9bd25a0-c3b5-411b-a518-3fe0988a157f.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674278c7a8f0f1534f3728a4",
        "createdAt": "2024-12-03T17:29:11.271Z",
        "updatedAt": "2024-12-03T17:29:11.271Z",
        "id": "674278c7a8f0f1534f3728a4"
      },
      {
        "name": "FilmGrainEffect.js",
        "content": "class Effects {\n  static counter = 0;\n}\n\nclass FilmGrainEffect {\n  static counter = 0;\n  static index = 0;\n\n  constructor(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.id = \"FilmGrain_\" + Effects.counter++;\n    this.reset(x, y, w, h, patternSize, sampleSize, patternAlpha);\n  }\n\n  reset(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.samples = [];\n    this.currentSampleSet = [];\n    this.patternRefreshInterval = 4;\n    FilmGrainEffect.counter = 0;\n    FilmGrainEffect.index = 0;\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.p = patternSize;\n    this.s = sampleSize;\n    this.a = map(patternAlpha, 0, 1, 0, 255);\n    for (let i = 0; i < sampleSize; i++) {\n      this.samples.push(\n        this.pattern(this.x, this.y, this.w, this.h, this.p, this.a)\n      );\n    }\n  }\n\n  add(effect) {}\n\n  pattern(x, y, w, h, patternSize, patternAlpha) {\n    // luodaan uusi p5 canvas || create new p5 canvas\n    let pg = createGraphics(patternSize, patternSize);\n    pg.pixelDensity(1);\n\n    // luodaan kohina | create noise\n    pg.loadPixels();\n    for (var _y = 0; _y < patternSize; _y += 1) {\n      for (var _x = 0; _x < patternSize; _x += 1) {\n        let i = (_x + _y * patternSize) * 4;\n        let value = (Math.random() * 255) | 0;\n        pg.pixels[i] = value;\n        pg.pixels[i + 1] = value;\n        pg.pixels[i + 2] = value;\n        pg.pixels[i + 3] = patternAlpha;\n      }\n    }\n    pg.updatePixels();\n\n    // lasketaan kohinapalojen paikat ja tallennetaan ne | calculate position of noise pieces and save them\n    let xlen = w / patternSize;\n    let ylen = h / patternSize;\n\n    let samples = [];\n    for (let i = 0; i < ylen; i++) {\n      for (let j = 0; j < xlen; j++) {\n        let _x = x + patternSize * j;\n        let _y = y + patternSize * i;\n        samples.push({\n          canvas: pg,\n          x: _x,\n          y: _y,\n          w: patternSize,\n          h: patternSize,\n        });\n      }\n    }\n    \n    return samples;\n  }\n\n  update(data) {\n    if (FilmGrainEffect.counter++ === this.patternRefreshInterval) {\n      FilmGrainEffect.counter = 0;\n      FilmGrainEffect.index++;\n      if (!this.samples[FilmGrainEffect.index]) {\n        FilmGrainEffect.index = 0;\n      }\n    }\n    this.currentSampleSet = this.samples[FilmGrainEffect.index];\n  }\n\n  display() {\n    for (let sample of this.currentSampleSet) {\n      image(sample.canvas, sample.x, sample.y, sample.w, sample.h);\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.currentSampleSet;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674278c7a8f0f1534f3728a2",
        "createdAt": "2024-12-03T17:29:11.271Z",
        "updatedAt": "2024-12-03T17:29:11.271Z",
        "id": "674278c7a8f0f1534f3728a2"
      }
    ],
    "createdAt": "2024-11-24T00:52:23.825Z",
    "updatedAt": "2024-12-03T17:29:11.271Z",
    "id": "hJieNZN61"
  },
  {
    "_id": "a5ek9RVQU",
    "name": "audioVisualizer-VJ",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67ab64e1ebb2da01c13381fe",
          "67ab64e1ebb2da01c13381ff",
          "67ab64e1ebb2da01c1338200",
          "67ab64e1ebb2da01c1338201",
          "67ab64e1ebb2da01c1338202",
          "67ab64e1ebb2da01c1338203",
          "67ab64e1ebb2da01c1338204",
          "67ab64e1ebb2da01c1338205",
          "67ab64e1ebb2da01c1338206"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67ab64e1ebb2da01c13381fd",
        "createdAt": "2025-02-11T15:24:38.817Z",
        "updatedAt": "2025-02-11T15:24:38.817Z",
        "id": "67ab64e1ebb2da01c13381fd"
      },
      {
        "name": "sketch.js",
        "content": "// reference materials:\n\n// https://editor.p5js.org/jesse_harding/sketches/0szF7gcAx\n// https://p5js.org/reference/p5/lerpColor/\n// https://editor.p5js.org/evebdn/sketches/O9G35ueZv\n// https://editor.p5js.org/luisa_NYU/sketches/jnextrr-a\n// https://tonejs.github.io/docs/15.0.4/classes/Player.html\n\nlet mic, analyzer;\nlet stars = [];\nlet numStars = 400;\nlet beatActive = false;\nlet darkActive = false;\nlet pluckActive = false;\nlet breezeActive = false;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  makeStars();\n\n  // Set up microphone input\n  mic = new Tone.UserMedia();\n  analyzer = new Tone.Waveform(4096);\n  mic.connect(analyzer);\n}\n\nfunction draw() {\n  background(0);\n\n  if (darkActive) {\n    let waveform = analyzer.getValue(); // Get waveform data\n\n    // Calculate average intensity\n    let avgAmp =\n      waveform.reduce((sum, val) => sum + abs(val), 0) / waveform.length;\n\n    // Map intensity to alpha (more sound = more visible color)\n    let alpha = map(avgAmp, 0, 1, 50, 255);\n\n    let c1 = color(255, 5, 30, alpha); // Apply dynamic alpha\n    let c2 = color(0, 0, 0, alpha);\n\n    for (let y = 0; y < height; y++) {\n      let n = map(y, 0, height, 0, 1);\n      let bg = lerpColor(c1, c2, n);\n      stroke(bg);\n      line(0, y, width, y);\n    }\n  }\n\n  showStars();\n\n  // Waveform visualization when \"1\" is pressed\n  if (beatActive) {\n    let waveform = analyzer.getValue();\n    stroke(0);\n    strokeWeight(2);\n    beginShape();\n    vertex(0, height / 2);\n    for (let i = 0; i < waveform.length; i++) {\n      let alpha = map(abs(waveform[i]), 0, 1, 100, 255); // Higher intensity = more visible\n      fill(0, 0, 255, alpha);\n      let x = map(i, 0, waveform.length, 0, width);\n      let y = map(waveform[i], -1, 1, height * 0.6, height); // More contrast in peaks\n      vertex(x, y);\n    }\n    vertex(width, height);\n    vertex(0, height);\n    endShape();\n  }\n}\n\nfunction keyTyped() {\n  if (key === \"1\") {\n    beatActive = !beatActive;\n    if (beatActive) {\n      mic.open();\n    } else {\n      mic.close();\n    }\n  }\n  if (key === \"2\") darkActive = !darkActive;\n  if (key === \"3\") pluckActive = !pluckActive;\n  if (key === \"4\") {\n    breezeActive = !breezeActive;\n    if (breezeActive) makeStars(); // Refresh stars on activation\n  }\n}\n\nfunction makeStars() {\n  for (let i = 0; i < numStars; i++) {\n    stars[i] = createVector(random(width), random(height), random(1, 6));\n  }\n}\n\nfunction showStars() {\n  for (let i = 0; i < numStars; i++) {\n    if (breezeActive) {\n      stars[i].x += stars[i].z * 0.5;\n      if (stars[i].x > width) {\n        stars[i].x = 0;\n        stars[i].y = random(height);\n      }\n    }\n\n    if (pluckActive) {\n      let c3 = color(\"#3D27DE\");\n      let c4 = color(200);\n      let randC = lerpColor(c3, c4, random(0, 1));\n      stroke(0);\n      strokeWeight(1);\n      fill(randC);\n    } else {\n      stroke(0);\n      strokeWeight(1);\n      fill(\"#3D27DE\");\n    }\n    ellipse(stars[i].x, stars[i].y, stars[i].z, stars[i].z);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67ab64e1ebb2da01c1338205",
        "createdAt": "2025-02-11T15:24:38.817Z",
        "updatedAt": "2025-02-11T15:24:38.817Z",
        "id": "67ab64e1ebb2da01c1338205"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.1/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.1/addons/p5.dom.min.js\"></script>\n    <script src=\"https://unpkg.com/tone@15.0.4/build/Tone.js\"></script>\n    <script src=\"SimplePlayer.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ab64e1ebb2da01c1338203",
        "createdAt": "2025-02-11T15:24:38.817Z",
        "updatedAt": "2025-02-11T15:24:38.817Z",
        "id": "67ab64e1ebb2da01c1338203"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ab64e1ebb2da01c1338206",
        "createdAt": "2025-02-11T15:24:38.817Z",
        "updatedAt": "2025-02-11T15:24:38.817Z",
        "id": "67ab64e1ebb2da01c1338206"
      },
      {
        "name": "SimplePlayer.js",
        "content": "// a subclass of Tone.Player that adds a progress function to it.\n// The only permitted playbackRate is 1.\n\nclass SimplePlayer extends Tone.Player {\n  constructor(...args){\n    super(...args);\n    this.playbackRate = 1;\n  }\n  \n  start(...args){\n    // assuming args[0] is always time\n    this.startTime = args[0];\n    super.start(...args);\n  }\n  \n  progress(){\n    return (Tone.now() - this.startTime) / this._buffer.duration;\n  }\n  \n  // disable setting playbackRate to anything other than 1\n  set playbackRate(rate) {\n    if(rate != 1) throw new Error(\"Setting the playbackRate value to any value other than 1 is disabled in SimplePlayer. If required, use Tone.Player instead.\");\n  }\n}\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ab64e1ebb2da01c13381fe",
        "createdAt": "2025-02-11T15:24:38.817Z",
        "updatedAt": "2025-02-11T15:24:38.817Z",
        "id": "67ab64e1ebb2da01c13381fe"
      },
      {
        "name": "beat.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/fb92a269-9c98-4285-afb6-d649d5f28651.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ab64e1ebb2da01c13381ff",
        "createdAt": "2025-02-11T15:24:38.817Z",
        "updatedAt": "2025-02-11T15:24:38.817Z",
        "id": "67ab64e1ebb2da01c13381ff"
      },
      {
        "name": "dark.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/be35b728-9b99-4613-8e68-2acdb3ab81bd.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ab64e1ebb2da01c1338202",
        "createdAt": "2025-02-11T15:24:38.817Z",
        "updatedAt": "2025-02-11T15:24:38.817Z",
        "id": "67ab64e1ebb2da01c1338202"
      },
      {
        "name": "pluck.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/f028ef47-83bc-41c9-be44-dd8a2dd74076.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ab64e1ebb2da01c1338204",
        "createdAt": "2025-02-11T15:24:38.817Z",
        "updatedAt": "2025-02-11T15:24:38.817Z",
        "id": "67ab64e1ebb2da01c1338204"
      },
      {
        "name": "breeze.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/495a2c91-6a34-4bc9-b641-be305ab32a32.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ab64e1ebb2da01c1338200",
        "createdAt": "2025-02-11T15:24:38.817Z",
        "updatedAt": "2025-02-11T15:24:38.817Z",
        "id": "67ab64e1ebb2da01c1338200"
      },
      {
        "name": "comp.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/9621212b-e9e3-49ac-87ef-f35d489d08fa.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ab64e1ebb2da01c1338201",
        "createdAt": "2025-02-11T15:24:38.817Z",
        "updatedAt": "2025-02-11T15:24:38.817Z",
        "id": "67ab64e1ebb2da01c1338201"
      }
    ],
    "createdAt": "2025-02-11T14:55:30.350Z",
    "updatedAt": "2025-02-11T15:24:38.817Z",
    "id": "a5ek9RVQU"
  },
  {
    "_id": "kzkOoTUIa",
    "name": "Beyonce End of Time Mixer OO and labels COPY",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67991aaa8f9386189fa49c6d",
          "67991aaa8f9386189fa49c6e",
          "67991aaa8f9386189fa49c6f",
          "67991aaa8f9386189fa49c70",
          "67991aaa8f9386189fa49c7d"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67991aaa8f9386189fa49c6c",
        "createdAt": "2025-01-28T17:58:08.328Z",
        "updatedAt": "2025-01-28T17:58:08.328Z",
        "id": "67991aaa8f9386189fa49c6c"
      },
      {
        "name": "sketch.js",
        "content": "// load 4 tracks\n// create 4 sliders\n// connect the value of the sliders to the volume of the tracks\n\nlet trackNames = [\n  \"adlibs\", \n  \"bass\", \n  \"drums1\", \n  \"drums2\", \n  \"fx\", \n  \"horns\", \n  \"percussion\", \n  \"strings\", \n  \"vox1\", \n  \"vox2\", \n  \"vox3\", \n  \"vox4\" \n];\nlet tracks = [];\nlet playButton;\n\nfunction setup() {\n  createCanvas(540, 400);\n  colorMode(HSB);\n  noStroke();\n  \n  for(let i = 0; i < trackNames.length; i++){\n    tracks[i] = new Track(i, trackNames[i], \"stems/\" + trackNames[i] + \".mp3\");\n  }\n  \n  // I've added a play button directly to index.html\n  playButton = select(\"#play\");\n  playButton.mousePressed(play);    \n   \n  Tone.loaded().then(function(){  \n    select(\"#play\").removeAttribute(\"disabled\");\n  });\n}\n\nfunction draw() {\n  background(220);\n  for(let i = 0; i < tracks.length; i++){\n    tracks[i].draw();\n  }\n}\n\nfunction play(){  \n    Tone.start();\n    for(let i = 0; i < tracks.length; i++){\n      tracks[i].player.start();\n    }  \n}\n\n\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67991aaa8f9386189fa49c6f",
        "createdAt": "2025-01-28T17:58:08.328Z",
        "updatedAt": "2025-01-28T17:58:08.328Z",
        "id": "67991aaa8f9386189fa49c6f"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://unpkg.com/tone@15.0.4/build/Tone.js\"></script>\n    <script src=\"Track.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <button id=\"play\" disabled=\"disabled\">Play</button>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67991aaa8f9386189fa49c6e",
        "createdAt": "2025-01-28T17:58:08.328Z",
        "updatedAt": "2025-01-28T17:58:08.328Z",
        "id": "67991aaa8f9386189fa49c6e"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n\ninput {\n    -webkit-appearance: slider-vertical;\n    width: 36px;\n    height: 100px;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67991aaa8f9386189fa49c7d",
        "createdAt": "2025-01-28T17:58:08.328Z",
        "updatedAt": "2025-01-28T17:58:08.328Z",
        "id": "67991aaa8f9386189fa49c7d"
      },
      {
        "name": "stems",
        "content": "",
        "children": [
          "67991aaa8f9386189fa49c71",
          "67991aaa8f9386189fa49c72",
          "67991aaa8f9386189fa49c73",
          "67991aaa8f9386189fa49c74",
          "67991aaa8f9386189fa49c75",
          "67991aaa8f9386189fa49c76",
          "67991aaa8f9386189fa49c77",
          "67991aaa8f9386189fa49c78",
          "67991aaa8f9386189fa49c79",
          "67991aaa8f9386189fa49c7a",
          "67991aaa8f9386189fa49c7b",
          "67991aaa8f9386189fa49c7c"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67991aaa8f9386189fa49c70",
        "createdAt": "2025-01-28T17:58:08.328Z",
        "updatedAt": "2025-01-28T17:58:08.328Z",
        "id": "67991aaa8f9386189fa49c70"
      },
      {
        "name": "horns.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/4414e17f-5c4e-4225-9e8b-a4fd08f98006.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67991aaa8f9386189fa49c76",
        "createdAt": "2025-01-28T17:58:08.328Z",
        "updatedAt": "2025-01-28T17:58:08.328Z",
        "id": "67991aaa8f9386189fa49c76"
      },
      {
        "name": "strings.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/5c96e3f3-20ac-4fd5-9738-cfb5a3ba5833.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67991aaa8f9386189fa49c78",
        "createdAt": "2025-01-28T17:58:08.328Z",
        "updatedAt": "2025-01-28T17:58:08.328Z",
        "id": "67991aaa8f9386189fa49c78"
      },
      {
        "name": "adlibs.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/18f5fdbe-0025-4bca-aaa6-6347125f533f.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67991aaa8f9386189fa49c71",
        "createdAt": "2025-01-28T17:58:08.328Z",
        "updatedAt": "2025-01-28T17:58:08.328Z",
        "id": "67991aaa8f9386189fa49c71"
      },
      {
        "name": "bass.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/e5a3ab45-5051-4d35-9b92-0811a05b755f.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67991aaa8f9386189fa49c72",
        "createdAt": "2025-01-28T17:58:08.328Z",
        "updatedAt": "2025-01-28T17:58:08.328Z",
        "id": "67991aaa8f9386189fa49c72"
      },
      {
        "name": "drums2.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/075496c1-67eb-46c9-8625-74d7724f0f5b.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67991aaa8f9386189fa49c74",
        "createdAt": "2025-01-28T17:58:08.328Z",
        "updatedAt": "2025-01-28T17:58:08.328Z",
        "id": "67991aaa8f9386189fa49c74"
      },
      {
        "name": "drums1.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/716279c2-a5d8-4987-9f93-ab60b97df35b.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67991aaa8f9386189fa49c73",
        "createdAt": "2025-01-28T17:58:08.328Z",
        "updatedAt": "2025-01-28T17:58:08.328Z",
        "id": "67991aaa8f9386189fa49c73"
      },
      {
        "name": "fx.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/663ea8af-7955-43f6-92fc-55760d3787b2.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67991aaa8f9386189fa49c75",
        "createdAt": "2025-01-28T17:58:08.328Z",
        "updatedAt": "2025-01-28T17:58:08.328Z",
        "id": "67991aaa8f9386189fa49c75"
      },
      {
        "name": "percussion.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/12c4018e-83a9-4f02-8f5c-74620bf8f7a5.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67991aaa8f9386189fa49c77",
        "createdAt": "2025-01-28T17:58:08.328Z",
        "updatedAt": "2025-01-28T17:58:08.328Z",
        "id": "67991aaa8f9386189fa49c77"
      },
      {
        "name": "vox1.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/0687e7ce-3ca9-45cc-9809-19993a2d20f7.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67991aaa8f9386189fa49c79",
        "createdAt": "2025-01-28T17:58:08.328Z",
        "updatedAt": "2025-01-28T17:58:08.328Z",
        "id": "67991aaa8f9386189fa49c79"
      },
      {
        "name": "vox2.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/f2d7b8f1-0195-404e-9b65-176cadf94d6e.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67991aaa8f9386189fa49c7a",
        "createdAt": "2025-01-28T17:58:08.328Z",
        "updatedAt": "2025-01-28T17:58:08.328Z",
        "id": "67991aaa8f9386189fa49c7a"
      },
      {
        "name": "vox3.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/13a55cd6-6d9d-436e-b501-00a866b09b89.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67991aaa8f9386189fa49c7b",
        "createdAt": "2025-01-28T17:58:08.328Z",
        "updatedAt": "2025-01-28T17:58:08.328Z",
        "id": "67991aaa8f9386189fa49c7b"
      },
      {
        "name": "vox4.mp3",
        "content": "",
        "url": null,
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67991aaa8f9386189fa49c7c",
        "createdAt": "2025-01-28T17:58:08.328Z",
        "updatedAt": "2025-01-28T17:58:08.328Z",
        "id": "67991aaa8f9386189fa49c7c"
      },
      {
        "name": "Track.js",
        "content": "class Track{\n  constructor(i, name, url){\n    this.i = i;\n    \n    this.player = new Tone.Player(url);\n    this.player.toDestination();\n    this.meter = new Tone.Meter();\n    this.meter.normalRange = true;\n    this.player.connect(this.meter);\n    \n    this.color = color(random(0, 360), 100, 100);\n    \n    this.slider = createSlider(-60, 0);\n    this.slider.input(this.setVolume.bind(this));\n    // this.label = createSpan(name);\n  }\n  setVolume(){\n    this.player.volume.rampTo(this.slider.value());\n  }\n  draw(){\n    fill(100);\n    rect(this.i*40, 0, 40, height);\n    fill(this.color);\n    let h = this.meter.getValue()*height*2;\n    rect(this.i*40, height-h, 40, height);\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67991aaa8f9386189fa49c6d",
        "createdAt": "2025-01-28T17:58:08.328Z",
        "updatedAt": "2025-01-28T17:58:08.328Z",
        "id": "67991aaa8f9386189fa49c6d"
      }
    ],
    "createdAt": "2025-01-28T17:58:03.969Z",
    "updatedAt": "2025-01-28T17:58:08.328Z",
    "id": "kzkOoTUIa"
  },
  {
    "_id": "GlSgE48uL",
    "name": "blendMode cycler",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67b4a968fb93ceda7ef4feaf",
          "67b4a968fb93ceda7ef4feae",
          "67b4a968fb93ceda7ef4feb0"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67b4a968fb93ceda7ef4feb1",
        "createdAt": "2025-02-18T15:48:07.650Z",
        "updatedAt": "2025-02-18T15:48:07.650Z",
        "id": "67b4a968fb93ceda7ef4feb1"
      },
      {
        "name": "sketch.js",
        "content": "function createBlendModeCycler(modes) {\n  let index = 0;\n  \n  return function () {\n    blendMode(modes[index]);\n    console.log(\"Current Blend Mode:\", modes[index]);\n    index = (index + 1) % modes.length;\n  };\n}\n\n// Usage in a sketch\nlet cycleBlendMode;\n\nfunction setup() {\n  createCanvas(400, 400);\n  // blendMode(BLEND)\n  // background(220);\n  cycleBlendMode = createBlendModeCycler([\n    BLEND, ADD, DARKEST, LIGHTEST, DIFFERENCE, EXCLUSION, MULTIPLY, SCREEN, REPLACE, HARD_LIGHT, SOFT_LIGHT,DODGE,OVERLAY,BURN\n  ]);\n}\n\nfunction draw() {\n \n  fill(255, 0, 0,);\n  ellipse(200, 200, 150);\n  \n  fill(0, 0, 255);\n  rect(150, 150, 100);\n}\n\nfunction keyPressed() {\n  if (key === ' ') {\n    cycleBlendMode();\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67b4a968fb93ceda7ef4feae",
        "createdAt": "2025-02-18T15:48:07.650Z",
        "updatedAt": "2025-02-18T15:48:07.650Z",
        "id": "67b4a968fb93ceda7ef4feae"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b4a968fb93ceda7ef4feaf",
        "createdAt": "2025-02-18T15:48:07.650Z",
        "updatedAt": "2025-02-18T15:48:07.650Z",
        "id": "67b4a968fb93ceda7ef4feaf"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b4a968fb93ceda7ef4feb0",
        "createdAt": "2025-02-18T15:48:07.650Z",
        "updatedAt": "2025-02-18T15:48:07.650Z",
        "id": "67b4a968fb93ceda7ef4feb0"
      }
    ],
    "updatedAt": "2025-02-18T15:48:07.650Z",
    "createdAt": "2025-02-18T15:42:01.615Z",
    "id": "GlSgE48uL"
  },
  {
    "_id": "sSiJ8faIW",
    "name": "bloodmoon-clock",
    "updatedAt": "2024-03-27T16:04:14.188Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "65f0311f082922d18a7d9ced",
          "65f0311f082922d18a7d9cec",
          "65f0311f082922d18a7d9cee"
        ],
        "fileType": "folder",
        "_id": "65f0311f082922d18a7d9cef",
        "isSelectedFile": false,
        "createdAt": "2024-03-27T16:04:14.188Z",
        "updatedAt": "2024-03-27T16:04:14.188Z",
        "id": "65f0311f082922d18a7d9cef"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(600, 400);\n  frameRate(1);\n  colorMode(RGB, 255);\n  rectMode(CENTER); \n  background(\"#2E0000\");\n}\n\nfunction star(x, y, radius1, radius2, npoints) {\n  let angle = TWO_PI / npoints;\n  let halfAngle = angle / 2.0;\n  beginShape();\n  for (let a = 0; a < TWO_PI; a += angle) {\n    let sx = x + cos(a) * radius2;\n    let sy = y + sin(a) * radius2;\n    vertex(sx, sy);\n    sx = x + cos(a + halfAngle) * radius1;\n    sy = y + sin(a + halfAngle) * radius1;\n    vertex(sx, sy);\n  }\n  endShape(CLOSE);\n}\n\nfunction draw() {\nif (second() === 0) {\n  background(\"#2E0000\");\n}\n  push();\n      stroke('255');\n      randXcord = random(0, width);\n      randYcord = random(0, height);\n      star(randXcord, randYcord, 0.5, 1, 4); \n  pop();\n  push();\n    drawingContext.save();\n    translate(width/2, height);\n    rotate(PI/2);\n    rotate(map(hour(), 0.1, 24, PI, TWO_PI));\n    stroke(\"#2E0000\");\n    fill(\"#c03e1c\");\n    circle(0, -200, 100);\n    fill(\"#2E0000\");\n    drawingContext.clip();\n    noStroke();\n    m = minute();\n    minmap = map(m, 0, 60, -100, 100);\n    ellipse(minmap, -200, 100, 100);\n    drawingContext.restore();\n  pop();\n  push();   \n}\n",
        "children": [],
        "fileType": "file",
        "_id": "65f0311f082922d18a7d9cec",
        "isSelectedFile": true,
        "createdAt": "2024-03-27T16:04:14.188Z",
        "updatedAt": "2024-03-27T16:04:14.188Z",
        "id": "65f0311f082922d18a7d9cec"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "65f0311f082922d18a7d9ced",
        "isSelectedFile": false,
        "createdAt": "2024-03-27T16:04:14.188Z",
        "updatedAt": "2024-03-27T16:04:14.188Z",
        "id": "65f0311f082922d18a7d9ced"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "65f0311f082922d18a7d9cee",
        "isSelectedFile": false,
        "createdAt": "2024-03-27T16:04:14.188Z",
        "updatedAt": "2024-03-27T16:04:14.188Z",
        "id": "65f0311f082922d18a7d9cee"
      }
    ],
    "createdAt": "2024-03-13T16:51:46.347Z",
    "id": "sSiJ8faIW"
  },
  {
    "_id": "QtITvl1ZF",
    "name": "blur-pixels",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6723b5f625a5a99464f47bc5",
          "6723b5f625a5a99464f47bc4",
          "6723b5f625a5a99464f47bc6",
          "6723b62f25a5a99464f47bc8"
        ],
        "fileType": "folder",
        "_id": "6723b5f625a5a99464f47bc7",
        "createdAt": "2024-10-31T17:10:18.601Z",
        "updatedAt": "2024-10-31T17:10:18.601Z",
        "id": "6723b5f625a5a99464f47bc7"
      },
      {
        "name": "sketch.js",
        "content": "let img;\n\nfunction preload() {\n  img = loadImage(\"thorn.jpeg\");\n}\n\nfunction setup() {\n  img.resize(400, 0);\n  createCanvas(img.width, img.height);\n}\n\nfunction pixNeighbors(x, y) {\n  if (x + 1 < img.width && y < img.height) {\n    let index = 4 * (x + y * img.width);\n    let index1 = 4 * (x + 1 + y * img.width);\n\n    img.pixels[index] = (img.pixels[index] + img.pixels[index1]) / 2;\n    img.pixels[index + 1] =\n      (img.pixels[index + 1] + img.pixels[index1 + 1]) / 2;\n    img.pixels[index + 2] =\n      (img.pixels[index + 2] + img.pixels[index1 + 2]) / 2;\n  }\n}\n\nfunction myFilter() {\n  img.loadPixels();\n  for (let i = 0; i < img.width; i++) {\n    for (let j = 0; j < img.height; j++) {\n      // let index = 4 * (i + j * img.width);\n      pixNeighbors(i, j);\n      // let b =\n      //   (img.pixels[index] + img.pixels[index + 1] + img.pixels[index + 2]) / 3;\n      // img.pixels[index] = b;\n      // img.pixels[index + 1] = b;\n      // img.pixels[index + 2] = b;\n    }\n  }\n  img.updatePixels();\n}\n\nfunction draw() {\n  background(220);\n  myFilter();\n  image(img, 0, 0, width, height);\n  noLoop();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6723b5f625a5a99464f47bc4",
        "createdAt": "2024-10-31T17:10:18.601Z",
        "updatedAt": "2024-10-31T17:10:18.601Z",
        "id": "6723b5f625a5a99464f47bc4"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6723b5f625a5a99464f47bc5",
        "createdAt": "2024-10-31T17:10:18.601Z",
        "updatedAt": "2024-10-31T17:10:18.601Z",
        "id": "6723b5f625a5a99464f47bc5"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6723b5f625a5a99464f47bc6",
        "createdAt": "2024-10-31T17:10:18.601Z",
        "updatedAt": "2024-10-31T17:10:18.601Z",
        "id": "6723b5f625a5a99464f47bc6"
      },
      {
        "name": "thorn.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/2d4a75f9-5eb4-4609-8c97-2d6af89df298.jpeg",
        "children": [],
        "fileType": "file",
        "_id": "6723b62f25a5a99464f47bc8",
        "createdAt": "2024-10-31T17:10:18.601Z",
        "updatedAt": "2024-10-31T17:10:18.601Z",
        "id": "6723b62f25a5a99464f47bc8"
      }
    ],
    "updatedAt": "2024-10-31T17:10:18.601Z",
    "createdAt": "2024-10-31T17:00:46.101Z",
    "id": "QtITvl1ZF"
  },
  {
    "_id": "tsmiihnnZ",
    "name": "body segmentation with video",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67d76c7a88289eaba815db84",
          "67d76c7a88289eaba815db85"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d76c7a88289eaba815db70",
        "createdAt": "2025-03-17T00:34:39.250Z",
        "updatedAt": "2025-03-17T00:34:39.250Z",
        "id": "67d76c7a88289eaba815db70"
      },
      {
        "name": "index.html",
        "content": "<!--\r\n  👋 Hello! This is an ml5.js example made and shared with ❤️.\r\n  Learn more about the ml5.js project: https://ml5js.org/\r\n  ml5.js license and Code of Conduct: https://github.com/ml5js/ml5-next-gen/blob/main/LICENSE.md\r\n\r\n  This example demonstrates segmenting a person by body parts with ml5.bodySegmentation.\r\n-->\r\n\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>ml5.js bodySegmentation Parts Example</title>\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js\"></script>\r\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\r\n  </head>\r\n  <body>\r\n    <script src=\"sketch.js\"></script>\r\n  </body>\r\n</html>\r\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d76c7a88289eaba815db84",
        "createdAt": "2025-03-17T00:34:39.250Z",
        "updatedAt": "2025-03-17T00:34:39.250Z",
        "id": "67d76c7a88289eaba815db84"
      },
      {
        "name": "sketch.js",
        "content": "// Body segmentation variables\nlet bodySegmentation;\nlet video;\nlet segmentation;\nlet personImage;\n\nlet options = {\n  maskType: \"parts\",\n};\n\nfunction preload() {\n  bodySegmentation = ml5.bodySegmentation(\"BodyPix\", options);\n}\n\nfunction setup() {\n  createCanvas(640, 480);\n  // Create the video\n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n\n  bodySegmentation.detectStart(video, gotResults);\n\n  // Create an image for segmented output\n  personImage = createImage(video.width, video.height);\n  \n}\n\nfunction draw() {\n  background(0);\n\n  // Display the segmented video grid\n  if (segmentation) {\n    copyForegroundPixels(video, segmentation.mask, personImage);\n    image(personImage, 0, 0, width, height);\n  }\n}\n// callback function for body segmentation\nfunction gotResults(result) {\n  segmentation = result;\n}\n\n// Copy foreground pixels from the video based on the mask\nfunction copyForegroundPixels(imgSource, imgMask, imgResult) {\n  imgSource.loadPixels();\n  imgMask.loadPixels();\n  imgResult.loadPixels();\n\n  const imgWidth = imgSource.width;\n  const imgHeight = imgSource.height;\n  const imgChannels = 4;\n  const numValues = imgWidth * imgHeight * imgChannels;\n  const imgPixels = imgSource.pixels;\n  const maskPixels = imgMask.pixels;\n  const resultPixels = imgResult.pixels;\n\n  for (let i = 0; i < numValues; i += imgChannels) {\n    let maskR = maskPixels[i];\n    let maskG = maskPixels[i + 1];\n    let maskB = maskPixels[i + 2];\n\n    // If the mask pixel is white, clear the result pixel\n    if (maskR === 255 && maskG === 255 && maskB === 255) {\n      resultPixels[i] = 0;\n      resultPixels[i + 1] = 0;\n      resultPixels[i + 2] = 0;\n      resultPixels[i + 3] = 0;\n    } else {\n      // Otherwise, copy the source pixel with applied colors\n      resultPixels[i] = imgPixels[i]; \n      resultPixels[i + 1] = imgPixels[i + 1]; \n      resultPixels[i + 2] = imgPixels[i + 2]; \n      resultPixels[i + 3] = 255; // Ensure the pixel is opaque\n    }\n  }\n\n  imgResult.updatePixels();\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67d76c7a88289eaba815db85",
        "createdAt": "2025-03-17T00:34:39.250Z",
        "updatedAt": "2025-03-17T00:34:39.250Z",
        "id": "67d76c7a88289eaba815db85"
      }
    ],
    "createdAt": "2025-03-17T00:27:39.666Z",
    "updatedAt": "2025-03-17T00:34:39.250Z",
    "id": "tsmiihnnZ"
  },
  {
    "_id": "Cu6MoMJ5g",
    "name": "bodySegmentation starter",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67d6d993a274f44c1780c848",
          "67d6d993a274f44c1780c849"
        ],
        "fileType": "folder",
        "_id": "67d6d993a274f44c1780c847",
        "createdAt": "2025-03-16T14:01:24.475Z",
        "updatedAt": "2025-03-16T14:01:24.475Z",
        "id": "67d6d993a274f44c1780c847"
      },
      {
        "name": "index.html",
        "content": "<!--\r\n  👋 Hello! This is an ml5.js example made and shared with ❤️.\r\n  Learn more about the ml5.js project: https://ml5js.org/\r\n  ml5.js license and Code of Conduct: https://github.com/ml5js/ml5-next-gen/blob/main/LICENSE.md\r\n\r\n  This example demonstrates segmenting a person by body parts with ml5.bodySegmentation.\r\n-->\r\n\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>ml5.js bodySegmentation Parts Example</title>\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js\"></script>\r\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\r\n  </head>\r\n  <body>\r\n    <script src=\"sketch.js\"></script>\r\n  </body>\r\n</html>\r\n",
        "children": [],
        "fileType": "file",
        "_id": "67d6d993a274f44c1780c848",
        "createdAt": "2025-03-16T14:01:24.475Z",
        "updatedAt": "2025-03-16T14:01:24.475Z",
        "id": "67d6d993a274f44c1780c848"
      },
      {
        "name": "sketch.js",
        "content": "/*\n * 👋 Hello! This is an ml5.js example made and shared with ❤️.\n * Learn more about the ml5.js project: https://ml5js.org/\n * ml5.js license and Code of Conduct: https://github.com/ml5js/ml5-next-gen/blob/main/LICENSE.md\n *\n * This example demonstrates segmenting a person by body parts with ml5.bodySegmentation.\n */\n\nlet bodySegmentation;\nlet video;\nlet segmentation;\n\nlet options = {\n  maskType: \"parts\",\n};\n\nfunction preload() {\n  bodySegmentation = ml5.bodySegmentation(\"BodyPix\", options);\n}\n\nfunction setup() {\n  createCanvas(640, 480);\n  // Create the video\n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n\n  bodySegmentation.detectStart(video, gotResults);\n}\n\nfunction draw() {\n  background(255);\n  image(video, 0, 0);\n  if (segmentation) {\n    image(segmentation.mask, 0, 0, width, height);\n  }\n}\n\n// callback function for body segmentation\nfunction gotResults(result) {\n  segmentation = result;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67d6d993a274f44c1780c849",
        "createdAt": "2025-03-16T14:01:24.475Z",
        "updatedAt": "2025-03-16T14:01:24.475Z",
        "id": "67d6d993a274f44c1780c849"
      }
    ],
    "createdAt": "2025-03-16T14:00:51.227Z",
    "updatedAt": "2025-03-16T14:01:24.475Z",
    "id": "Cu6MoMJ5g"
  },
  {
    "_id": "4HcByj-bF",
    "name": "BouncyBall",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66f317f92633a374ccc8f40e",
          "66f317f92633a374ccc8f40d",
          "66f317f92633a374ccc8f40f"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66f317f92633a374ccc8f410",
        "createdAt": "2024-09-26T02:17:33.428Z",
        "updatedAt": "2024-09-26T02:17:33.428Z",
        "id": "66f317f92633a374ccc8f410"
      },
      {
        "name": "sketch.js",
        "content": "let cx = 0;\nlet cy = 200;\nlet speed = 10;\nlet x = 0;\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(0);\n  // let x = map(cx, 0, 400, 0, 255);\n  x = lerp(0,cx,0.75)\n  fill(x)\n  circle(cx,cy,25);\n  cx += speed;\n  if (cx > width) {\n    speed = -speed\n  }\n  else if (cx < 0) {\n    speed = -speed\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66f317f92633a374ccc8f40d",
        "createdAt": "2024-09-26T02:17:33.428Z",
        "updatedAt": "2024-09-26T02:17:33.428Z",
        "id": "66f317f92633a374ccc8f40d"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66f317f92633a374ccc8f40e",
        "createdAt": "2024-09-26T02:17:33.428Z",
        "updatedAt": "2024-09-26T02:17:33.428Z",
        "id": "66f317f92633a374ccc8f40e"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66f317f92633a374ccc8f40f",
        "createdAt": "2024-09-26T02:17:33.428Z",
        "updatedAt": "2024-09-26T02:17:33.428Z",
        "id": "66f317f92633a374ccc8f40f"
      }
    ],
    "updatedAt": "2024-09-26T02:17:33.428Z",
    "createdAt": "2024-09-24T20:00:33.152Z",
    "id": "4HcByj-bF"
  },
  {
    "_id": "PF7aCPSIt",
    "name": "BouncyBallRETRY",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6706bd993eac4566c34a967b",
          "6706bd993eac4566c34a967c",
          "6706bd993eac4566c34a967d"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6706bd993eac4566c34a967a",
        "createdAt": "2024-10-09T18:00:16.103Z",
        "updatedAt": "2024-10-09T18:00:16.103Z",
        "id": "6706bd993eac4566c34a967a"
      },
      {
        "name": "sketch.js",
        "content": "let cx = 0;\nlet speed = 10;\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(0);\n  fillBall();\n  bball(200, 0, width);\n}\n\nfunction bball(cy, limit1, limit2) {\n  cx += speed;\n  if (cx > limit2) {\n    speed = -speed;\n  } else if (cx < limit1) {\n    speed = -speed;\n  }\n  circle(cx, cy, 25);\n}\n\nfunction fillBall() {\n  x = lerp(0, cx, 0.75);\n  fill(x);\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6706bd993eac4566c34a967c",
        "createdAt": "2024-10-09T18:00:16.103Z",
        "updatedAt": "2024-10-09T18:00:16.103Z",
        "id": "6706bd993eac4566c34a967c"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6706bd993eac4566c34a967b",
        "createdAt": "2024-10-09T18:00:16.103Z",
        "updatedAt": "2024-10-09T18:00:16.103Z",
        "id": "6706bd993eac4566c34a967b"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6706bd993eac4566c34a967d",
        "createdAt": "2024-10-09T18:00:16.103Z",
        "updatedAt": "2024-10-09T18:00:16.103Z",
        "id": "6706bd993eac4566c34a967d"
      }
    ],
    "createdAt": "2024-10-09T17:30:01.671Z",
    "updatedAt": "2024-10-09T18:00:16.103Z",
    "id": "PF7aCPSIt"
  },
  {
    "_id": "K056Q51bL",
    "name": "bouncyballs",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "670ff863b7d0ccb4442f925e",
          "670ff863b7d0ccb4442f925d",
          "670ff863b7d0ccb4442f925f"
        ],
        "fileType": "folder",
        "_id": "670ff863b7d0ccb4442f9260",
        "createdAt": "2024-10-16T17:49:27.598Z",
        "updatedAt": "2024-10-16T17:49:27.598Z",
        "id": "670ff863b7d0ccb4442f9260"
      },
      {
        "name": "sketch.js",
        "content": "let ball1,ball2;\n\nfunction setup() {\n  createCanvas(400, 400);\n  ball1 = new Ball(20,20,10,0.5,0.5,\"red\");\n  ball2 = new Ball(300,100,20,0.9,-0.9,\"blue\");\n}\n\nfunction draw() {\n  background(220);\n  ball1.draw();\n  ball2.draw();\n}\n\nclass Ball {\n  \n  constructor(xpos,ypos,w,dx,dy,ccolor){\n    this.xpos = xpos;\n    this.ypos = ypos;\n    this.w = w;\n    this.dx = dx;\n    this.dy = dy;\n    this.color = ccolor;\n  }\n  \n  draw(){\n  this.move(this.dx,this.dy);\n  fill(this.color);\n  circle(this.xpos,this.ypos,this.w);\n  }\n  \n  move(){\n    if((this.xpos+(this.w)/2)>=400 ||(this.xpos-(this.w)/2)<=0){\n      this.dx=-this.dx;\n    }\n    if((this.ypos+(this.w)/2)>=400 || (this.ypos-(this.w)/2)<=0){\n      this.dy=-this.dy;\n    }\n    \n    this.xpos += this.dx;\n    this.ypos += this.dy;\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "670ff863b7d0ccb4442f925d",
        "createdAt": "2024-10-16T17:49:27.598Z",
        "updatedAt": "2024-10-16T17:49:27.598Z",
        "id": "670ff863b7d0ccb4442f925d"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "670ff863b7d0ccb4442f925e",
        "createdAt": "2024-10-16T17:49:27.598Z",
        "updatedAt": "2024-10-16T17:49:27.598Z",
        "id": "670ff863b7d0ccb4442f925e"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "670ff863b7d0ccb4442f925f",
        "createdAt": "2024-10-16T17:49:27.598Z",
        "updatedAt": "2024-10-16T17:49:27.598Z",
        "id": "670ff863b7d0ccb4442f925f"
      }
    ],
    "updatedAt": "2024-10-16T17:49:27.598Z",
    "createdAt": "2024-10-16T17:45:51.603Z",
    "id": "K056Q51bL"
  },
  {
    "_id": "KfGtsVCtU",
    "name": "bouncyballs20",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "670ffcc1b7d0ccb4442f9262",
          "670ffcc1b7d0ccb4442f9263",
          "670ffcc1b7d0ccb4442f9264"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "670ffcc1b7d0ccb4442f9261",
        "createdAt": "2024-10-16T17:57:11.566Z",
        "updatedAt": "2024-10-16T17:57:11.566Z",
        "id": "670ffcc1b7d0ccb4442f9261"
      },
      {
        "name": "sketch.js",
        "content": "let bballs = [];\nlet num = 20;\nlet colors = [\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"indigo\", \"violet\"];\n\nfunction setup() {\n  createCanvas(400, 400);\n\n  for (let i = 0; i <= num; i++) {\n    bballs.push(\n      new Ball(\n        random(50, 300),\n        random(50, 300),\n        random(10, 50),\n        random(2, 4),\n        random(2, 4),\n        random(colors)\n      )\n    );\n  }\n}\n\nfunction draw() {\n  background(0);\n  for (let i = 0; i < num; i++) {\n    bballs[i].draw();\n  }\n}\n\nclass Ball {\n  constructor(xpos, ypos, w, dx, dy, ccolor) {\n    this.xpos = xpos;\n    this.ypos = ypos;\n    this.w = w;\n    this.dx = dx;\n    this.dy = dy;\n    this.color = ccolor;\n  }\n\n  draw() {\n    this.move(this.dx, this.dy);\n    fill(this.color);\n    circle(this.xpos, this.ypos, this.w);\n  }\n\n  move() {\n    if (this.xpos + this.w / 2 >= 400 || this.xpos - this.w / 2 <= 0) {\n      this.dx = -this.dx;\n    }\n    if (this.ypos + this.w / 2 >= 400 || this.ypos - this.w / 2 <= 0) {\n      this.dy = -this.dy;\n    }\n\n    this.xpos += this.dx;\n    this.ypos += this.dy;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "670ffcc1b7d0ccb4442f9263",
        "createdAt": "2024-10-16T17:57:11.566Z",
        "updatedAt": "2024-10-16T17:57:11.566Z",
        "id": "670ffcc1b7d0ccb4442f9263"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "670ffcc1b7d0ccb4442f9262",
        "createdAt": "2024-10-16T17:57:11.566Z",
        "updatedAt": "2024-10-16T17:57:11.566Z",
        "id": "670ffcc1b7d0ccb4442f9262"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "670ffcc1b7d0ccb4442f9264",
        "createdAt": "2024-10-16T17:57:11.566Z",
        "updatedAt": "2024-10-16T17:57:11.566Z",
        "id": "670ffcc1b7d0ccb4442f9264"
      }
    ],
    "createdAt": "2024-10-16T17:49:53.954Z",
    "updatedAt": "2024-10-16T17:57:11.566Z",
    "id": "KfGtsVCtU"
  },
  {
    "_id": "rSGGtUsu8",
    "name": "bouncyballs20 copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67311b3c0a5a35a3cfc5a16e",
          "67311b3c0a5a35a3cfc5a16f",
          "67311b3c0a5a35a3cfc5a170"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67311b3c0a5a35a3cfc5a16d",
        "createdAt": "2024-11-10T23:16:15.143Z",
        "updatedAt": "2024-11-10T23:16:15.143Z",
        "id": "67311b3c0a5a35a3cfc5a16d"
      },
      {
        "name": "sketch.js",
        "content": "let bballs = [];\nlet num = 800;\n\nfunction setup() {\n  createCanvas(400, 400);\n\n  for (let i = 0; i <= num; i++) {\n    bballs.push(\n      new Ball(\n        i/2,\n        random(-5,15),\n        random(10, 25),\n        random(0.3,0.5),\n        random(0,255)\n      )\n    );\n  }\n}\n\nfunction draw() {\n  background(0);\n  for (let i = 0; i < num; i++) {\n    bballs[i].draw();\n  }\n}\n\nclass Ball {\n  constructor(xpos, ypos, w, dy, ccolor) {\n    this.xpos = xpos;\n    this.ypos = ypos;\n    this.w = w;\n    this.dy = dy;\n    this.color = ccolor;\n  }\n\n  draw() {\n    this.move(this.dy);\n    noStroke();\n    fill(this.color,20);\n    circle(this.xpos, this.ypos, this.w);\n  }\n\n  move() {\n    if (this.ypos + this.w / 2 >= 40 || this.ypos - this.w / 2 <= -20) {\n      this.dy = -this.dy;\n    }\n    this.ypos += this.dy;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67311b3c0a5a35a3cfc5a16f",
        "createdAt": "2024-11-10T23:16:15.143Z",
        "updatedAt": "2024-11-10T23:16:15.143Z",
        "id": "67311b3c0a5a35a3cfc5a16f"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67311b3c0a5a35a3cfc5a16e",
        "createdAt": "2024-11-10T23:16:15.143Z",
        "updatedAt": "2024-11-10T23:16:15.143Z",
        "id": "67311b3c0a5a35a3cfc5a16e"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67311b3c0a5a35a3cfc5a170",
        "createdAt": "2024-11-10T23:16:15.143Z",
        "updatedAt": "2024-11-10T23:16:15.143Z",
        "id": "67311b3c0a5a35a3cfc5a170"
      }
    ],
    "createdAt": "2024-11-10T20:44:44.739Z",
    "updatedAt": "2024-11-10T23:16:15.143Z",
    "id": "rSGGtUsu8"
  },
  {
    "_id": "Oyybw7DP6",
    "name": "bouncyballs20ANDclick",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "670ffec3b7d0ccb4442f9266",
          "670ffec3b7d0ccb4442f9267",
          "670ffec3b7d0ccb4442f9268"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "670ffec3b7d0ccb4442f9265",
        "createdAt": "2024-10-16T18:04:36.153Z",
        "updatedAt": "2024-10-16T18:04:36.153Z",
        "id": "670ffec3b7d0ccb4442f9265"
      },
      {
        "name": "sketch.js",
        "content": "let bballs = [];\nlet num = 20;\nlet colors = [\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"indigo\", \"violet\"];\n\nfunction setup() {\n  createCanvas(400, 400);\n\n  for (let i = 0; i <= num; i++) {\n    bballs.push(\n      new Ball(\n        random(50, 300),\n        random(50, 300),\n        random(10, 50),\n        random(2, 4),\n        random(2, 4),\n        random(colors)\n      )\n    );\n  }\n}\n\nfunction draw() {\n  background(0);\n  for (let i = 0; i < bballs.length; i++) {\n    bballs[i].draw();\n  }\n}\n\nclass Ball {\n  constructor(xpos, ypos, w, dx, dy, ccolor) {\n    this.xpos = xpos;\n    this.ypos = ypos;\n    this.w = w;\n    this.dx = dx;\n    this.dy = dy;\n    this.color = ccolor;\n  }\n\n  draw() {\n    this.move(this.dx, this.dy);\n    fill(this.color);\n    circle(this.xpos, this.ypos, this.w);\n  }\n\n  move() {\n    if (this.xpos + this.w / 2 >= 400 || this.xpos - this.w / 2 <= 0) {\n      this.dx = -this.dx;\n    }\n    if (this.ypos + this.w / 2 >= 400 || this.ypos - this.w / 2 <= 0) {\n      this.dy = -this.dy;\n    }\n\n    this.xpos += this.dx;\n    this.ypos += this.dy;\n  }\n}\n\nfunction mousePressed() {\n  let clickBall = new Ball(\n    mouseX,\n    mouseY,\n    random(10, 50),\n    random(-5, 5),\n    random(-5, 5),\n    \"blue\"\n  );\n  bballs.push(clickBall);\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "670ffec3b7d0ccb4442f9267",
        "createdAt": "2024-10-16T18:04:36.153Z",
        "updatedAt": "2024-10-16T18:04:36.153Z",
        "id": "670ffec3b7d0ccb4442f9267"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "670ffec3b7d0ccb4442f9266",
        "createdAt": "2024-10-16T18:04:36.153Z",
        "updatedAt": "2024-10-16T18:04:36.153Z",
        "id": "670ffec3b7d0ccb4442f9266"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "670ffec3b7d0ccb4442f9268",
        "createdAt": "2024-10-16T18:04:36.153Z",
        "updatedAt": "2024-10-16T18:04:36.153Z",
        "id": "670ffec3b7d0ccb4442f9268"
      }
    ],
    "createdAt": "2024-10-16T17:58:28.020Z",
    "updatedAt": "2024-10-16T18:04:36.153Z",
    "id": "Oyybw7DP6"
  },
  {
    "_id": "MlqX5C4Jc",
    "name": "bouncyballs20ANDclickANDtomouse",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6710004cb7d0ccb4442f926a",
          "6710004cb7d0ccb4442f926b",
          "6710004cb7d0ccb4442f926c"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6710004cb7d0ccb4442f9269",
        "createdAt": "2024-10-16T18:25:10.138Z",
        "updatedAt": "2024-10-16T18:25:10.138Z",
        "id": "6710004cb7d0ccb4442f9269"
      },
      {
        "name": "sketch.js",
        "content": "let bballs = [];\nlet num = 20;\nlet colors = [\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"indigo\", \"violet\"];\n\nfunction setup() {\n  createCanvas(400, 400);\n\n  for (let i = 0; i <= num; i++) {\n    bballs.push(\n      new Ball(\n        random(50, 300),\n        random(50, 300),\n        random(10, 50),\n        random(2, 4),\n        random(2, 4),\n        random(colors),\n        false\n      )\n    );\n  }\n}\n\nfunction draw() {\n  background(0);\n  for (let i = 0; i < bballs.length; i++) {\n    bballs[i].draw();\n  }\n}\n\nclass Ball {\n  constructor(xpos, ypos, w, dx, dy, ccolor, following) {\n    this.xpos = xpos;\n    this.ypos = ypos;\n    this.w = w;\n    this.dx = dx;\n    this.dy = dy;\n    this.color = ccolor;\n    this.following = following;\n    this.speed = 0.1;\n  }\n\n  draw() {\n    this.move(this.dx, this.dy);\n    fill(this.color);\n    circle(this.xpos, this.ypos, this.w);\n  }\n\n  move() {\n    if (this.following) {\n      this.follow();\n    } else {\n      this.bounce();\n    }\n  }\n\n  follow() {\n    this.xpos = lerp(this.xpos, mouseX, this.speed);\n    this.ypos = lerp(this.ypos, mouseY, this.speed);\n  }\n  bounce() {\n    if (this.xpos + this.w / 2 >= 400 || this.xpos - this.w / 2 <= 0) {\n      this.dx = -this.dx;\n    }\n    if (this.ypos + this.w / 2 >= 400 || this.ypos - this.w / 2 <= 0) {\n      this.dy = -this.dy;\n    }\n\n    this.xpos += this.dx;\n    this.ypos += this.dy;\n  }\n}\n\nfunction mousePressed() {\n  let clickBall = new Ball(\n    mouseX,\n    mouseY,\n    random(10, 50),\n    random(1, 5),\n    random(1, 5),\n    \"blue\",\n    true\n  );\n  bballs.push(clickBall);\n}\n\n// function mouseOverBall(Ball) {\n//   let d = dist(mouseX, mouseY, Ball.xpos, Ball.ypos);\n//   return d < 25;\n// }\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6710004cb7d0ccb4442f926b",
        "createdAt": "2024-10-16T18:25:10.138Z",
        "updatedAt": "2024-10-16T18:25:10.138Z",
        "id": "6710004cb7d0ccb4442f926b"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6710004cb7d0ccb4442f926a",
        "createdAt": "2024-10-16T18:25:10.138Z",
        "updatedAt": "2024-10-16T18:25:10.138Z",
        "id": "6710004cb7d0ccb4442f926a"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6710004cb7d0ccb4442f926c",
        "createdAt": "2024-10-16T18:25:10.138Z",
        "updatedAt": "2024-10-16T18:25:10.138Z",
        "id": "6710004cb7d0ccb4442f926c"
      }
    ],
    "createdAt": "2024-10-16T18:05:00.769Z",
    "updatedAt": "2024-10-16T18:25:10.138Z",
    "id": "MlqX5C4Jc"
  },
  {
    "_id": "FUw4TJ0QV",
    "name": "bouncyballs20ANDclickANDtomouseANDdelete",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67100507b7d0ccb4442f926e",
          "67100507b7d0ccb4442f926f",
          "67100507b7d0ccb4442f9270"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67100507b7d0ccb4442f926d",
        "createdAt": "2024-10-17T01:45:41.488Z",
        "updatedAt": "2024-10-17T01:45:41.488Z",
        "id": "67100507b7d0ccb4442f926d"
      },
      {
        "name": "sketch.js",
        "content": "let bballs = [];\nlet num = 20;\nlet colors = [\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"indigo\", \"violet\"];\n\nfunction setup() {\n  createCanvas(400, 400);\n\n  for (let i = 0; i <= num; i++) {\n    bballs.push(\n      new Ball(\n        random(50, 300),\n        random(50, 300),\n        random(10, 50),\n        random(2, 4),\n        random(2, 4),\n        random(colors),\n        false\n      )\n    );\n  }\n}\n\nfunction draw() {\n  background(0);\n  for (let i = 0; i < bballs.length; i++) {\n    bballs[i].draw();\n    if (mouseOverBall(bballs[i])) {\n      bballs.splice(i, 1);\n    }\n  }\n}\nfunction mouseOverBall(Ball) {\n  let d = dist(mouseX, mouseY, Ball.xpos, Ball.ypos);\n  return d < 25;\n}\n\nclass Ball {\n  constructor(xpos, ypos, w, dx, dy, ccolor, following) {\n    this.xpos = xpos;\n    this.ypos = ypos;\n    this.w = w;\n    this.dx = dx;\n    this.dy = dy;\n    this.color = ccolor;\n    this.following = following;\n    this.speed = 0.1;\n  }\n\n  draw() {\n    this.move(this.dx, this.dy);\n    fill(this.color);\n    circle(this.xpos, this.ypos, this.w);\n  }\n\n  move() {\n    if (this.following) {\n      this.follow();\n    } else {\n      this.bounce();\n    }\n  }\n\n  follow() {\n    this.xpos = lerp(this.xpos, mouseX, this.speed);\n    this.ypos = lerp(this.ypos, mouseY, this.speed);\n  }\n  bounce() {\n    if (this.xpos + this.w / 2 >= 400 || this.xpos - this.w / 2 <= 0) {\n      this.dx = -this.dx;\n    }\n    if (this.ypos + this.w / 2 >= 400 || this.ypos - this.w / 2 <= 0) {\n      this.dy = -this.dy;\n    }\n\n    this.xpos += this.dx;\n    this.ypos += this.dy;\n  }\n}\n\nfunction mousePressed() {\n  let clickBall = new Ball(\n    mouseX,\n    mouseY,\n    random(10, 50),\n    random(1, 5),\n    random(1, 5),\n    \"blue\",\n    true\n  );\n  bballs.push(clickBall);\n}\n\n// function mouseOverBall(Ball) {\n//   let d = dist(mouseX, mouseY, Ball.xpos, Ball.ypos);\n//   return d < 25;\n// }\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67100507b7d0ccb4442f926f",
        "createdAt": "2024-10-17T01:45:41.488Z",
        "updatedAt": "2024-10-17T01:45:41.488Z",
        "id": "67100507b7d0ccb4442f926f"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67100507b7d0ccb4442f926e",
        "createdAt": "2024-10-17T01:45:41.488Z",
        "updatedAt": "2024-10-17T01:45:41.488Z",
        "id": "67100507b7d0ccb4442f926e"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67100507b7d0ccb4442f9270",
        "createdAt": "2024-10-17T01:45:41.488Z",
        "updatedAt": "2024-10-17T01:45:41.488Z",
        "id": "67100507b7d0ccb4442f9270"
      }
    ],
    "createdAt": "2024-10-16T18:25:12.017Z",
    "updatedAt": "2024-10-17T01:45:41.488Z",
    "id": "FUw4TJ0QV"
  },
  {
    "_id": "wrU7eMpas",
    "name": "CC 102 - 2D Water Ripples copy copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67d44ac4a6760ea1a3421cae",
          "67d44ac4a6760ea1a3421caf",
          "67d44ac4a6760ea1a3421cb0"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d44ac4a6760ea1a3421cad",
        "createdAt": "2025-03-14T15:49:05.256Z",
        "updatedAt": "2025-03-14T15:49:05.256Z",
        "id": "67d44ac4a6760ea1a3421cad"
      },
      {
        "name": "sketch.js",
        "content": "// https://editor.p5js.org/jht9629-nyu/sketches/cg5iaifhV\n// CC 102 - 2D Water Ripples copy\n// https://editor.p5js.org/codingtrain/sketches/tYXtzNSl\n// 2D Water Ripples\n\n// how to control size of circles?\n// how to add color?\n\nlet cols;\nlet rows;\nlet current; // = new float[cols][rows];\nlet previous; // = new float[cols][rows];\n\nlet dampening = 0.99;\n\nfunction setup() {\n  pixelDensity(1);\n  // createCanvas(600, 400);\n  createCanvas(windowWidth, windowHeight);\n  cols = width;\n  rows = height;\n  // The following line initializes a 2D cols-by-rows array with zeroes\n  // in every array cell, and is equivalent to this Processing line:\n  // current = new float[cols][rows];\n  current = new Array(cols).fill(0).map(n => new Array(rows).fill(0));\n  previous = new Array(cols).fill(0).map(n => new Array(rows).fill(0));\n}\n\nfunction mouseDragged() {\n  previous[mouseX][mouseY] = 2500;\n}\n\nfunction draw() {\n  // replaced mouseDragged with random values\n  let x = floor(random(width))\n  let y = floor(random(height))\n  previous[x][y] = 2500*2;\n\n  background(0);\n\n  loadPixels();\n  for (let i = 1; i < cols - 1; i++) {\n    for (let j = 1; j < rows - 1; j++) {\n      current[i][j] =\n        (previous[i - 1][j] +\n          previous[i + 1][j] +\n          previous[i][j - 1] +\n          previous[i][j + 1]) /\n          2 -\n        current[i][j];\n      current[i][j] = current[i][j] * dampening;\n      // Unlike in Processing, the pixels array in p5.js has 4 entries\n      // for each pixel, so we have to multiply the index by 4 and then\n      // set the entries for each color component separately.\n      let index = (i + j * cols) * 4;\n      pixels[index + 0] = current[i][j];\n      pixels[index + 1] = current[i][j];\n      pixels[index + 2] = current[i][j];\n    }\n  }\n  updatePixels();\n\n  let temp = previous;\n  previous = current;\n  current = temp;\n}\n\n// The Coding Train / Daniel Shiffman\n// https://thecodingtrain.com/CodingChallenges/102-2d-water-ripple.html\n// https://youtu.be/BZUdGqeOD0w\n// https://editor.p5js.org/codingtrain/sketches/tYXtzNSl\n\n// Algorithm: https://web.archive.org/web/20160418004149/http://freespace.virgin.net/hugo.elias/graphics/x_water.htm\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67d44ac4a6760ea1a3421caf",
        "createdAt": "2025-03-14T15:49:05.256Z",
        "updatedAt": "2025-03-14T15:49:05.256Z",
        "id": "67d44ac4a6760ea1a3421caf"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.10.2/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.10.2/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d44ac4a6760ea1a3421cae",
        "createdAt": "2025-03-14T15:49:05.256Z",
        "updatedAt": "2025-03-14T15:49:05.256Z",
        "id": "67d44ac4a6760ea1a3421cae"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d44ac4a6760ea1a3421cb0",
        "createdAt": "2025-03-14T15:49:05.256Z",
        "updatedAt": "2025-03-14T15:49:05.256Z",
        "id": "67d44ac4a6760ea1a3421cb0"
      }
    ],
    "createdAt": "2025-03-14T15:27:02.658Z",
    "updatedAt": "2025-03-14T15:49:05.256Z",
    "id": "wrU7eMpas"
  },
  {
    "_id": "OvYPZM-5V",
    "name": "checkerboard",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66f5a91e3992907ae0d6d51e",
          "66f5a91e3992907ae0d6d51d",
          "66f5a91e3992907ae0d6d51f"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66f5a91e3992907ae0d6d520",
        "createdAt": "2024-10-01T17:54:37.129Z",
        "updatedAt": "2024-10-01T17:54:37.129Z",
        "id": "66f5a91e3992907ae0d6d520"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n  // rectMode(CENTER);\n}\n\nfunction draw() {\n  background(220);\n  let W = width / 10;\n  let H = height / 10;\n  for (let j = 0; j <= height / H; j++) {\n    let ypos = j * H;\n\n    for (i = 0; i <= width / W; i++) {\n      let xpos = W * i;\n\n      if ((i + j) % 2 == 0) {\n        fill(\"navy\");\n        circle(xpos, ypos, W);\n      } else {\n        fill(\"darkred\");\n        rect(xpos, ypos, W, H);\n      }\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66f5a91e3992907ae0d6d51d",
        "createdAt": "2024-10-01T17:54:37.129Z",
        "updatedAt": "2024-10-01T17:54:37.129Z",
        "id": "66f5a91e3992907ae0d6d51d"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66f5a91e3992907ae0d6d51e",
        "createdAt": "2024-10-01T17:54:37.129Z",
        "updatedAt": "2024-10-01T17:54:37.129Z",
        "id": "66f5a91e3992907ae0d6d51e"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66f5a91e3992907ae0d6d51f",
        "createdAt": "2024-10-01T17:54:37.129Z",
        "updatedAt": "2024-10-01T17:54:37.129Z",
        "id": "66f5a91e3992907ae0d6d51f"
      }
    ],
    "updatedAt": "2024-10-01T17:54:37.129Z",
    "createdAt": "2024-09-26T18:51:23.168Z",
    "id": "OvYPZM-5V"
  },
  {
    "_id": "IyF_vAsbd",
    "name": "CircleLerp",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66e34d24d2613a626e52f6ba",
          "66e34d24d2613a626e52f6b9",
          "66e34d24d2613a626e52f6bb"
        ],
        "fileType": "folder",
        "_id": "66e34d24d2613a626e52f6bc",
        "createdAt": "2024-09-19T16:18:03.632Z",
        "updatedAt": "2024-09-19T16:18:03.632Z",
        "id": "66e34d24d2613a626e52f6bc"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n}\n\nlet x = 0\nlet y = 0\n\nfunction draw() {\n  background(220,0,100);\n  stroke(0)\n  ellipse(x,y,50,50)\n  \n  x = lerp(x, mouseX, 0.01);\n  y = lerp(y, mouseY, 0.01);\n  \n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66e34d24d2613a626e52f6b9",
        "createdAt": "2024-09-19T16:18:03.632Z",
        "updatedAt": "2024-09-19T16:18:03.632Z",
        "id": "66e34d24d2613a626e52f6b9"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "66e34d24d2613a626e52f6ba",
        "createdAt": "2024-09-19T16:18:03.632Z",
        "updatedAt": "2024-09-19T16:18:03.632Z",
        "id": "66e34d24d2613a626e52f6ba"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "66e34d24d2613a626e52f6bb",
        "createdAt": "2024-09-19T16:18:03.632Z",
        "updatedAt": "2024-09-19T16:18:03.632Z",
        "id": "66e34d24d2613a626e52f6bb"
      }
    ],
    "updatedAt": "2024-09-19T16:18:03.632Z",
    "createdAt": "2024-09-12T20:26:03.331Z",
    "id": "IyF_vAsbd"
  },
  {
    "_id": "ljMg8Mr23",
    "name": "circles",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66e32d68d2613a626e52f6b6",
          "66e32d68d2613a626e52f6b7",
          "66e32d68d2613a626e52f6b8"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66e32d68d2613a626e52f6b5",
        "createdAt": "2024-09-19T16:21:36.683Z",
        "updatedAt": "2024-09-19T16:21:36.683Z",
        "id": "66e32d68d2613a626e52f6b5"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400,400);\n}\n\n\nfunction draw() {\n  background(1, 9, 61);\n  \n  let R = 10 * frameCount/2\n  \n  if (frameCount/2 > width/2) {\n  R = width/2\n}\n  \n  let L = -1 * frameCount/2\n  \n  if (-1 * frameCount/2 < -1 * width/2) {\n  L = -1 * width/2\n}\n  let U = frameCount/2\n  \n  if (frameCount/2 > height/2) {\n  U = height/2\n}\n  \n  let D = -1 * frameCount/2\n  \n  if (-1 * frameCount/2 < -1 * height/2) {\n  D = -1 * height/2\n}\n  \n  \n  let C1 = frameCount/2\n  \n  if (frameCount/2 > sqrt(width**2 + height**2)/2) {\n  C1 = sqrt(width**2 + height**2) / 2\n}\n  \n  let C2 = -1 * frameCount/2\n  \n  if (-1 * frameCount/2 < -1 * sqrt(width**2 + height**2)/2) {\n  C2 = -1 * sqrt(width**2 + height**2)/2\n}\n  \n  \n  sqrt(width**2 + height**2) / 2\n  \n  translate(width/2, height/2);\n  stroke(255);\n  fill(0);\n  ellipse(L,0,50,50);\n  ellipse(R,0,50,50);\n  ellipse(0,U,50,50);\n  ellipse(0,D,50,50);\n  \n  push()\n  rotate(PI/2 - atan((height/2)/(width/2)));\n  stroke(255);\n  fill(0);\n  ellipse(0,C1,50,50);\n  ellipse(0,C2,50,50);\n  pop()\n  \n  push()\n  rotate(atan((height/2)/(width/2)));\n  stroke(255);\n  fill(0);\n  ellipse(C1,0,50,50);\n  ellipse(C2,0,50,50);\n  pop()\n}\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66e32d68d2613a626e52f6b7",
        "createdAt": "2024-09-19T16:21:36.683Z",
        "updatedAt": "2024-09-19T16:21:36.683Z",
        "id": "66e32d68d2613a626e52f6b7"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66e32d68d2613a626e52f6b6",
        "createdAt": "2024-09-19T16:21:36.683Z",
        "updatedAt": "2024-09-19T16:21:36.683Z",
        "id": "66e32d68d2613a626e52f6b6"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66e32d68d2613a626e52f6b8",
        "createdAt": "2024-09-19T16:21:36.683Z",
        "updatedAt": "2024-09-19T16:21:36.683Z",
        "id": "66e32d68d2613a626e52f6b8"
      }
    ],
    "createdAt": "2024-09-12T18:05:28.552Z",
    "updatedAt": "2024-09-19T16:21:36.683Z",
    "id": "ljMg8Mr23"
  },
  {
    "_id": "gjFWVUO7F",
    "name": "Color: Radial Gradient copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67bbb1d294004e4a77f00bb3",
          "67bbb1d294004e4a77f00bb4",
          "67bbb1d294004e4a77f00bb5"
        ],
        "fileType": "folder",
        "_id": "67bbb1d294004e4a77f00bb2",
        "createdAt": "2025-02-23T23:41:24.476Z",
        "updatedAt": "2025-02-23T23:41:24.476Z",
        "id": "67bbb1d294004e4a77f00bb2"
      },
      {
        "name": "sketch.js",
        "content": "/*\n * @name Radial Gradient\n * @arialabel Three circles on a black background. The middle circle is completely visible but the user can only see half of the other two. There is a gradiant from the center of the circle to the outer edge that changes every second\n * @description Draws a series of concentric circles to create a gradient\n * from one color to another.\n */\nlet dim;\n\nfunction setup() {\n  createCanvas(710, 400);\n  dim = width / 2;\n  background(0);\n  colorMode(HSB, 360, 100, 100);\n  noStroke();\n  ellipseMode(RADIUS);\n  frameRate(1);\n\n}\n\nfunction draw() {\n  background(0);\n  \n  for (let x = 0; x <= width; x += dim) {\n    drawGradient(x, height / 2);\n  }\n}\n\nfunction drawGradient(x, y) {\n  let radius = dim / 2;\n  let h = random(0, 360);\n  for (let r = radius; r > 0; --r) {\n    fill(h, 90, 90);\n    ellipse(x, y, r, r);\n    h = (h + 1) % 360;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67bbb1d294004e4a77f00bb4",
        "createdAt": "2025-02-23T23:41:24.476Z",
        "updatedAt": "2025-02-23T23:41:24.476Z",
        "id": "67bbb1d294004e4a77f00bb4"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "67bbb1d294004e4a77f00bb3",
        "createdAt": "2025-02-23T23:41:24.476Z",
        "updatedAt": "2025-02-23T23:41:24.476Z",
        "id": "67bbb1d294004e4a77f00bb3"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "67bbb1d294004e4a77f00bb5",
        "createdAt": "2025-02-23T23:41:24.476Z",
        "updatedAt": "2025-02-23T23:41:24.476Z",
        "id": "67bbb1d294004e4a77f00bb5"
      }
    ],
    "createdAt": "2025-02-23T23:40:02.989Z",
    "updatedAt": "2025-02-23T23:41:24.476Z",
    "id": "gjFWVUO7F"
  },
  {
    "_id": "dSBtY0WOqE",
    "name": "column-click",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "670f14a8b7d0ccb4442f925a",
          "670f14a8b7d0ccb4442f9259",
          "670f14a8b7d0ccb4442f925b"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "670f14a8b7d0ccb4442f925c",
        "createdAt": "2024-10-16T16:54:19.505Z",
        "updatedAt": "2024-10-16T16:54:19.505Z",
        "id": "670f14a8b7d0ccb4442f925c"
      },
      {
        "name": "sketch.js",
        "content": "let W;\nlet num = 20;\nlet colors = [];\n\nfunction setup() {\n  createCanvas(400, 400);\n  W = width / num;\n  for (let i = 0; i < num; i++) {\n    colors.push(255); \n  }\n}\n\nfunction draw() {\n  background(255);\n  for (let i = 0; i < width; i+=W) {\n    let xpos = i/W;\n    fill(colors[xpos]);\n    rect(i, 0, W, height);\n  }\n}\n\nfunction mousePressed() {\n  for (let i = 0; i < width; i+=W) {\n    let xpos = i/W;\n    if (mouseX > i && mouseX < i + W) {\n      if (colors[xpos] === 255) {\n        colors[xpos] = color(255, 0, 0); \n      } else {\n        colors[xpos] = 255; \n      }\n\n    }\n  }\n}\n\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "670f14a8b7d0ccb4442f9259",
        "createdAt": "2024-10-16T16:54:19.505Z",
        "updatedAt": "2024-10-16T16:54:19.505Z",
        "id": "670f14a8b7d0ccb4442f9259"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "670f14a8b7d0ccb4442f925a",
        "createdAt": "2024-10-16T16:54:19.505Z",
        "updatedAt": "2024-10-16T16:54:19.505Z",
        "id": "670f14a8b7d0ccb4442f925a"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "670f14a8b7d0ccb4442f925b",
        "createdAt": "2024-10-16T16:54:19.505Z",
        "updatedAt": "2024-10-16T16:54:19.505Z",
        "id": "670f14a8b7d0ccb4442f925b"
      }
    ],
    "updatedAt": "2024-10-16T16:54:19.505Z",
    "createdAt": "2024-10-16T16:54:19.505Z",
    "id": "dSBtY0WOqE"
  },
  {
    "_id": "Alp6OkxKc",
    "name": "COM-looplauncher",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "679e4970ef19defc7766429f",
          "679e4970ef19defc776642a0",
          "679e4970ef19defc776642a1"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "679e4970ef19defc7766429e",
        "createdAt": "2025-02-02T23:17:58.850Z",
        "updatedAt": "2025-02-02T23:17:58.850Z",
        "id": "679e4970ef19defc7766429e"
      },
      {
        "name": "sketch.js",
        "content": "let angle = 0;\nlet cval = 0;\nlet direction = 1;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n}\n\nfunction draw() {\n  blendMode(BLEND);\n  background(0, 50);\n  blendMode(DIFFERENCE);\n\n  let c1 = color(cval, 0, 255 - cval);\n  let c2 = color(255 - cval, 0, cval);\n\n  // Update color over time\n  // Update cval smoothly between 0 and 255\n\n  cval += direction;\n  if (cval >= 255 || cval <= 0) {\n    direction *= -1; // Reverse direction when hitting limits\n  }\n\n  let minDimension = min(width, height);\n  let spacing = minDimension / 8;\n  let x = width / 2;\n  let y = height / 2;\n  let amount1 = sin(angle) / 2 + 1;\n  let amount2 = cos(angle) / 2 + 1;\n\n  let thickness = (minDimension / 40) * amount1;\n  strokeWeight(minDimension/50);\n\n  push();\n   stroke(0,255,0);\n  fill(0,0,0);\n  translate(x, y); // rotate about center of canvas\n  rectMode(CENTER); // rotate square around its center point\n  rotate(angle); // clockwise\n  rect(0, 0, spacing * 5, spacing * 5);\n  pop();\n\n  push();\n  translate(x, y); // rotate about center of canvas\n  stroke(0,255,0);\n  fill(0,0,255);\n  rotate(-angle); // counterclockwise\n  triangle(0, -2*spacing , -1.75*spacing, 1*spacing, 1.75*spacing, 1*spacing);\n  pop();\n  \n  push();\n  // strokeWeight(thickness);\n  translate(x, y); // rotate about center of canvas\n  stroke(255,0,0);\n  fill(0,0,255);\n  circle(0,0,4.5*spacing)\n  pop();\n  \n  push();\n  translate(x, y); // rotate about center of canvas\n  stroke(255,0,0);\n  fill(0,0,255);\n  circle(0,0,spacing)\n  pop();\n\n  angle += 0.05; // set speed of rotation\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "679e4970ef19defc776642a0",
        "createdAt": "2025-02-02T23:17:58.850Z",
        "updatedAt": "2025-02-02T23:17:58.850Z",
        "id": "679e4970ef19defc776642a0"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679e4970ef19defc7766429f",
        "createdAt": "2025-02-02T23:17:58.850Z",
        "updatedAt": "2025-02-02T23:17:58.850Z",
        "id": "679e4970ef19defc7766429f"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679e4970ef19defc776642a1",
        "createdAt": "2025-02-02T23:17:58.850Z",
        "updatedAt": "2025-02-02T23:17:58.850Z",
        "id": "679e4970ef19defc776642a1"
      }
    ],
    "createdAt": "2025-02-01T16:18:56.803Z",
    "updatedAt": "2025-02-02T23:17:58.850Z",
    "id": "Alp6OkxKc"
  },
  {
    "_id": "kndxHOP5m",
    "name": "CP2: Distorting Images copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67d85f3e20b93b787ec270ff",
          "67d85f3e20b93b787ec27101",
          "67d85f3e20b93b787ec27102",
          "67d85f3e20b93b787ec27103"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d85f3e20b93b787ec270fe",
        "createdAt": "2025-03-17T17:51:28.151Z",
        "updatedAt": "2025-03-17T17:51:28.151Z",
        "id": "67d85f3e20b93b787ec270fe"
      },
      {
        "name": "sketch.js",
        "content": "/*\nDISTORTING IMAGES\nJeff Thompson | 2021 | jeffreythompson.org\n\nSo far, we've only thought about images in terms of x/y\ncoordinates, changing or looking at pictures as a grid.\nBut things can get really interesting if we use start\nusing sin() and even polar coordinates (which see position\nas angle and distance from a central point)!\n\nThere are two functions in this demo:\nDistort: pushes pixels using sin(), try changing\n         the variables below to see their effect\nFisheye: uses polar coordinates and some math to\n         do a bunch of different, fun distortions!\n\nBASED ON\nCreated from examples in 'An Interdisciplinary Introduction\nto Image Processing: Pixels, Numbers, and Programs' by\nSteven L. Tanimoto (thanks!)\n\nCHALLENGES\n1. Experiment with some of the settings for each filter\n   and catalog the results – can you start to get a sense\n   of how each parameter effects the output?\n\n*/\n\n// settings to control the distort filter\n// (tbh, not really understanding how these values\n// interact – try playing with them!)\nlet wavinessX = 10;  // smaller number = fewer repetitions\nlet wavinessY = 10;\nlet periodX =   15;  // smaller number = more\nlet periodY =   15;\n\nlet img;\n\n\nfunction preload() {\n  img = loadImage('assets/test.jpg');\n}\n\n\nfunction setup() {\n  \n  // resize the image to fit the window, then \n  // create the canvas at that size\n  img.resize(windowWidth, 0);\n  createCanvas(img.width, img.height);\n  noLoop();\n  // frameRate(5)\n}\n\n\nfunction draw() {\n  \n  // run the distort filter, which creates freaky, wavy\n  // blobs of pixels\n // img = distort(img, wavinessX, wavinessY, periodX,periodY);\n  \n  // fisheye filter (see the code for some other options too!)\n  img = fisheye(img, width/2,height/2);\n  \n  // display the resulting image\n  image(img, 0,0);\n}\n\n\nfunction distort(input, wavinessX, wavinessY, periodX, periodY) {\n  let output = createImage(input.width, input.height);\n  input.loadPixels();\n  output.loadPixels();\n  for (let y=0; y<input.height; y++) {\n    for (let x=0; x<input.width; x++) {      \n      \n      // this formula is where the magic happens!\n      // we calculate new x/y position and grab pixels\n      // from the source image at that location\n      let tempX = x + wavinessX * sin(x/periodX);\n      let tempY = y + wavinessY * sin(y/periodY);\n      let px = input.get(tempX, tempY);\n      \n      // then put those colors into the output\n      // image at the regular x/y position\n      output.set(x,y, px);\n    }\n  }\n  output.updatePixels();\n  return output;\n}\n\n\nfunction fisheye(input, centerX, centerY) { \n  let distances = [ \n    dist(centerX,centerY, 0,0),\n    dist(centerX,centerY, input.width,0),\n    dist(centerX,centerY, input.width,input.height),\n    dist(centerX,centerY, 0,input.height)\n  ];\n  let distanceMax = max(distances);\n  \n  let output = createImage(input.width, input.height);  \n  input.loadPixels();\n  output.loadPixels();\n  for (let y=0; y<input.height; y++) {\n    for (let x=0; x<input.width; x++) {\n      \n      // calculate the angle and distance between our\n      // center point and the current x/y position\n      // (these are 'polar' coordinates – a position defined\n      // not by x/y but by angle and distance!)\n      let distance = dist(x,y, centerX,centerY);  // also called 'rho'\n      let angle = atan2(y-centerY, x-centerX);    // also called 'theta'\n      \n      // the magic!\n      // first, a fisheye effect\n      // transform distance my squaring it, then dividing\n      // by the max possible distance from the center\n      // the angle value stays the same\n     // distance = distance * distance / distanceMax;\n      \n      // ...or try these (comment out the others)\n      \n      // ripple effect\n      // use distance with sin(), keep angle the same\n       distance = distance + 8 * sin(distance/2);\n      \n      // freaky twist\n      // square angle and divide by 360º, keep distance the same\n      // angle = angle * angle / TWO_PI;\n      \n      // convert back to cartesian (x/y) coordinates \n      // using some trig so we can grab a pixel from the\n      // the source image\n      let tempX = centerX + cos(angle) * distance;\n      let tempY = centerY + sin(angle) * distance;\n      \n      // get the pixel and put it into the output image\n      let px = input.get(tempX, tempY);\n      output.set(x,y, px);\n    }\n  }\n  output.updatePixels();\n  return output;\n}\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67d85f3e20b93b787ec27102",
        "createdAt": "2025-03-17T17:51:28.151Z",
        "updatedAt": "2025-03-17T17:51:28.151Z",
        "id": "67d85f3e20b93b787ec27102"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d85f3e20b93b787ec27101",
        "createdAt": "2025-03-17T17:51:28.151Z",
        "updatedAt": "2025-03-17T17:51:28.151Z",
        "id": "67d85f3e20b93b787ec27101"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d85f3e20b93b787ec27103",
        "createdAt": "2025-03-17T17:51:28.151Z",
        "updatedAt": "2025-03-17T17:51:28.151Z",
        "id": "67d85f3e20b93b787ec27103"
      },
      {
        "name": "assets",
        "content": "",
        "children": [
          "67d85f3e20b93b787ec27100"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d85f3e20b93b787ec270ff",
        "createdAt": "2025-03-17T17:51:28.151Z",
        "updatedAt": "2025-03-17T17:51:28.151Z",
        "id": "67d85f3e20b93b787ec270ff"
      },
      {
        "name": "test.jpg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/a6945e71-08c2-4446-a3da-db45ced3c606.jpg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d85f3e20b93b787ec27100",
        "createdAt": "2025-03-17T17:51:28.151Z",
        "updatedAt": "2025-03-17T17:51:28.151Z",
        "id": "67d85f3e20b93b787ec27100"
      }
    ],
    "createdAt": "2025-03-17T17:43:27.144Z",
    "updatedAt": "2025-03-17T17:51:28.151Z",
    "id": "kndxHOP5m"
  },
  {
    "_id": "H2aWHuHBf",
    "name": "Curious fascinator",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "674f60eddc77de05d9db324e",
          "674f60eddc77de05d9db324d",
          "674f60eddc77de05d9db324f"
        ],
        "fileType": "folder",
        "_id": "674f60eddc77de05d9db3250",
        "createdAt": "2024-12-04T00:08:07.741Z",
        "updatedAt": "2024-12-04T00:08:07.741Z",
        "id": "674f60eddc77de05d9db3250"
      },
      {
        "name": "sketch.js",
        "content": "let xLength, yLength;\n\n// Laser line objects\nlet leftLine = {\n  x1: 0,\n  y1: 0,\n  x2: 0,\n  y2: 0,\n  offset: 0, // movement offset\n};\n\nlet rightLine = {\n  x1: 0,\n  y1: 0,\n  x2: 0,\n  y2: 0,\n  offset: 0, // movement offset\n};\n\n// Variables for automatic animation\nlet distValue = 10;\nlet lineValue = 75;\nlet distDirection = 1; // Controls \"opening\" or \"closing\"\nlet lineDirection = 1; // Expanding or shrinking the number of lines\n\n// Toggle state for lasers\nlet laser = 0; // Set to 1 to enable lasers, 0 to disable\n\nfunction setup() {\n  xLength = windowWidth;\n  yLength = windowHeight;\n  createCanvas(xLength, yLength);\n\n  initializeLines();\n}\n\nfunction draw() {\n  background(0);\n\n  // If laser is toggled on, animate and draw the lasers\n  if (laser === 1) {\n    updateLaserMotion();\n    animateValues();\n    drawLasers();\n  }\n}\n\n// Handle resizing the window dynamically\nfunction windowResized() {\n  xLength = windowWidth;\n  yLength = windowHeight;\n  resizeCanvas(xLength, yLength);\n\n  initializeLines();\n}\n\n// Initialize or update laser line positions\nfunction initializeLines() {\n  leftLine.x1 = 0;\n  leftLine.y1 = yLength;\n  leftLine.x2 = xLength;\n  leftLine.y2 = 0;\n\n  rightLine.x1 = xLength;\n  rightLine.y1 = yLength;\n  rightLine.x2 = 0;\n  rightLine.y2 = 0;\n}\n\n// Update the motion of the laser lines\nfunction updateLaserMotion() {\n  let maxOffset = width / 4; // Maximum oscillation range\n\n  // Use sine wave for smooth oscillation\n  leftLine.offset = sin(frameCount * 0.02) * maxOffset;\n  rightLine.offset = cos(frameCount * 0.02) * maxOffset;\n\n  // Update positions based on offset\n  leftLine.x1 = leftLine.offset;\n  leftLine.x2 = xLength - leftLine.offset;\n\n  rightLine.x1 = xLength - rightLine.offset;\n  rightLine.x2 = rightLine.offset;\n}\n\n// Animate the distValue (line spacing) and lineValue (number of lines)\nfunction animateValues() {\n  // Change distValue to create \"opening\" and \"closing\" effect\n  distValue += distDirection * 0.05;\n  if (distValue > 10 || distValue < 2) {\n    distDirection *= -1; // Reverse direction\n  }\n\n  // Change lineValue to expand or shrink the number of lines\n  lineValue += lineDirection * 0.1;\n  if (lineValue > 30 || lineValue < 5) {\n    lineDirection *= -1; // Reverse direction\n  }\n}\n\n// Draw all four laser patterns\nfunction drawLasers() {\n  vertLine1();\n  vertLine2();\n  vertLine3();\n  vertLine4();\n}\n\n// Laser patterns\nfunction vertLine1() {\n  strokeWeight(1);\n  stroke(10, 255, 155);\n  let x2 = leftLine.x2;\n  line(leftLine.x1, leftLine.y1, leftLine.x2, leftLine.y2);\n  for (let i = 0; i < lineValue; i++) {\n    line(leftLine.x1, leftLine.y1, x2, leftLine.y2);\n    let shiftX = -distValue;\n    x2 += shiftX;\n  }\n}\n\nfunction vertLine2() {\n  strokeWeight(1);\n  stroke(255, 50, 150);\n  let x2 = rightLine.x2;\n  line(rightLine.x1, rightLine.y1, rightLine.x2, rightLine.y2);\n  for (let i = 0; i < lineValue; i++) {\n    line(rightLine.x1, rightLine.y1, x2, rightLine.y2);\n    let shiftX = distValue;\n    x2 += shiftX;\n  }\n}\n\nfunction vertLine3() {\n  strokeWeight(1);\n  stroke(10, 255, 155);\n  let x2 = leftLine.x2;\n  line(leftLine.x1, leftLine.y2, leftLine.x2, leftLine.y1);\n  for (let i = 0; i < lineValue; i++) {\n    line(leftLine.x1, leftLine.y2, x2, leftLine.y1);\n    let shiftX = -distValue;\n    x2 += shiftX;\n  }\n}\n\nfunction vertLine4() {\n  strokeWeight(1);\n  stroke(255, 50, 150);\n  let x2 = rightLine.x2;\n  line(rightLine.x1, rightLine.y2, rightLine.x2, rightLine.y1);\n  for (let i = 0; i < lineValue; i++) {\n    line(rightLine.x1, rightLine.y2, x2, rightLine.y1);\n    let shiftX = distValue;\n    x2 += shiftX;\n  }\n}\n\n// Toggle laser effect using a keypress\nfunction keyPressed() {\n  if (key === \"l\" || key === \"L\") {\n    laser = 1 - laser; // Toggle laser state between 1 and 0\n  }\n}\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "674f60eddc77de05d9db324d",
        "createdAt": "2024-12-04T00:08:07.741Z",
        "updatedAt": "2024-12-04T00:08:07.741Z",
        "id": "674f60eddc77de05d9db324d"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "674f60eddc77de05d9db324e",
        "createdAt": "2024-12-04T00:08:07.741Z",
        "updatedAt": "2024-12-04T00:08:07.741Z",
        "id": "674f60eddc77de05d9db324e"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "674f60eddc77de05d9db324f",
        "createdAt": "2024-12-04T00:08:07.741Z",
        "updatedAt": "2024-12-04T00:08:07.741Z",
        "id": "674f60eddc77de05d9db324f"
      }
    ],
    "updatedAt": "2024-12-04T00:08:07.741Z",
    "createdAt": "2024-12-03T20:02:05.632Z",
    "id": "H2aWHuHBf"
  },
  {
    "_id": "fUActqNTu",
    "name": "CYW • WK1 • Encode Demo COPY",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6797b585f9e4831426de129c",
          "6797b585f9e4831426de129d",
          "6797b585f9e4831426de129e"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6797b585f9e4831426de129b",
        "createdAt": "2025-01-27T16:34:20.054Z",
        "updatedAt": "2025-01-27T16:34:20.054Z",
        "id": "6797b585f9e4831426de129b"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(300, 450);\n  // 0-360 degrees rather than radians\n  angleMode(DEGREES);\n  // draw from center rather than corner\n  rectMode(CENTER);\n}\n\nfunction draw() {\n  background(0);\n  \n  stroke(0,0,255)\n  \n  // red rectangle, height of canvas\n  fill(255, 0, 0);\n  rect(width / 2, height / 2, width / 2, height);\n\n  // top rotated square, over rectangle (ribbon cut out)\n  push();\n  translate(width / 2, 0);\n  rotate(45);\n  fill(0);\n  square(0, 0, width / 2);\n  pop();\n  \n  // bottom rotated square, over rectangle (ribbon cut out)\n  push();\n  translate(width / 2, height);\n  rotate(45);\n  fill(0);\n  square(0, 0, width / 2);\n  pop();\n  \n  // cut rectangle in half \n  strokeWeight(5);\n  line(0, height / 2, width, height / 2);\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6797b585f9e4831426de129d",
        "createdAt": "2025-01-27T16:34:20.054Z",
        "updatedAt": "2025-01-27T16:34:20.054Z",
        "id": "6797b585f9e4831426de129d"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6797b585f9e4831426de129c",
        "createdAt": "2025-01-27T16:34:20.054Z",
        "updatedAt": "2025-01-27T16:34:20.054Z",
        "id": "6797b585f9e4831426de129c"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6797b585f9e4831426de129e",
        "createdAt": "2025-01-27T16:34:20.054Z",
        "updatedAt": "2025-01-27T16:34:20.054Z",
        "id": "6797b585f9e4831426de129e"
      }
    ],
    "createdAt": "2025-01-27T16:34:13.880Z",
    "updatedAt": "2025-01-27T16:34:20.054Z",
    "id": "fUActqNTu"
  },
  {
    "_id": "89uEw5JpR",
    "name": "CYW • WK3 Patterns • Review loops COPY",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67ad1392d4da6ab815c4e061",
          "67ad1392d4da6ab815c4e062",
          "67ad1392d4da6ab815c4e063"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67ad1392d4da6ab815c4e060",
        "createdAt": "2025-02-12T21:33:11.266Z",
        "updatedAt": "2025-02-12T21:33:11.266Z",
        "id": "67ad1392d4da6ab815c4e060"
      },
      {
        "name": "sketch.js",
        "content": "/*\n\nAssemble and modify:\n1. Unscramble and assemble the code to create something like this:\nhttps://printablee.com/postpic/2015/04/free-printable-grid-paper_18888.png\n\n2. Add some random variation, for example:\n\n- Change some of the elements to be different from the others\n- Or maybe all the elements are different from each other\n- Or replace an element with an entirely new one\n\n*/\n\nlet cellSize;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  \n}\n\nfunction draw() {\n  background(255);\n  strokeWeight(2);\n  noFill();\n  cellSize = min(width / 10, height / 10);\n  \n  for (let y = 0; y < height; y += cellSize) {\n    for (let x = 0; x < width; x += cellSize) {\n      square(x, y, cellSize);\n    }\n  }\n  \n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67ad1392d4da6ab815c4e062",
        "createdAt": "2025-02-12T21:33:11.266Z",
        "updatedAt": "2025-02-12T21:33:11.266Z",
        "id": "67ad1392d4da6ab815c4e062"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ad1392d4da6ab815c4e061",
        "createdAt": "2025-02-12T21:33:11.266Z",
        "updatedAt": "2025-02-12T21:33:11.266Z",
        "id": "67ad1392d4da6ab815c4e061"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ad1392d4da6ab815c4e063",
        "createdAt": "2025-02-12T21:33:11.266Z",
        "updatedAt": "2025-02-12T21:33:11.266Z",
        "id": "67ad1392d4da6ab815c4e063"
      }
    ],
    "createdAt": "2025-02-12T21:33:06.614Z",
    "updatedAt": "2025-02-12T21:33:11.266Z",
    "id": "89uEw5JpR"
  },
  {
    "_id": "s_iG1dTLW",
    "name": "CYW • WK4 Progession • Review arrays 2 copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67b4a3863414b963976958d2",
          "67b4a3863414b963976958d3",
          "67b4a3863414b963976958d4"
        ],
        "fileType": "folder",
        "_id": "67b4a3863414b963976958d1",
        "createdAt": "2025-02-18T15:13:24.282Z",
        "updatedAt": "2025-02-18T15:13:24.282Z",
        "id": "67b4a3863414b963976958d1"
      },
      {
        "name": "sketch.js",
        "content": "let columnWidth;\nlet columnHeight;\nlet hues = [0,15,30]\n\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  colorMode(HSB,360,100,100)\n  columnWidth = width / 3;\n  columnHeight = height / 3; \n \n}\n\nfunction draw() {\n  background(255,100,100);\n\n  for (let counter = 0; counter < 3; counter++) {\n    // let h = counter * 15;\n    let h = hues[counter]\n    let x = counter * columnWidth;\n    let y = height / 4;\n    \n    fill(h,100,100)\n    rect(x, y, columnWidth, columnHeight);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67b4a3863414b963976958d3",
        "createdAt": "2025-02-18T15:13:24.282Z",
        "updatedAt": "2025-02-18T15:13:24.282Z",
        "id": "67b4a3863414b963976958d3"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "67b4a3863414b963976958d2",
        "createdAt": "2025-02-18T15:13:24.282Z",
        "updatedAt": "2025-02-18T15:13:24.282Z",
        "id": "67b4a3863414b963976958d2"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "67b4a3863414b963976958d4",
        "createdAt": "2025-02-18T15:13:24.282Z",
        "updatedAt": "2025-02-18T15:13:24.282Z",
        "id": "67b4a3863414b963976958d4"
      }
    ],
    "createdAt": "2025-02-18T15:13:10.275Z",
    "updatedAt": "2025-02-18T15:13:24.282Z",
    "id": "s_iG1dTLW"
  },
  {
    "_id": "kgL8HIks2",
    "name": "CYW • WK4 Progession • Review arrays 2 copy copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67b4a3d03414b963976958d6",
          "67b4a3d03414b963976958d7",
          "67b4a3d03414b963976958d8"
        ],
        "fileType": "folder",
        "_id": "67b4a3d03414b963976958d5",
        "createdAt": "2025-02-18T15:15:22.685Z",
        "updatedAt": "2025-02-18T15:15:22.685Z",
        "id": "67b4a3d03414b963976958d5"
      },
      {
        "name": "sketch.js",
        "content": "let columnWidth;\nlet columnHeight;\nlet hues = [0,15,30];\n\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  colorMode(HSB,360,100,100)\n  columnWidth = width / 3;\n  columnHeight = height / 3; \n \n}\n\nfunction draw() {\n  background(255,100,100);\n\n  for (let counter = 0; counter < 3; counter++) {\n    // let h = counter * 15;\n    let h = hues[counter]\n    let x = counter * columnWidth;\n    let y = height / 4;\n    \n    fill(h,100,100)\n    rect(x, y, columnWidth, columnHeight);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67b4a3d03414b963976958d7",
        "createdAt": "2025-02-18T15:15:22.685Z",
        "updatedAt": "2025-02-18T15:15:22.685Z",
        "id": "67b4a3d03414b963976958d7"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "67b4a3d03414b963976958d6",
        "createdAt": "2025-02-18T15:15:22.685Z",
        "updatedAt": "2025-02-18T15:15:22.685Z",
        "id": "67b4a3d03414b963976958d6"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "67b4a3d03414b963976958d8",
        "createdAt": "2025-02-18T15:15:22.685Z",
        "updatedAt": "2025-02-18T15:15:22.685Z",
        "id": "67b4a3d03414b963976958d8"
      }
    ],
    "createdAt": "2025-02-18T15:14:24.876Z",
    "updatedAt": "2025-02-18T15:15:22.685Z",
    "id": "kgL8HIks2"
  },
  {
    "_id": "jjQGKsZeS",
    "name": "CYW • WK4 Progession • Review arrays 3 copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67b4a6b179f7d2e533913dc5",
          "67b4a6b179f7d2e533913dc6",
          "67b4a6b179f7d2e533913dc7"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67b4a6b179f7d2e533913dc4",
        "createdAt": "2025-02-18T15:26:43.783Z",
        "updatedAt": "2025-02-18T15:26:43.783Z",
        "id": "67b4a6b179f7d2e533913dc4"
      },
      {
        "name": "sketch.js",
        "content": "let total = 20;\nlet columnWidth;\nlet columnHeight;\nlet hues = [];\nlet baseHue = 30;\nlet hueIncrement = 30;\nlet hFill;\n\n\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  colorMode(HSB, 360, 100, 100);\n  columnWidth = width / total;\n  columnHeight = height / 3;\n  baseHue = round(random(0,300))\n  \n  for (let i = 0; i<3; i++) {\n    let h = baseHue + i * hueIncrement\n    hues.push(h)\n  }\n  console.log(hues)\n}\n\nfunction draw() {\n  background(255);\n\n  for (let counter = 0; counter < total; counter++) {\n\n    if (counter < total/3) {\n      hFill = hues[0]\n    } else if (counter < (total/3) * 2) {\n      hFill = hues[1]\n    } else {\n      hFill = hues[2]\n    }\n    \n    let x = counter * columnWidth;\n    let y = height / 4;\n        // let h = counter * 15;\n    // let h = hues[counter]\n    fill(hFill,100,100)\n    rect(x, y, columnWidth, columnHeight);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67b4a6b179f7d2e533913dc6",
        "createdAt": "2025-02-18T15:26:43.783Z",
        "updatedAt": "2025-02-18T15:26:43.783Z",
        "id": "67b4a6b179f7d2e533913dc6"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b4a6b179f7d2e533913dc5",
        "createdAt": "2025-02-18T15:26:43.783Z",
        "updatedAt": "2025-02-18T15:26:43.783Z",
        "id": "67b4a6b179f7d2e533913dc5"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b4a6b179f7d2e533913dc7",
        "createdAt": "2025-02-18T15:26:43.783Z",
        "updatedAt": "2025-02-18T15:26:43.783Z",
        "id": "67b4a6b179f7d2e533913dc7"
      }
    ],
    "createdAt": "2025-02-18T15:26:41.200Z",
    "updatedAt": "2025-02-18T15:26:43.783Z",
    "id": "jjQGKsZeS"
  },
  {
    "_id": "---zD4iJ3",
    "name": "CYW • WK4 Progression • Review functions copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67b4a963fb93ceda7ef4feab",
          "67b4a963fb93ceda7ef4feac",
          "67b4a963fb93ceda7ef4fead"
        ],
        "fileType": "folder",
        "_id": "67b4a963fb93ceda7ef4feaa",
        "createdAt": "2025-02-18T15:36:21.035Z",
        "updatedAt": "2025-02-18T15:36:21.035Z",
        "id": "67b4a963fb93ceda7ef4feaa"
      },
      {
        "name": "sketch.js",
        "content": "// original by MOQN: https://editor.p5js.org/MOQN/sketches/YSWaCDB6f\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(50);\n  drawPinwheel(200, 200, 0.01);\n  drawPinwheel(100, 200, 0.4);\n  drawPinwheel(300, 200, 0.2);\n}\n\nfunction drawPinwheel(x, y, spd) {\n  push();\n  translate(x, y);\n  rotate(frameCount * spd);\n  ellipse(0, 0, 100, 20);\n  ellipse(0, 0, 20, 100);\n  pop();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67b4a963fb93ceda7ef4feac",
        "createdAt": "2025-02-18T15:36:21.035Z",
        "updatedAt": "2025-02-18T15:36:21.035Z",
        "id": "67b4a963fb93ceda7ef4feac"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "67b4a963fb93ceda7ef4feab",
        "createdAt": "2025-02-18T15:36:21.035Z",
        "updatedAt": "2025-02-18T15:36:21.035Z",
        "id": "67b4a963fb93ceda7ef4feab"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "67b4a963fb93ceda7ef4fead",
        "createdAt": "2025-02-18T15:36:21.035Z",
        "updatedAt": "2025-02-18T15:36:21.035Z",
        "id": "67b4a963fb93ceda7ef4fead"
      }
    ],
    "createdAt": "2025-02-18T15:38:11.716Z",
    "updatedAt": "2025-02-18T15:38:11.716Z",
    "id": "---zD4iJ3"
  },
  {
    "_id": "_9Cy4Dy9u",
    "name": "CYW • WK5 Parametric Geometries • Example 1 (warm-up to parametric equations) copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67bc89a5abfcadd4afd0ecd1",
          "67bc89a5abfcadd4afd0ecd2",
          "67bc89a5abfcadd4afd0ecd3"
        ],
        "fileType": "folder",
        "_id": "67bc89a5abfcadd4afd0ecd0",
        "createdAt": "2025-02-24T15:01:32.489Z",
        "updatedAt": "2025-02-24T15:01:32.489Z",
        "id": "67bc89a5abfcadd4afd0ecd0"
      },
      {
        "name": "sketch.js",
        "content": "/*\nInspired by the classic Windows Mystify screensaver\n\nBased on code translation from Chris DeLeon's Programming in 5 minutes: remaking “Mystify Your Mind” Windows 95-style screensaver effect\nhttps://www.youtube.com/watch?v=-X_A1Hqj-qA\n*/\n\n\nlet x1;\nlet y1;\nlet x2;\nlet y2;\n\nlet x1speed;\nlet y1speed;\nlet x2speed;\nlet y2speed;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  stroke(255);\n  strokeWeight(2);\n\n  x1 = random(width);\n  y1 = random(height);\n  x2 = random(width);\n  y2 = random(height);\n\n  x1speed = random(-10, 10);\n  y1speed = random(-10, 10);\n  x2speed = random(-10, 10);\n  y2speed = random(-10, 10);\n}\n\nfunction draw() {\n  background(0, 10);\n\n  line(x1, y1, x2, y2);\n  circle(x1, y1,20);\n  circle(x2, y2,20)\n  \n  x1 += x1speed;\n  y1 += y1speed;\n  x2 += x2speed;\n  y2 += y2speed;\n\n  if (x1 < 0 || x1 > width) x1speed *= -1;\n  if (y1 < 0 || y1 > height) y1speed *= -1;\n  if (x2 < 0 || x2 > width) x2speed *= -1;\n  if (y2 < 0 || y2 > height) y2speed *= -1;\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight)\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67bc89a5abfcadd4afd0ecd2",
        "createdAt": "2025-02-24T15:01:32.489Z",
        "updatedAt": "2025-02-24T15:01:32.489Z",
        "id": "67bc89a5abfcadd4afd0ecd2"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "67bc89a5abfcadd4afd0ecd1",
        "createdAt": "2025-02-24T15:01:32.489Z",
        "updatedAt": "2025-02-24T15:01:32.489Z",
        "id": "67bc89a5abfcadd4afd0ecd1"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "67bc89a5abfcadd4afd0ecd3",
        "createdAt": "2025-02-24T15:01:32.489Z",
        "updatedAt": "2025-02-24T15:01:32.489Z",
        "id": "67bc89a5abfcadd4afd0ecd3"
      }
    ],
    "createdAt": "2025-02-24T15:00:53.341Z",
    "updatedAt": "2025-02-24T15:01:32.489Z",
    "id": "_9Cy4Dy9u"
  },
  {
    "_id": "gOxV_RQX8",
    "name": "CYW • WK5 Parametric Geometries • Example 1 (warm-up to parametric equations) copy copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67bc8a51abfcadd4afd0ecd5",
          "67bc8a51abfcadd4afd0ecd6",
          "67bc8a51abfcadd4afd0ecd7"
        ],
        "fileType": "folder",
        "_id": "67bc8a51abfcadd4afd0ecd4",
        "createdAt": "2025-02-24T15:01:32.489Z",
        "updatedAt": "2025-02-24T15:01:32.489Z",
        "id": "67bc8a51abfcadd4afd0ecd4"
      },
      {
        "name": "sketch.js",
        "content": "/*\nInspired by the classic Windows Mystify screensaver\n\nBased on code translation from Chris DeLeon's Programming in 5 minutes: remaking “Mystify Your Mind” Windows 95-style screensaver effect\nhttps://www.youtube.com/watch?v=-X_A1Hqj-qA\n*/\n\n\nlet x1;\nlet y1;\nlet x2;\nlet y2;\n\nlet x1speed;\nlet y1speed;\nlet x2speed;\nlet y2speed;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  stroke(255);\n  strokeWeight(2);\n\n  x1 = random(width);\n  y1 = random(height);\n  x2 = random(width);\n  y2 = random(height);\n\n  x1speed = random(-10, 10);\n  y1speed = random(-10, 10);\n  x2speed = random(-10, 10);\n  y2speed = random(-10, 10);\n}\n\nfunction draw() {\n  background(0, 10);\n\n  line(x1, y1, x2, y2);\n  circle(x1, y1,20);\n  circle(x2, y2,20)\n  \n  x1 += x1speed;\n  y1 += y1speed;\n  x2 += x2speed;\n  y2 += y2speed;\n\n  if (x1 < 0 || x1 > width) x1speed *= -1;\n  if (y1 < 0 || y1 > height) y1speed *= -1;\n  if (x2 < 0 || x2 > width) x2speed *= -1;\n  if (y2 < 0 || y2 > height) y2speed *= -1;\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight)\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67bc8a51abfcadd4afd0ecd6",
        "createdAt": "2025-02-24T15:01:32.489Z",
        "updatedAt": "2025-02-24T15:01:32.489Z",
        "id": "67bc8a51abfcadd4afd0ecd6"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "67bc8a51abfcadd4afd0ecd5",
        "createdAt": "2025-02-24T15:01:32.489Z",
        "updatedAt": "2025-02-24T15:01:32.489Z",
        "id": "67bc8a51abfcadd4afd0ecd5"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "67bc8a51abfcadd4afd0ecd7",
        "createdAt": "2025-02-24T15:01:32.489Z",
        "updatedAt": "2025-02-24T15:01:32.489Z",
        "id": "67bc8a51abfcadd4afd0ecd7"
      }
    ],
    "createdAt": "2025-02-24T15:03:45.519Z",
    "updatedAt": "2025-02-24T15:03:45.519Z",
    "id": "gOxV_RQX8"
  },
  {
    "_id": "w5aE2ZkQH",
    "name": "CYW • WK5 Parametric Geometries • Example 2 copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67bc8a4ceee2e61496fc3e7c",
          "67bc8a4ceee2e61496fc3e7d",
          "67bc8a4ceee2e61496fc3e7e"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67bc8a4ceee2e61496fc3e7b",
        "createdAt": "2023-02-22T20:25:50.443Z",
        "updatedAt": "2023-02-22T20:25:50.443Z",
        "id": "67bc8a4ceee2e61496fc3e7b"
      },
      {
        "name": "sketch.js",
        "content": "/*\nBased on Alexander Miller’s video on Recreating Vintage Computer Art with Processing and inspired by John Whitney's work:\nhttps://www.youtube.com/watch?v=LaarVR1AOvs&t=181s\n*/\n\nlet t = 0;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  strokeWeight(2);\n  stroke(255);\n}\n\nfunction draw() {\n  background(0, 20);\n  \n  translate(width / 2, height / 2);\n\n  let amplitude = width / 4;\n\n  let x1 = sin(t / 10) * amplitude;\n  let y1 = cos(t / 10) * amplitude;\n\n  let x2 = sin(t / 15) * amplitude * 2;\n  let y2 = cos(t / 10) * amplitude * 2;\n\n  line(x1, y1, x2, y2);\n  t += 0.5;\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n  background(0);\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67bc8a4ceee2e61496fc3e7d",
        "createdAt": "2023-02-22T20:25:50.443Z",
        "updatedAt": "2023-02-22T20:25:50.443Z",
        "id": "67bc8a4ceee2e61496fc3e7d"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67bc8a4ceee2e61496fc3e7c",
        "createdAt": "2023-02-22T20:25:50.443Z",
        "updatedAt": "2023-02-22T20:25:50.443Z",
        "id": "67bc8a4ceee2e61496fc3e7c"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67bc8a4ceee2e61496fc3e7e",
        "createdAt": "2023-02-22T20:25:50.443Z",
        "updatedAt": "2023-02-22T20:25:50.443Z",
        "id": "67bc8a4ceee2e61496fc3e7e"
      }
    ],
    "createdAt": "2025-02-24T15:03:40.918Z",
    "updatedAt": "2025-02-24T15:03:40.918Z",
    "id": "w5aE2ZkQH"
  },
  {
    "_id": "It3L5mcB9",
    "name": "CYW • WK5 Parametric Geometries • Example 3 copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67bc8ac5b8d49c10e5360e66",
          "67bc8ac5b8d49c10e5360e67",
          "67bc8ac5b8d49c10e5360e68"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67bc8ac5b8d49c10e5360e65",
        "createdAt": "2023-02-22T20:26:07.235Z",
        "updatedAt": "2023-02-22T20:26:07.235Z",
        "id": "67bc8ac5b8d49c10e5360e65"
      },
      {
        "name": "sketch.js",
        "content": "/*\nBased on Alexander Miller’s video on Recreating Vintage Computer Art with Processing and inspired by John Whitney's work:\nhttps://www.youtube.com/watch?v=LaarVR1AOvs&t=181s\n*/\n\nlet t = 0;\nlet numLines = 40;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  strokeWeight(2);\n  stroke(255);\n}\n\nfunction draw() {\n  background(0);\n  translate(width / 2, height / 2);\n\n  let amplitude = width / 4;\n\n  for (let i = 0; i < numLines; i++) {\n    let x1 = sin((t + i) / 10) * amplitude;\n    let y1 = cos((-t + i) / 10) * amplitude + sin(((t + 1) / 5) * 50);\n\n    let x2 = sin((t + i) / 20) * (amplitude * 2) + cos(t + 1) * 10;\n    let y2 = cos((-t + i) / 10) * (amplitude * 2);\n\n    line(x1, y1, x2, y2);\n  }\n\n  t += 0.2;\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n  background(0);\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67bc8ac5b8d49c10e5360e67",
        "createdAt": "2023-02-22T20:26:07.235Z",
        "updatedAt": "2023-02-22T20:26:07.235Z",
        "id": "67bc8ac5b8d49c10e5360e67"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67bc8ac5b8d49c10e5360e66",
        "createdAt": "2023-02-22T20:26:07.235Z",
        "updatedAt": "2023-02-22T20:26:07.235Z",
        "id": "67bc8ac5b8d49c10e5360e66"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67bc8ac5b8d49c10e5360e68",
        "createdAt": "2023-02-22T20:26:07.235Z",
        "updatedAt": "2023-02-22T20:26:07.235Z",
        "id": "67bc8ac5b8d49c10e5360e68"
      }
    ],
    "createdAt": "2025-02-24T15:05:41.862Z",
    "updatedAt": "2025-02-24T15:05:41.862Z",
    "id": "It3L5mcB9"
  },
  {
    "_id": "lb6jK1b-1",
    "name": "CYW • WK6 Refactoring • Example 4 copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67c5d48e14743f53b5e57054",
          "67c5d48e14743f53b5e57055",
          "67c5d48e14743f53b5e57056"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67c5d48e14743f53b5e57053",
        "createdAt": "2025-03-03T16:39:24.086Z",
        "updatedAt": "2025-03-03T16:39:24.086Z",
        "id": "67c5d48e14743f53b5e57053"
      },
      {
        "name": "sketch.js",
        "content": "/*\nInspired by the classic Windows Mystify screensaver\n\nBased on code translation from Chris DeLeon's Programming in 5 minutes: remaking \n“Mystify Your Mind” Windows 95-style screensaver effect.\nhttps://www.youtube.com/watch?v=-X_A1Hqj-qA\n*/\n\nlet lines = [];\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  stroke(255);\n  strokeWeight(2);\n  \n  for (let i = 0; i < 2; i++) {\n    lines.push(new bouncyLine());\n  }\n}\n\nfunction draw() {\n  background(0, 10);\n\n  // Iterate over each line and update its movement\n  lines.forEach(line => {\n    line.update();\n    line.display();\n  });\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n}\n\nclass bouncyLine {\n  constructor() {\n    this.x1 = random(width);\n    this.y1 = random(height);\n    this.x2 = random(width);\n    this.y2 = random(height);\n    this.dx1 = random(-10, 10);\n    this.dy1 = random(-10, 10);\n    this.dx2 = random(-10, 10);\n    this.dy2 = random(-10, 10);\n  }\n  \n  update() {\n    this.x1 += this.dx1;\n    this.y1 += this.dy1;\n    this.x2 += this.dx2;\n    this.y2 += this.dy2;\n    \n    this.checkBounds();\n  }\n  \n  checkBounds() {\n    if (this.x1 < 0 || this.x1 > width) this.dx1 *= -1;\n    if (this.y1 < 0 || this.y1 > height) this.dy1 *= -1;\n    if (this.x2 < 0 || this.x2 > width) this.dx2 *= -1;\n    if (this.y2 < 0 || this.y2 > height) this.dy2 *= -1;\n  }\n\n  display() {\n    line(this.x1, this.y1, this.x1, this.y2);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67c5d48e14743f53b5e57055",
        "createdAt": "2025-03-03T16:39:24.086Z",
        "updatedAt": "2025-03-03T16:39:24.086Z",
        "id": "67c5d48e14743f53b5e57055"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67c5d48e14743f53b5e57054",
        "createdAt": "2025-03-03T16:39:24.086Z",
        "updatedAt": "2025-03-03T16:39:24.086Z",
        "id": "67c5d48e14743f53b5e57054"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67c5d48e14743f53b5e57056",
        "createdAt": "2025-03-03T16:39:24.086Z",
        "updatedAt": "2025-03-03T16:39:24.086Z",
        "id": "67c5d48e14743f53b5e57056"
      }
    ],
    "createdAt": "2025-03-03T16:10:54.132Z",
    "updatedAt": "2025-03-03T16:39:24.086Z",
    "id": "lb6jK1b-1"
  },
  {
    "_id": "1MyYEo6u-",
    "name": "Delayed videos copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "674367ff61c4cc0471d70686",
          "674367ff61c4cc0471d70687",
          "674367ff61c4cc0471d70688"
        ],
        "fileType": "folder",
        "_id": "674367ff61c4cc0471d70685",
        "createdAt": "2024-11-24T01:09:59.344Z",
        "updatedAt": "2024-11-24T01:09:59.344Z",
        "id": "674367ff61c4cc0471d70685"
      },
      {
        "name": "sketch.js",
        "content": "let cols = 5; // Number of columns in the grid\nlet rows = 5; // Number of rows in the grid\nlet cellWidth, cellHeight;\nlet video;\nlet buffers = [];\n\nfunction setup() {\n  createCanvas(800, 800);\n  video = createCapture(VIDEO);\n  video.size(width, height); // Capture video at the canvas resolution\n  video.hide();\n\n  // Initialize buffers for each grid cell\n  for (let i = 0; i < cols * rows; i++) {\n    buffers.push([]);\n  }\n\n  cellWidth = width / cols;\n  cellHeight = height / rows;\n}\n\nfunction draw() {\n  background(0);\n\n  // Capture current frame\n  video.loadPixels();\n  let currentFrame = video.get(); // Get the full-resolution frame\n\n  // Add the current frame to each buffer\n  for (let i = 0; i < buffers.length; i++) {\n    buffers[i].push(currentFrame);\n\n    // Limit the buffer size to create delay\n    if (buffers[i].length > (i + 1) * 5) {\n      buffers[i].shift();\n    }\n  }\n\n  // Draw the delayed frames\n  for (let y = 0; y < rows; y++) {\n    for (let x = 0; x < cols; x++) {\n      let index = x + y * cols;\n\n      // Check if the buffer has a delayed frame to display\n      if (buffers[index].length > 0) {\n        let frameToShow = buffers[index][0];\n        image(frameToShow, x * cellWidth, y * cellHeight, cellWidth, cellHeight);\n      }\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "674367ff61c4cc0471d70687",
        "createdAt": "2024-11-24T01:09:59.344Z",
        "updatedAt": "2024-11-24T01:09:59.344Z",
        "id": "674367ff61c4cc0471d70687"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "674367ff61c4cc0471d70686",
        "createdAt": "2024-11-24T01:09:59.344Z",
        "updatedAt": "2024-11-24T01:09:59.344Z",
        "id": "674367ff61c4cc0471d70686"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "674367ff61c4cc0471d70688",
        "createdAt": "2024-11-24T01:09:59.344Z",
        "updatedAt": "2024-11-24T01:09:59.344Z",
        "id": "674367ff61c4cc0471d70688"
      }
    ],
    "createdAt": "2024-11-24T17:53:03.600Z",
    "updatedAt": "2024-11-24T17:53:03.600Z",
    "id": "1MyYEo6u-"
  },
  {
    "_id": "dDhoPENQv",
    "name": "drum beat starter COPY",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67ab90a5c94a777e4686ce44",
          "67ab90a5c94a777e4686ce45",
          "67ab90a5c94a777e4686ce4b",
          "67ab90a5c94a777e4686ce4c"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67ab90a5c94a777e4686ce43",
        "createdAt": "2025-02-11T19:00:21.310Z",
        "updatedAt": "2025-02-11T19:00:21.310Z",
        "id": "67ab90a5c94a777e4686ce43"
      },
      {
        "name": "sketch.js",
        "content": "// Create a 120BPM beat\n\n// Create a Players object and load/label the drum kit files\nconst kit = new Tone.Players({\n  \"kick\": \"samples/505/kick.mp3\", \n  \"snare\": \"samples/505/snare.mp3\"\n  // ,\n  // \"hh\": \"samples/505/hh.mp3\",\n  // \"hho\": \"samples/505/hho.mp3\"\n});\nkit.toDestination();\n\nlet bpm = 120\nlet interval = 60/bpm;\nlet count = -1;\nlet louder = 0;\nlet softer = -20;\nlet beat;\nlet beatsPerMeasure = 2;\nlet measure;\nconst repeatEvent = new \nTone.Loop(playDrum, interval);\nrepeatEvent.start(0);\n\nfunction playDrum() {\n  count++\n  beat = count % beatsPerMeasure;\n  measure = floor(count/beatsPerMeasure);\n  kit.player(\"kick\").start();\n  if (beat === beatsPerMeasure - 1) {\n    kit.player(\"kick\").volume.rampTo(louder)\n  } else {\n    kit.player(\"kick\").volume.rampTo(softer)\n  }\n  console.log(count, beat, measure)\n}\n\nfunction setup(){\n  createCanvas(200, 200); \n  background(0);\n}\n\nfunction draw(){\n  \n}\n\nfunction keyPressed() {\n  Tone.Transport.start();\n  // if (key === 'a'){\n  //   kit.player(\"kick\").start();\n  // } else if (key === 's'){\n  //   kit.player(\"snare\").start();\n  // }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67ab90a5c94a777e4686ce4b",
        "createdAt": "2025-02-11T19:00:21.310Z",
        "updatedAt": "2025-02-11T19:00:21.310Z",
        "id": "67ab90a5c94a777e4686ce4b"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/tone/14.8.9/Tone.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ab90a5c94a777e4686ce44",
        "createdAt": "2025-02-11T19:00:21.310Z",
        "updatedAt": "2025-02-11T19:00:21.310Z",
        "id": "67ab90a5c94a777e4686ce44"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ab90a5c94a777e4686ce4c",
        "createdAt": "2025-02-11T19:00:21.310Z",
        "updatedAt": "2025-02-11T19:00:21.310Z",
        "id": "67ab90a5c94a777e4686ce4c"
      },
      {
        "name": "samples",
        "content": "",
        "children": [
          "67ab90a5c94a777e4686ce46"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67ab90a5c94a777e4686ce45",
        "createdAt": "2025-02-11T19:00:21.310Z",
        "updatedAt": "2025-02-11T19:00:21.310Z",
        "id": "67ab90a5c94a777e4686ce45"
      },
      {
        "name": "505",
        "content": "",
        "children": [
          "67ab90a5c94a777e4686ce47",
          "67ab90a5c94a777e4686ce48",
          "67ab90a5c94a777e4686ce49",
          "67ab90a5c94a777e4686ce4a"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67ab90a5c94a777e4686ce46",
        "createdAt": "2025-02-11T19:00:21.310Z",
        "updatedAt": "2025-02-11T19:00:21.310Z",
        "id": "67ab90a5c94a777e4686ce46"
      },
      {
        "name": "kick.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/cd3a99d9-0d5d-4f74-b4a6-b09812f6a524.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ab90a5c94a777e4686ce49",
        "createdAt": "2025-02-11T19:00:21.310Z",
        "updatedAt": "2025-02-11T19:00:21.310Z",
        "id": "67ab90a5c94a777e4686ce49"
      },
      {
        "name": "hh.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/09da0c25-067c-4383-9ed1-ac0d42b20b39.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ab90a5c94a777e4686ce47",
        "createdAt": "2025-02-11T19:00:21.310Z",
        "updatedAt": "2025-02-11T19:00:21.310Z",
        "id": "67ab90a5c94a777e4686ce47"
      },
      {
        "name": "snare.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/dd6eb086-0a20-49ea-903c-4299df2c325d.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ab90a5c94a777e4686ce4a",
        "createdAt": "2025-02-11T19:00:21.310Z",
        "updatedAt": "2025-02-11T19:00:21.310Z",
        "id": "67ab90a5c94a777e4686ce4a"
      },
      {
        "name": "hho.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/3926f363-fab6-4e5c-b84f-224bfa7322fd.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ab90a5c94a777e4686ce48",
        "createdAt": "2025-02-11T19:00:21.310Z",
        "updatedAt": "2025-02-11T19:00:21.310Z",
        "id": "67ab90a5c94a777e4686ce48"
      }
    ],
    "createdAt": "2025-02-11T18:02:14.335Z",
    "updatedAt": "2025-02-11T19:00:21.310Z",
    "id": "dDhoPENQv"
  },
  {
    "_id": "1EXsmsLSg",
    "name": "drum kit pads COPY",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67ab91967cc98354dc6c29f7",
          "67ab91967cc98354dc6c29f8",
          "67ab91967cc98354dc6c29fe",
          "67ab91967cc98354dc6c29ff"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67ab91967cc98354dc6c29f6",
        "createdAt": "2025-02-11T19:00:29.881Z",
        "updatedAt": "2025-02-11T19:00:29.881Z",
        "id": "67ab91967cc98354dc6c29f6"
      },
      {
        "name": "sketch.js",
        "content": "// Create a 120BPM beat\n\n// Create a Players object and load the drum kit files\nconst kit = new Tone.Players({\n  \"kick\": \"samples/505/kick.mp3\", \n  \"snare\": \"samples/505/snare.mp3\",\n  \"hh\": \"samples/505/hh.mp3\",\n  \"hho\": \"samples/505/hho.mp3\"\n});\nkit.toDestination();\n\nfunction setup(){\n  createCanvas(200, 200); \n  background(0);\n  console.log(\"PRESS:\\nj:kick\\nk:snare\\ni:hh\\nu:hho\");\n}\n\nfunction draw(){\n  noStroke();\n  fill(100);\n  rect(0, 0, width/2, height/2);\n  fill(200);\n  rect(width/2,0, width/2, height/2);  \n  fill(150);\n  rect(width/2, height/2, width/2, height/2);\n  fill(50);\n  rect(0, height/2, width/2, height/2);\n}\n\nfunction keyPressed(){\n  // Make sure the sound files have been completely loaded\n  if(key == \"j\"){\n      kit.player(\"kick\").start();  \n  }\n  else if(key == \"k\"){\n    kit.player(\"snare\").start();\n  }\n  else if(key == \"i\"){\n    kit.player(\"hh\").start();\n  }\n  else if(key == \"u\"){\n    kit.player(\"hho\").start();\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67ab91967cc98354dc6c29fe",
        "createdAt": "2025-02-11T19:00:29.881Z",
        "updatedAt": "2025-02-11T19:00:29.881Z",
        "id": "67ab91967cc98354dc6c29fe"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/tone/14.8.9/Tone.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ab91967cc98354dc6c29f7",
        "createdAt": "2025-02-11T19:00:29.881Z",
        "updatedAt": "2025-02-11T19:00:29.881Z",
        "id": "67ab91967cc98354dc6c29f7"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ab91967cc98354dc6c29ff",
        "createdAt": "2025-02-11T19:00:29.881Z",
        "updatedAt": "2025-02-11T19:00:29.881Z",
        "id": "67ab91967cc98354dc6c29ff"
      },
      {
        "name": "samples",
        "content": "",
        "children": [
          "67ab91967cc98354dc6c29f9"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67ab91967cc98354dc6c29f8",
        "createdAt": "2025-02-11T19:00:29.881Z",
        "updatedAt": "2025-02-11T19:00:29.881Z",
        "id": "67ab91967cc98354dc6c29f8"
      },
      {
        "name": "505",
        "content": "",
        "children": [
          "67ab91967cc98354dc6c29fa",
          "67ab91967cc98354dc6c29fb",
          "67ab91967cc98354dc6c29fc",
          "67ab91967cc98354dc6c29fd"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67ab91967cc98354dc6c29f9",
        "createdAt": "2025-02-11T19:00:29.881Z",
        "updatedAt": "2025-02-11T19:00:29.881Z",
        "id": "67ab91967cc98354dc6c29f9"
      },
      {
        "name": "kick.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/f81e024d-10bb-4d3e-9bdb-f4f22f448034.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ab91967cc98354dc6c29fc",
        "createdAt": "2025-02-11T19:00:29.881Z",
        "updatedAt": "2025-02-11T19:00:29.881Z",
        "id": "67ab91967cc98354dc6c29fc"
      },
      {
        "name": "hh.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/0e99a16b-1669-4a91-8be5-0d3b25bee637.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ab91967cc98354dc6c29fa",
        "createdAt": "2025-02-11T19:00:29.881Z",
        "updatedAt": "2025-02-11T19:00:29.881Z",
        "id": "67ab91967cc98354dc6c29fa"
      },
      {
        "name": "snare.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/a1157391-322f-4e08-a109-489e6930bbf0.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ab91967cc98354dc6c29fd",
        "createdAt": "2025-02-11T19:00:29.881Z",
        "updatedAt": "2025-02-11T19:00:29.881Z",
        "id": "67ab91967cc98354dc6c29fd"
      },
      {
        "name": "hho.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/fdc91b27-a562-4607-8d95-9b54808eb797.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ab91967cc98354dc6c29fb",
        "createdAt": "2025-02-11T19:00:29.881Z",
        "updatedAt": "2025-02-11T19:00:29.881Z",
        "id": "67ab91967cc98354dc6c29fb"
      }
    ],
    "createdAt": "2025-02-11T18:06:15.168Z",
    "updatedAt": "2025-02-11T19:00:29.881Z",
    "id": "1EXsmsLSg"
  },
  {
    "_id": "YIxktzOSy",
    "name": "DRUMPADS",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67bbcf0aa8e10021f83484c6",
          "67bbcf1798b45e7b9f0efe61",
          "67bbcf0f557e602f33dff711",
          "67bbcf03d194abcab96f456b",
          "67bbd396d194abcab970899d",
          "67b7946ceb63dd504bbcce75",
          "67bbd39bd194abcab9708abd",
          "67bbd3a298b45e7b9f1003b0",
          "67b7946ceb63dd504bbcce76",
          "67b7946ceb63dd504bbcce7c",
          "67b7946ceb63dd504bbcce7d",
          "67bbd3ada8e10021f835adc3"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67b7946ceb63dd504bbcce74",
        "createdAt": "2025-02-25T17:35:01.238Z",
        "updatedAt": "2025-02-25T17:35:01.238Z",
        "id": "67b7946ceb63dd504bbcce74"
      },
      {
        "name": "sketch.js",
        "content": "// Draw your pattern\nlet w;\nlet tempoSlider;\nlet totalBeats = 0;\nlet direction = 1;\nlet cval;\n\nvar cells = [\n  [0, 0, 0, 0, 0, 0, 0, 0], //cells[0] holds the hh pattern\n  [0, 0, 0, 0, 0, 0, 0, 0], //cells[1] holds the hho pattern\n  [0, 0, 0, 0, 0, 0, 0, 0], //cells[2] holds the snare pattern\n  [0, 0, 0, 0, 0, 0, 0, 0], //cells[3] holds the kick pattern\n  [0, 0, 0, 0, 0, 0, 0, 0], //cells[4] holds f2 pattern\n  [0, 0, 0, 0, 0, 0, 0, 0], //cells[5] holds c2 pattern\n  [0, 0, 0, 0, 0, 0, 0, 0], //cells[6] holds f1 pattern\n  [0, 0, 0, 0, 0, 0, 0, 0], //cells[7] holds c1 pattern\n];\n\n// SOUNDS\n\n// Create a Players object and load the \"kick.mp3\" and \"snare.mp3\" files\nconst kit = new Tone.Players({\n  kickA: \"kickA.mp3\",\n  kickB: \"kickB.mp3\",\n  wood: \"wood.mp3\",\n  hh: \"hh.mp3\",\n  c1: \"c#1.mp3\",\n  f1: \"F1.mp3\",\n  c2: \"c2.mp3\",\n  f2: \"f2.mp3\",\n});\n\n// Connect the player output to the computer's audio output\nkit.toDestination();\n\n// Audio playback loop\nfunction playBeat(time) {\n  // Make sure the sound files have been completely loaded\n  if (kit.loaded) {\n    let beat = Tone.Transport.position.split(\":\")[1];\n\n    if (cells[0][beat] == 1) {\n      kit.player(\"hh\").start(time);\n    }\n    if (cells[1][beat] == 1) {\n      kit.player(\"wood\").start(time);\n    }\n    if (cells[2][beat] == 1) {\n      kit.player(\"kickA\").start(time);\n    }\n    if (cells[3][beat] == 1) {\n      kit.player(\"kickB\").start(time);\n    }\n    if (cells[4][beat] == 1) {\n      kit.player(\"f2\").start(time);\n    }\n    if (cells[5][beat] == 1) {\n      kit.player(\"c2\").start(time);\n    }\n    if (cells[6][beat] == 1) {\n      kit.player(\"f1\").start(time);\n    }\n    if (cells[7][beat] == 1) {\n      kit.player(\"c1\").start(time);\n    }\n  }\n}\n\n// GRAPHICS\n// Create a loop: call playBeat every quarter note\nTone.Transport.bpm.value = 120;\nTone.Transport.timeSignature = [16, 8];\nTone.Transport.scheduleRepeat(playBeat, \"4n\");\n\nfunction setup() {\n  createCanvas(min(windowWidth, windowHeight), min(windowWidth, windowHeight));\n  let minDimension = min(width, height);\n  // rectMode(CENTER);\n  tempoSlider = createSlider(80, 1020, 120);\n  tempoSlider.size(minDimension / 2);\n\n  tempoSlider.position(\n    minDimension / 2 - minDimension / 6,\n    (9 * minDimension) / 10\n  );\n\n  tempoSlider.addClass(\"mySliders\");\n}\n\nfunction windowResized() {\n  resizeCanvas(min(windowWidth, windowHeight), min(windowWidth, windowHeight));\n  let minDimension = min(width, height);\n  tempoSlider.size(minDimension / 2);\n\n  tempoSlider.position(\n    minDimension / 2 - minDimension / 6,\n    (9 * minDimension) / 10\n  );\n  // tempoSlider.style(\"transform\", \"rotate(-90deg)\");\n  tempoSlider.addClass(\"mySliders\");\n}\n\nfunction draw() {\n  blendMode(BLEND);\n  background(0);\n  minDimension = min(width, height);\n  tempoSlider.changed(updateTempo);\n  let cval = map(tempoSlider.value(), 80, 1020, 0, 255);\n\n  textSize(minDimension / 20);\n  fill(255);\n  textAlign(CENTER, CENTER);\n  text(\n    round(tempoSlider.value() / 4) + \" bpm\",\n    minDimension / 5,\n    (9 * minDimension) / 10\n  );\n  blendMode(LIGHTEST);\n\n  w = minDimension / 8;\n\n  noStroke();\n  for (var step = 0; step < 8; step++) {\n    // we have 4 steps\n    for (var track = 0; track < 8; track++) {\n      //we have 4 tracks\n\n      if (cells[track][step] == 1) {\n        fill(cval, 0, 255 - cval);\n        circle(step * w + w / 2, track * w * 0.8 + w / 2, (2.5 * w) / 4);\n      } else if (step % 4 === 0) {\n        fill(cval, 0, 255 - cval);\n        circle(step * w + w / 2, track * w * 0.8 + w / 2, w / 2);\n      } else {\n        fill(cval, 150, 255 - cval);\n        circle(step * w + w / 2, track * w * 0.8 + w / 2, w / 2);\n      }\n    }\n  }\n\n  // Highlight current step\n  fill(255, 30);\n  let beat = Tone.Transport.position.split(\":\")[1];\n  rect(beat * w, 0, w, w * 8 * 0.8);\n\n  // console.log(Tone.Transport.bpm.value);\n}\nfunction mousePressed() {\n  let minDimension = min(width, height);\n  w = minDimension / 8;\n\n  // Ignore clicks on the slider\n  if (mouseY > tempoSlider.y && mouseY < tempoSlider.y + 20) {\n    return;\n  }\n\n  let i = floor(mouseX / w);\n  let j = floor(mouseY / (w * 0.8));\n\n  if (i >= 0 && i < 8 && j >= 0 && j < 8) {\n    cells[j][i] = !cells[j][i];\n  }\n}\n\n// Once all audio files have been loaded, start the Tone playhead\nTone.loaded().then(function () {\n  console.log(\"loaded\");\n  Tone.Transport.start();\n});\n\nfunction updateTempo() {\n  Tone.Transport.bpm.rampTo(tempoSlider.value());\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67b7946ceb63dd504bbcce7c",
        "createdAt": "2025-02-25T17:35:01.238Z",
        "updatedAt": "2025-02-25T17:35:01.238Z",
        "id": "67b7946ceb63dd504bbcce7c"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/tone/14.8.9/Tone.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b7946ceb63dd504bbcce75",
        "createdAt": "2025-02-25T17:35:01.238Z",
        "updatedAt": "2025-02-25T17:35:01.238Z",
        "id": "67b7946ceb63dd504bbcce75"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n\n\n/* Styles the whole slider */\n.mySliders{\n  width: 80px;\n  background-color: transparent;\n  \n  /* Removes some defaults */\n  -webkit-appearance: none;\n}\n\n\n/* These styles affect what happens when the cursor is focused on the slider (i.e. clicking it) */\n.mySliders:focus {\n  \n  /* Stops the default outline showing up */\n  outline: none;\n}\n\n/* This is the \"track\" that the slider sits on  */\n.mySliders::-webkit-slider-runnable-track {\n  background: #ffffff;\n  height: 5px;\n  -webkit-appearance: none;\n  \n  /* Turns the cursor into the hand pointer icon when hovering over the slider  */\n  cursor: pointer;\n  \n}\n\n/* This is the moveable bit of the slider, known as the \"thumb\"*/\n.mySliders::-webkit-slider-thumb {\n  width: 20px;\n  height: 20px;\n  background: #ffffff;\n  cursor: pointer;\n  -webkit-appearance: none;\n  \n  /* negative top padding moves it up */\n  margin-top: -7.5px;\n \n  /* Border radius gives rounded corners, if they're big enough, you end up with circles */\n  border-radius: 10px;\n  \n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b7946ceb63dd504bbcce7d",
        "createdAt": "2025-02-25T17:35:01.238Z",
        "updatedAt": "2025-02-25T17:35:01.238Z",
        "id": "67b7946ceb63dd504bbcce7d"
      },
      {
        "name": "samples",
        "content": "",
        "children": [
          "67b7946ceb63dd504bbcce77"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67b7946ceb63dd504bbcce76",
        "createdAt": "2025-02-25T17:35:01.238Z",
        "updatedAt": "2025-02-25T17:35:01.238Z",
        "id": "67b7946ceb63dd504bbcce76"
      },
      {
        "name": "505",
        "content": "",
        "children": [
          "67b7946ceb63dd504bbcce78",
          "67b7946ceb63dd504bbcce79",
          "67b7946ceb63dd504bbcce7a",
          "67b7946ceb63dd504bbcce7b"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67b7946ceb63dd504bbcce77",
        "createdAt": "2025-02-25T17:35:01.238Z",
        "updatedAt": "2025-02-25T17:35:01.238Z",
        "id": "67b7946ceb63dd504bbcce77"
      },
      {
        "name": "kick.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/208b38e7-0cd0-4b7c-b81d-fa11103d99e0.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b7946ceb63dd504bbcce7a",
        "createdAt": "2025-02-25T17:35:01.238Z",
        "updatedAt": "2025-02-25T17:35:01.238Z",
        "id": "67b7946ceb63dd504bbcce7a"
      },
      {
        "name": "hh.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/8e54e792-5377-45b3-a22e-ae997f1e9030.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b7946ceb63dd504bbcce78",
        "createdAt": "2025-02-25T17:35:01.238Z",
        "updatedAt": "2025-02-25T17:35:01.238Z",
        "id": "67b7946ceb63dd504bbcce78"
      },
      {
        "name": "snare.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/2d60401f-8501-42c5-8ab8-f716a38119c6.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b7946ceb63dd504bbcce7b",
        "createdAt": "2025-02-25T17:35:01.238Z",
        "updatedAt": "2025-02-25T17:35:01.238Z",
        "id": "67b7946ceb63dd504bbcce7b"
      },
      {
        "name": "hho.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/e3420e9d-66ae-44fb-addd-3a85de16d54f.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b7946ceb63dd504bbcce79",
        "createdAt": "2025-02-25T17:35:01.238Z",
        "updatedAt": "2025-02-25T17:35:01.238Z",
        "id": "67b7946ceb63dd504bbcce79"
      },
      {
        "name": "f2.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/e8b791a4-180b-4835-8878-ba4a69a77e46.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67bbcf03d194abcab96f456b",
        "createdAt": "2025-02-25T17:35:01.238Z",
        "updatedAt": "2025-02-25T17:35:01.238Z",
        "id": "67bbcf03d194abcab96f456b"
      },
      {
        "name": "F1.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/6907f219-8142-430b-af1f-bbd9b002a81f.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67bbcf0aa8e10021f83484c6",
        "createdAt": "2025-02-25T17:35:01.238Z",
        "updatedAt": "2025-02-25T17:35:01.238Z",
        "id": "67bbcf0aa8e10021f83484c6"
      },
      {
        "name": "c2.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/1a8f47fa-001a-4603-9c93-e21328877bab.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67bbcf0f557e602f33dff711",
        "createdAt": "2025-02-25T17:35:01.238Z",
        "updatedAt": "2025-02-25T17:35:01.238Z",
        "id": "67bbcf0f557e602f33dff711"
      },
      {
        "name": "c#1.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/98798795-b5c1-4224-b9d5-b61105e0405b.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67bbcf1798b45e7b9f0efe61",
        "createdAt": "2025-02-25T17:35:01.238Z",
        "updatedAt": "2025-02-25T17:35:01.238Z",
        "id": "67bbcf1798b45e7b9f0efe61"
      },
      {
        "name": "hh.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/cf9ca253-d9b0-444b-8d8e-cde3a5343f6e.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67bbd396d194abcab970899d",
        "createdAt": "2025-02-25T17:35:01.238Z",
        "updatedAt": "2025-02-25T17:35:01.238Z",
        "id": "67bbd396d194abcab970899d"
      },
      {
        "name": "kickA.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/2410c417-dd6b-4d73-b5a9-33af0a012a1c.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67bbd39bd194abcab9708abd",
        "createdAt": "2025-02-25T17:35:01.238Z",
        "updatedAt": "2025-02-25T17:35:01.238Z",
        "id": "67bbd39bd194abcab9708abd"
      },
      {
        "name": "kickB.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/283a7803-eb0c-4188-bfb3-558c4a581a3e.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67bbd3a298b45e7b9f1003b0",
        "createdAt": "2025-02-25T17:35:01.238Z",
        "updatedAt": "2025-02-25T17:35:01.238Z",
        "id": "67bbd3a298b45e7b9f1003b0"
      },
      {
        "name": "wood.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/b652b68f-3412-4d75-b4e5-781a2253c1c5.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67bbd3ada8e10021f835adc3",
        "createdAt": "2025-02-25T17:35:01.238Z",
        "updatedAt": "2025-02-25T17:35:01.238Z",
        "id": "67bbd3ada8e10021f835adc3"
      }
    ],
    "createdAt": "2025-02-20T20:45:33.184Z",
    "updatedAt": "2025-02-25T17:35:01.238Z",
    "id": "YIxktzOSy"
  },
  {
    "_id": "KlU9iXRev",
    "name": "Encode 1",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6797b872bd9ac8802d936d46",
          "6797b872bd9ac8802d936d47",
          "6797b872bd9ac8802d936d48"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6797b872bd9ac8802d936d45",
        "createdAt": "2025-02-01T18:38:25.407Z",
        "updatedAt": "2025-02-01T18:38:25.407Z",
        "id": "6797b872bd9ac8802d936d45"
      },
      {
        "name": "sketch.js",
        "content": "let angle = 0;\nlet cval = 0;\nlet direction = 1; // 1 for increasing, -1 for decreasing\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  angleMode(DEGREES);\n}\n\nfunction draw() {\n  blendMode(BLEND);\n  background(255 - cval, 0, cval);\n  blendMode(DIFFERENCE);\n\n  // define a universal variable so that the shapes\n  // are positioned in relation to one another\n  let x = width / 2;\n  let y = height / 2;\n\n  // set a variable that is proportional to\n  // the smaller dimension of the canvas\n  // so that the shapes will always fit in the canvas\n  // regardless of window size, and be proportional to one another\n  let minDimension = min(width, height);\n  let spacing = minDimension / 8;\n\n  // Update color over time\n  // Update cval smoothly between 0 and 255\n  cval += direction;\n  if (cval >= 255 || cval <= 0) {\n    direction *= -1; // Reverse direction when hitting limits\n  }\n\n  // rotate circle and triangle counterclockwise\n  push();\n  translate(x, y); // rotate about center of canvas\n\n  rotate(-angle);\n\n  fill(255);\n  // offset circle from center\n  circle(spacing, spacing, spacing * 4);\n  // offset triangle from center, with a point overlapping\n  // the center of the circle\n  fill(255);\n  triangle(-spacing, -spacing * 3, spacing, spacing, -spacing * 3, spacing);\n  angle += 0.2; // set speed of rotation\n  pop();\n\n  push();\n  fill(255);\n  translate(x, y); // rotate about center of canvas\n  rotate(angle);\n  rectMode(CENTER); // rotate square around its center point\n  square(0, 0, spacing * 4);\n  angle += 0.5; // set speed of rotation\n  pop();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6797b872bd9ac8802d936d47",
        "createdAt": "2025-02-01T18:38:25.407Z",
        "updatedAt": "2025-02-01T18:38:25.407Z",
        "id": "6797b872bd9ac8802d936d47"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6797b872bd9ac8802d936d46",
        "createdAt": "2025-02-01T18:38:25.407Z",
        "updatedAt": "2025-02-01T18:38:25.407Z",
        "id": "6797b872bd9ac8802d936d46"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6797b872bd9ac8802d936d48",
        "createdAt": "2025-02-01T18:38:25.407Z",
        "updatedAt": "2025-02-01T18:38:25.407Z",
        "id": "6797b872bd9ac8802d936d48"
      }
    ],
    "createdAt": "2025-01-27T16:46:42.674Z",
    "updatedAt": "2025-02-01T18:38:25.407Z",
    "id": "KlU9iXRev"
  },
  {
    "_id": "35ZIDviOf",
    "name": "Encode 2",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "679c075acaaba0b79a346f6a",
          "679c075acaaba0b79a346f6b",
          "679c075acaaba0b79a346f6c"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "679c075acaaba0b79a346f69",
        "createdAt": "2025-02-01T18:38:37.196Z",
        "updatedAt": "2025-02-01T18:38:37.196Z",
        "id": "679c075acaaba0b79a346f69"
      },
      {
        "name": "sketch.js",
        "content": "let angle = 0;\nlet cval = 0;\nlet direction = 1;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  noFill();\n  stroke(255);\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n}\n\nfunction draw() {\n  blendMode(BLEND);\n  cval += direction;\n  if (cval >= 255 || cval <= 0) {\n    direction *= -1; // Reverse direction when hitting limits\n  }\n  background(255 - cval, 0, cval, 20);\n  blendMode(DIFFERENCE);\n  // sets dimension to be proportionl to smaller of width or height\n  let minDimension = min(width, height);\n  stroke(cval);\n  // stroke proportional to canvas dimensions\n  strokeWeight(minDimension * 0.015);\n\n  let xStart = width * 0.25;\n  let xEnd = width * 0.75;\n  // using sin of an angle gives a dynamic speed that makes the circle ease into its limits\n  let x = map(sin(angle), -1, 1, xStart, xEnd);\n\n  let y = map(tan(angle), -1, 1, xStart, xEnd);\n  // diameter proportional to canvas dimensions\n  let diam = minDimension * 0.3;\n\n  circle(x, y, diam);\n  circle(y, x, diam);\n\n  angle += 0.05;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "679c075acaaba0b79a346f6b",
        "createdAt": "2025-02-01T18:38:37.196Z",
        "updatedAt": "2025-02-01T18:38:37.196Z",
        "id": "679c075acaaba0b79a346f6b"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679c075acaaba0b79a346f6a",
        "createdAt": "2025-02-01T18:38:37.196Z",
        "updatedAt": "2025-02-01T18:38:37.196Z",
        "id": "679c075acaaba0b79a346f6a"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679c075acaaba0b79a346f6c",
        "createdAt": "2025-02-01T18:38:37.196Z",
        "updatedAt": "2025-02-01T18:38:37.196Z",
        "id": "679c075acaaba0b79a346f6c"
      }
    ],
    "createdAt": "2025-01-30T23:12:26.449Z",
    "updatedAt": "2025-02-01T18:38:37.196Z",
    "id": "35ZIDviOf"
  },
  {
    "_id": "76VEVYY1W",
    "name": "Encode 3",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "679c2965217741bdeebba888",
          "679c2965217741bdeebba889",
          "679c2965217741bdeebba88a"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "679c2965217741bdeebba887",
        "createdAt": "2025-02-18T18:05:48.551Z",
        "updatedAt": "2025-02-18T18:05:48.551Z",
        "id": "679c2965217741bdeebba887"
      },
      {
        "name": "sketch.js",
        "content": "let angle = 0;\nlet cval = 0;\nlet direction = 1; \nlet xpos = 100,\n  ypos = 100;\nlet xSpeed = 3, ySpeed = 2;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  noFill();\n  stroke(255);\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n}\n\nfunction draw() {\n  blendMode(BLEND);\n  background(cval, 0, 255 - cval, 20);\n  blendMode(EXCLUSION);\n\n  // Update color over time\n  // Update cval smoothly between 0 and 255\n  cval += direction;\n  if (cval >= 255 || cval <= 0) {\n    direction *= -1; // Reverse direction when hitting limits\n  }\n\n  let minDimension = min(width, height);\n\n  let amount1 = sin(angle) / 2 + 0.6;\n  let amount2 = cos(angle) / 2 + 0.6;\n  let speed = 1;\n\n  let thickness = (minDimension / 20) * amount1;\n  strokeWeight(thickness);\n\n  // change diameter based on amount as well\n  let diam1 = (minDimension / 2) * amount1;\n  let diam2 = (minDimension / 2) * amount2;\n  stroke(255);\n\n  // Bounce off walls\n  if (xpos >= width || xpos <= 0) {\n    xSpeed *= -1; // Reverse X direction\n  }\n  if (ypos >= height || ypos <= 0) {\n    ySpeed *= -1; // Reverse Y direction\n  }\n\n  \n  circle(xpos, ypos, diam1);\n  circle(xpos, ypos, diam2);\n\n  angle += 0.03;\n  xpos += xSpeed;\n  ypos += ySpeed;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "679c2965217741bdeebba889",
        "createdAt": "2025-02-18T18:05:48.551Z",
        "updatedAt": "2025-02-18T18:05:48.551Z",
        "id": "679c2965217741bdeebba889"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679c2965217741bdeebba888",
        "createdAt": "2025-02-18T18:05:48.551Z",
        "updatedAt": "2025-02-18T18:05:48.551Z",
        "id": "679c2965217741bdeebba888"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679c2965217741bdeebba88a",
        "createdAt": "2025-02-18T18:05:48.551Z",
        "updatedAt": "2025-02-18T18:05:48.551Z",
        "id": "679c2965217741bdeebba88a"
      }
    ],
    "createdAt": "2025-01-31T01:37:41.616Z",
    "updatedAt": "2025-02-18T18:05:48.551Z",
    "id": "76VEVYY1W"
  },
  {
    "_id": "s-rVtYYMw",
    "name": "Encode 4",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "679c19fcefced599984cd3f0",
          "679c19fcefced599984cd3f1",
          "679c19fcefced599984cd3f2"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "679c19fcefced599984cd3ef",
        "createdAt": "2025-02-01T18:39:03.457Z",
        "updatedAt": "2025-02-01T18:39:03.457Z",
        "id": "679c19fcefced599984cd3ef"
      },
      {
        "name": "sketch.js",
        "content": "let angle = 0;\nlet cval = 0;\nlet direction = 1; \n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  noFill();\n  stroke(255);\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n  background(0);\n  rectMode(CENTER)\n}\n\nfunction draw() {\n  blendMode(BLEND);\n  background(cval, 0, 255 - cval, 20);\n  blendMode(DIFFERENCE);\n  \n  // Update color over time\n  // Update cval smoothly between 0 and 255\n  cval += direction;\n  if (cval >= 255 || cval <= 0) {\n    direction *= -1; // Reverse direction when hitting limits\n  }\n\n\n  // the origin to the center of the canvas, this is now (0,0)\n  translate(width / 2, height / 2);\n  \n  // create a minimum dimension proportional to canvas\n  let minDimension = min(width, height);\n\n  strokeWeight(minDimension * 0.015);\n\n  let radius = minDimension * 0.25;\n  // xpos & ypos is changing from -1 to 1\n  // and multiplying by the radius inserts space between the circle \n  // and the origin\n  let x = sin(angle) * radius; \n  let y = cos(angle) * radius;\n  fill(0,cval,0)\n  stroke(255-cval)\n  circle(-y, -x, radius * 0.75);\n  circle(y, x, radius * 0.75);\n  fill(0,255-cval,0)\n  stroke(cval)\n  circle(-x, -y, radius * 0.75);\n  circle(x, y, radius * 0.75);\n  \n\n  angle += 0.02;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "679c19fcefced599984cd3f1",
        "createdAt": "2025-02-01T18:39:03.457Z",
        "updatedAt": "2025-02-01T18:39:03.457Z",
        "id": "679c19fcefced599984cd3f1"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679c19fcefced599984cd3f0",
        "createdAt": "2025-02-01T18:39:03.457Z",
        "updatedAt": "2025-02-01T18:39:03.457Z",
        "id": "679c19fcefced599984cd3f0"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679c19fcefced599984cd3f2",
        "createdAt": "2025-02-01T18:39:03.457Z",
        "updatedAt": "2025-02-01T18:39:03.457Z",
        "id": "679c19fcefced599984cd3f2"
      }
    ],
    "createdAt": "2025-01-31T00:31:56.194Z",
    "updatedAt": "2025-02-01T18:39:03.457Z",
    "id": "s-rVtYYMw"
  },
  {
    "_id": "rujaU7wV5",
    "name": "Encode 5",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "679c22720bfb80600c33dabd",
          "679c22720bfb80600c33dabe",
          "679c22720bfb80600c33dabf"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "679c22720bfb80600c33dabc",
        "createdAt": "2025-02-01T18:39:20.820Z",
        "updatedAt": "2025-02-01T18:39:20.820Z",
        "id": "679c22720bfb80600c33dabc"
      },
      {
        "name": "sketch.js",
        "content": "let totalPositions = 9;\nlet positionStep = 0;\nlet cval = 0;\nlet direction = 1;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  angleMode(DEGREES);\n}\n\nfunction draw() {\n  blendMode(BLEND);\n  background(0, 5);\n  blendMode(DIFFERENCE);\n\n  // Update color over time\n  // Update cval smoothly between 0 and 255\n  cval += direction;\n  if (cval >= 255 || cval <= 0) {\n    direction *= -1; // Reverse direction when hitting limits\n  }\n\n  // move origin to center of canvas\n  translate(width / 2, height / 2);\n\n  // rotate the circle about (0,0) to positions\n  // spaced equally around the origin\n  let angle = (360 / totalPositions) * positionStep;\n\n  rotate(angle);\n\n  let minDimension = min(width, height);\n  let diam = minDimension * 0.05;\n  fill(255 - cval, 0, cval);\n  stroke(cval, 0, 255 - cval);\n  strokeWeight(minDimension * 0.005);\n  circle(50, 0, diam);\n\n  // only change the position when the framecount is divisible by 30\n  // so it moves slower\n  if (frameCount % 10 === 0) {\n    positionStep++;\n    if (positionStep >= totalPositions) {\n      positionStep = 0;\n    }\n  }\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n  background(0);\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "679c22720bfb80600c33dabe",
        "createdAt": "2025-02-01T18:39:20.820Z",
        "updatedAt": "2025-02-01T18:39:20.820Z",
        "id": "679c22720bfb80600c33dabe"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679c22720bfb80600c33dabd",
        "createdAt": "2025-02-01T18:39:20.820Z",
        "updatedAt": "2025-02-01T18:39:20.820Z",
        "id": "679c22720bfb80600c33dabd"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679c22720bfb80600c33dabf",
        "createdAt": "2025-02-01T18:39:20.820Z",
        "updatedAt": "2025-02-01T18:39:20.820Z",
        "id": "679c22720bfb80600c33dabf"
      }
    ],
    "createdAt": "2025-01-31T01:08:02.131Z",
    "updatedAt": "2025-02-01T18:39:20.820Z",
    "id": "rujaU7wV5"
  },
  {
    "_id": "azlC-n3WR",
    "name": "EnvironmentRecorder",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67cf058db77d7d9802cd1d6b",
          "67cefb4261ba02d53b7d7101",
          "67cefb4261ba02d53b7d7102",
          "67cefb4261ba02d53b7d7103"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67cefb4261ba02d53b7d7100",
        "createdAt": "2025-03-10T18:46:08.504Z",
        "updatedAt": "2025-03-10T18:46:08.504Z",
        "id": "67cefb4261ba02d53b7d7100"
      },
      {
        "name": "sketch.js",
        "content": "let recorder;\nlet player;\nlet isRecording = false;\nlet lastRecording = null;\nlet recordingWithEffects = null;\nlet isTestingEffects = true;\n\n// Effect parameters\nlet delayAmount = 0.3; // 0-1 scale\nlet reverbAmount = 0.5; // 0.001-10 scale (decay time)\n\n// Draggable control\nlet angle = 0;\nlet xpos, ypos;\nlet isDragging = false;\n\n// UI elements\nlet recordButton, effectsTestButton, processButton, exportButton, clearButton;\n\n// Audio components\nconst cleanRecordingDest = new Tone.Gain();\nconst feedbackDelay = new Tone.FeedbackDelay(delayAmount, 0.5);\nconst reverb = new Tone.Reverb({\n  decay: reverbAmount,\n  preDelay: 0.05,\n  wet: 0.5,\n});\nconst masterGain = new Tone.Gain(0.7).toDestination();\nconst analyzer = new Tone.Waveform(1024);\n\n// Connect effects chain\nfeedbackDelay.connect(reverb);\nreverb.connect(masterGain);\nreverb.connect(analyzer);\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  background(0);\n  rectMode(CENTER);\n  // Set initial position to center\n  xpos = width / 2;\n  ypos = height / 2;\n\n  // Initialize Tone.js\n  Tone.start();\n\n  // Create recorder\n  recorder = new Tone.Recorder();\n  cleanRecordingDest.connect(recorder);\n\n  // Create UI elements\n\n  makeButtons();\n  repositionButtons();\n\n  // Set up the microphone\n  setupMicrophone();\n}\n\nfunction setupMicrophone() {\n  const mic = new Tone.UserMedia();\n  mic\n    .open()\n    .then(() => {\n      console.log(\"Microphone ready\");\n      // Connect mic to clean recording destination\n      mic.connect(cleanRecordingDest);\n      // Connect mic to effects for monitoring\n      mic.connect(feedbackDelay);\n    })\n    .catch((e) => {\n      console.error(\"Error accessing microphone:\", e);\n      alert(\"Please allow microphone access to use this application.\");\n    });\n}\n\nfunction repositionButtons() {\n  let minDimension = min(width, height);\n  let spacing = minDimension / 10;\n  let buttonSpacing = width / 6;\n  let buttonY = spacing;\n\n  recordButton.position(buttonSpacing - recordButton.width / 2, buttonY);\n  effectsTestButton.position(\n    2 * buttonSpacing - effectsTestButton.width / 2,\n    buttonY\n  );\n  processButton.position(3 * buttonSpacing - processButton.width / 2, buttonY);\n  exportButton.position(4 * buttonSpacing - exportButton.width / 2, buttonY);\n  clearButton.position(5 * buttonSpacing - clearButton.width / 2, buttonY);\n}\n\nfunction makeButtons() {\n  // Create buttons\n  recordButton = createButton(\"Record\");\n  recordButton.mousePressed(toggleRecording);\n\n  effectsTestButton = createButton(\"Testing\");\n  effectsTestButton.mousePressed(toggleTestMode);\n  effectsTestButton.attribute(\"disabled\", \"\");\n\n  processButton = createButton(\"Process\");\n  processButton.mousePressed(processRecordingWithEffects);\n  processButton.attribute(\"disabled\", \"\");\n\n  exportButton = createButton(\"Export\");\n  exportButton.mousePressed(exportRecording);\n  exportButton.attribute(\"disabled\", \"\");\n\n  clearButton = createButton(\"Clear\");\n  clearButton.mousePressed(clearRecording);\n}\n\nfunction draw() {\n  background(0, 50); // Slight fade for trail effect\n\n  // Calculate bounds for draggable area\n  let rectX = width / 2;\n  let rectY = height / 2;\n  let rectW = width / 1.5;\n  let rectH = height / 1.5;\n\n  // Draw movement bounds\n  noFill();\n  stroke(0, 0, 255);\n  rect(rectX, rectY, rectW, rectH);\n\n  // Constrain movement within the rectangle (only when dragging)\n  if (isDragging) {\n    xpos = constrain(mouseX, rectX - rectW / 2, rectX + rectW / 2);\n    ypos = constrain(mouseY, rectY - rectH / 2, rectY + rectH / 2);\n  }\n\n  // Update button appearance based on recording state\n  if (isRecording) {\n    recordButton.style(\"background-color\", \"red\");\n    recordButton.html(\"Stop\");\n  } else {\n    recordButton.style(\"background-color\", \"darkblue\");\n    recordButton.html(\"Record\");\n  }\n\n  // Map position to effect parameters\n  delayAmount = constrain(\n    map(xpos, rectX - rectW / 2, rectX + rectW / 2, 0, 1),\n    0,\n    1\n  );\n  reverbAmount = constrain(\n    map(ypos, rectY - rectH / 2, rectY + rectH / 2, 10, 0.001),\n    0.001,\n    10\n  );\n\n  // Update effects\n  feedbackDelay.delayTime.value = delayAmount;\n  reverb.decay = reverbAmount;\n\n  // Display current effect values\n  fill(255);\n  noStroke();\n  textAlign(LEFT);\n  textSize(16);\n  text(`Delay: ${delayAmount.toFixed(2)}`, 20, height - 60);\n  text(`Reverb: ${reverbAmount.toFixed(2)}`, 20, height - 30);\n\n  // Show mode status\n  textAlign(CENTER);\n  if (isTestingEffects && lastRecording) {\n    fill(0, 255, 0);\n    text(\n      \"Test Mode: Drag to adjust effects in real-time\",\n      width / 2,\n      height - 30\n    );\n  } else if (recordingWithEffects) {\n    fill(255, 165, 0);\n    text(\n      \"Final Mode: Effects processed and ready to export\",\n      width / 2,\n      height - 30\n    );\n  }\n\n  // Draw the draggable control point\n  let controlPointSize = min(width, height) / 30;\n\n  // Create colors based on effect values\n  let rev = color(\n    map(delayAmount, 0, 1, 150, 0),\n    0,\n    map(reverbAmount, 0.001, 10, 150, 255)\n  );\n  let del = color(\n    0,\n    map(reverbAmount, 0.001, 10, 255, 150),\n    map(delayAmount, 0, 1, 150, 255)\n  );\n\n  // Check if mouse is over the control point for hover effect\n  let distToControl = dist(mouseX, mouseY, xpos, ypos);\n  let isHovering = distToControl < controlPointSize;\n\n  // Draw drag handle with hover effect\n  stroke(rev);\n  strokeWeight(2);\n  if (isHovering || isDragging) {\n    fill(255);\n    cursor(HAND);\n  } else {\n    fill(lerpColor(rev, del, 0.9));\n    cursor(ARROW);\n  }\n  ellipse(xpos, ypos, controlPointSize, controlPointSize);\n\n  push(); // Save the current transformation\n  translate(xpos, ypos);\n  rotate(angle);\n\n  // Draw visualizer\n  drawWaveform(1, rev);\n  drawWaveform(1.5, del);\n  drawWaveform(2.5, lerpColor(rev, del, 0.5));\n\n  pop(); // Restore the transformation\n\n  angle += 0.01;\n\n  // Display recording status\n  if (isRecording) {\n    fill(255, 0, 0);\n    ellipse(width - 30, (10 * height) / 11, 20, 20);\n    fill(255);\n    text(\"Recording...\", width - 120, (10.1 * height) / 11);\n  }\n}\n\nfunction drawWaveform(val, c) {\n  let waveform = analyzer.getValue();\n  beginShape();\n  let minDimension = min(width, height);\n  let spacing = minDimension / 10;\n\n  let points = floor(waveform.length / 50);\n  for (let i = 0; i < waveform.length; i += points) {\n    let phi = radians(map(i, 0, waveform.length, 0, 360));\n    let radius = map(waveform[i], -1, 1, 0, 3 * spacing);\n    let x = (radius / val) * cos(phi);\n    let y = (radius / val) * sin(phi);\n    noStroke();\n    fill(c);\n    ellipse(\n      x * 1.5,\n      y * 1.5,\n      minDimension / (100 * val),\n      minDimension / (100 * val)\n    );\n  }\n  endShape();\n}\n\nfunction mousePressed() {\n  // Check if the mouse is over the control point\n  let controlPointSize = min(width, height) / 30;\n  let distToControl = dist(mouseX, mouseY, xpos, ypos);\n\n  if (distToControl < controlPointSize) {\n    isDragging = true;\n  }\n}\n\nfunction mouseReleased() {\n  isDragging = false;\n}\n\nfunction updateTestModeButton() {\n  if (isTestingEffects) {\n    // loopButton.html(\"Testing Effects: ON\");\n    loopButton.style(\"background\", \"green\");\n  } else {\n    // loopButton.html(\"Testing Effects: OFF\");\n    loopButton.style(\"background\", \"orange\");\n  }\n}\n\nfunction toggleRecording() {\n  if (!isRecording) {\n    // Start recording\n    recorder.start();\n    isRecording = true;\n    console.log(\"Recording started\");\n\n    // Reset the processed recording\n    recordingWithEffects = null;\n    if (player) {\n      player.stop();\n    }\n\n    // Disable buttons during recording\n    effectsTestButton.attribute(\"disabled\", \"\");\n    processButton.attribute(\"disabled\", \"\");\n    exportButton.attribute(\"disabled\", \"\");\n  } else {\n    // Stop recording\n    isRecording = false;\n    console.log(\"Recording stopped\");\n\n    // Process the recording\n    (async () => {\n      try {\n        // Get the clean recording\n        const recording = await recorder.stop();\n        console.log(\"Recording captured:\", recording.size, \"bytes\");\n\n        // Store the recording\n        lastRecording = recording;\n\n        // Create a URL for the recording\n        const url = URL.createObjectURL(recording);\n\n        // Stop any existing player\n        if (player) {\n          player.stop();\n          player.dispose();\n        }\n\n        // Create a new player with the recording\n        player = new Tone.Player({\n          url: url,\n          loop: true,\n          autostart: true,\n        });\n\n        // Connect player to effects chain for real-time adjustment\n        player.connect(feedbackDelay);\n\n        // Enable buttons\n        effectsTestButton.removeAttribute(\"disabled\");\n        processButton.removeAttribute(\"disabled\");\n\n        // Set to testing mode by default\n        isTestingEffects = true;\n        updateTestModeButton();\n\n        console.log(\"Player created and started in test mode\");\n      } catch (err) {\n        console.error(\"Error processing recording:\", err);\n        alert(\"Error processing recording: \" + err.message);\n      }\n    })();\n  }\n}\n\nfunction toggleTestMode() {\n  if (!lastRecording) return;\n\n  isTestingEffects = !isTestingEffects;\n  updateTestModeButton();\n\n  if (player) {\n    player.stop();\n    player.dispose();\n\n    // Use the appropriate recording based on mode\n    const recordingToUse = isTestingEffects\n      ? lastRecording\n      : recordingWithEffects;\n    const url = URL.createObjectURL(recordingToUse);\n\n    // Create a new player\n    player = new Tone.Player({\n      url: url,\n      loop: true,\n      autostart: true,\n    });\n\n    // Connect appropriately based on mode\n    if (isTestingEffects) {\n      // In test mode, connect to the effects chain\n      player.connect(feedbackDelay);\n    } else {\n      // In final mode, connect directly to destination (effects already applied)\n      player.toDestination();\n    }\n  }\n}\n\nfunction updateTestModeButton() {\n  if (isTestingEffects) {\n    effectsTestButton.style(\"background-color\", \"#2ecc71\");\n    effectsTestButton.html(\"Testing\");\n  } else {\n    effectsTestButton.style(\"background-color\", \"#f39c12\");\n    effectsTestButton.html(\"Final Result\");\n  }\n}\n\nasync function processRecordingWithEffects() {\n  if (!lastRecording) return;\n\n  // Disable buttons during processing\n  processButton.attribute(\"disabled\", \"\");\n  processButton.html(\"Processing...\");\n\n  // Create a temporary recorder and effects chain with current settings\n  const tempRecorder = new Tone.Recorder();\n  const tempDelay = new Tone.FeedbackDelay(delayAmount, 0.5);\n  const tempReverb = new Tone.Reverb({\n    decay: reverbAmount,\n    preDelay: 0.05,\n    wet: 0.5,\n  });\n\n  // Connect effects chain to recorder\n  tempDelay.connect(tempReverb);\n  tempReverb.connect(tempRecorder);\n\n  // Create temporary player\n  const tempUrl = URL.createObjectURL(lastRecording);\n  const tempPlayer = new Tone.Player({\n    url: tempUrl,\n    loop: false,\n    autostart: false,\n    onload: async () => {\n      // Start recording\n      tempRecorder.start();\n\n      // Play the audio through the effects\n      await Tone.loaded();\n      tempPlayer.start();\n\n      // Wait for the audio to finish playing\n      await new Promise((resolve) => {\n        tempPlayer.onstop = resolve;\n      });\n\n      // Stop recording and get the processed audio\n      const processedRecording = await tempRecorder.stop();\n      recordingWithEffects = processedRecording;\n      console.log(\"Recording processed with effects\");\n\n      // Switch to processed mode\n      isTestingEffects = false;\n      updateTestModeButton();\n\n      // Update playback to use processed recording\n      if (player) {\n        player.stop();\n        player.dispose();\n\n        const processedUrl = URL.createObjectURL(recordingWithEffects);\n        player = new Tone.Player({\n          url: processedUrl,\n          loop: true,\n          autostart: true,\n        }).toDestination();\n      }\n\n      // Clean up\n      tempPlayer.dispose();\n      tempDelay.dispose();\n      tempReverb.dispose();\n      tempRecorder.dispose();\n      URL.revokeObjectURL(tempUrl);\n\n      // Update buttons\n      processButton.removeAttribute(\"disabled\");\n      processButton.html(\"Process Effects\");\n      exportButton.removeAttribute(\"disabled\");\n    },\n  });\n\n  // Connect temporary player to effects\n  tempPlayer.connect(tempDelay);\n}\n\nfunction exportRecording() {\n  if (!recordingWithEffects) {\n    console.log(\"No processed recording available to export\");\n    alert(\"Please process your recording with effects before exporting!\");\n    return;\n  }\n\n  // Create download link\n  const url = URL.createObjectURL(recordingWithEffects);\n  const anchor = document.createElement(\"a\");\n  anchor.download = \"recording_with_effects.webm\";\n  anchor.href = url;\n  anchor.click();\n\n  // Clean up\n  setTimeout(() => {\n    URL.revokeObjectURL(url);\n    console.log(\"Recording with effects exported\");\n  }, 100);\n}\n\nfunction clearRecording() {\n  if (player) {\n    player.stop();\n    player.dispose();\n    player = null;\n  }\n\n  lastRecording = null;\n  recordingWithEffects = null;\n  console.log(\"Recording cleared\");\n\n  // Reset button states\n  effectsTestButton.attribute(\"disabled\", \"\");\n  processButton.attribute(\"disabled\", \"\");\n  exportButton.attribute(\"disabled\", \"\");\n  isTestingEffects = true;\n  updateTestModeButton();\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n  background(0);\n  xpos = width / 2;\n  ypos = height / 2;\n  repositionButtons();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67cefb4261ba02d53b7d7102",
        "createdAt": "2025-03-10T18:46:08.504Z",
        "updatedAt": "2025-03-10T18:46:08.504Z",
        "id": "67cefb4261ba02d53b7d7102"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://unpkg.com/tone@15.0.4/build/Tone.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67cefb4261ba02d53b7d7101",
        "createdAt": "2025-03-10T18:46:08.504Z",
        "updatedAt": "2025-03-10T18:46:08.504Z",
        "id": "67cefb4261ba02d53b7d7101"
      },
      {
        "name": "style.css",
        "content": "@font-face {\n  font-family: Roboto;\n  src: url(\"/IBM.ttf\")\n  format(\"opentype\");\n}\n\nhtml, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n\nbutton {\n  font-family: Roboto;\n  font-size: 0.7rem;\n  border: none;\n  border-radius: 5px;\n  padding: 5px;\n  color: white;\n  background:  darkblue;\n}\n\nbutton:hover {\n  padding: 6px;\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67cefb4261ba02d53b7d7103",
        "createdAt": "2025-03-10T18:46:08.504Z",
        "updatedAt": "2025-03-10T18:46:08.504Z",
        "id": "67cefb4261ba02d53b7d7103"
      },
      {
        "name": "IBM.ttf",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/90e65ff7-178e-46d8-9a70-95a1e7c2e3d5.ttf",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67cf058db77d7d9802cd1d6b",
        "createdAt": "2025-03-10T18:46:08.504Z",
        "updatedAt": "2025-03-10T18:46:08.504Z",
        "id": "67cf058db77d7d9802cd1d6b"
      }
    ],
    "createdAt": "2025-03-10T14:46:26.596Z",
    "updatedAt": "2025-03-10T18:46:08.504Z",
    "id": "azlC-n3WR"
  },
  {
    "_id": "b1-U6EtXW",
    "name": "expressional-operator(?)",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66fecd90ad593a10bb87a773",
          "66fecd90ad593a10bb87a774",
          "66fecd90ad593a10bb87a775"
        ],
        "fileType": "folder",
        "_id": "66fecd90ad593a10bb87a772",
        "createdAt": "2024-10-03T17:00:25.819Z",
        "updatedAt": "2024-10-03T17:00:25.819Z",
        "id": "66fecd90ad593a10bb87a772"
      },
      {
        "name": "sketch.js",
        "content": "let myYellow = \"#FFEF66\";\nlet myGrey = \"#808080\";\nlet myBlack = \"#323232\";\nlet cubetopHeight = 20;\nlet cubeWidth = 60;\nlet cubeHeight = 40;\nlet xOffset = 0;\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n  noStroke();\n  \n  for (let x = 0; x < width + cubeWidth; x += cubeWidth) {\n    for (let y = 0; y < height + cubeWidth; y += cubeHeight + cubetopHeight / 2) {\n      // Even rows are offset to the left\n      xOffset = (y / (cubeHeight + cubetopHeight / 2)) % 2 === 0 ? -cubeWidth / 2 : 0;\n\n      // Check if the mouse is over the cube\n      let isMouseOver = mouseX > x + xOffset && mouseX < x + xOffset + cubeWidth &&\n                        mouseY < y + cubetopHeight + cubeHeight &&\n                        mouseY > y + cubetopHeight / 2;\n\n      // Set the color based on mouse position\n      if (isMouseOver) {\n        fill(255, 0, 0); // Change all to red\n      } else {\n        fill(myGrey); // Default to grey for the top parallelogram\n      }\n\n      // The top parallelogram\n      quad(x + xOffset, cubetopHeight / 2 + y, \n           cubeWidth / 2 + x + xOffset, y, \n           cubeWidth + x + xOffset, cubetopHeight / 2 + y, \n           cubeWidth / 2 + x + xOffset, cubetopHeight + y);\n\n      // The left parallelogram\n      fill(isMouseOver ? color(255, 0, 0) : myYellow); // Change left parallelogram to red if hovered\n      quad(x + xOffset, cubetopHeight / 2 + y, \n           cubeWidth / 2 + x + xOffset, cubetopHeight + y, \n           cubeWidth / 2 + x + xOffset, cubetopHeight + cubeHeight + y, \n           x + xOffset, cubetopHeight / 2 + cubeHeight + y);\n\n      // The right parallelogram\n      fill(isMouseOver ? color(255, 0, 0) : myBlack); // Change right parallelogram to red if hovered\n      quad(cubeWidth / 2 + x + xOffset, cubetopHeight + y, \n           cubeWidth + x + xOffset, cubetopHeight / 2 + y, \n           cubeWidth + x + xOffset, cubetopHeight / 2 + cubeHeight + y, \n           cubeWidth / 2 + x + xOffset, cubetopHeight + cubeHeight + y);\n    }\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66fecd90ad593a10bb87a774",
        "createdAt": "2024-10-03T17:00:25.819Z",
        "updatedAt": "2024-10-03T17:00:25.819Z",
        "id": "66fecd90ad593a10bb87a774"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "66fecd90ad593a10bb87a773",
        "createdAt": "2024-10-03T17:00:25.819Z",
        "updatedAt": "2024-10-03T17:00:25.819Z",
        "id": "66fecd90ad593a10bb87a773"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "66fecd90ad593a10bb87a775",
        "createdAt": "2024-10-03T17:00:25.819Z",
        "updatedAt": "2024-10-03T17:00:25.819Z",
        "id": "66fecd90ad593a10bb87a775"
      }
    ],
    "createdAt": "2024-10-03T17:00:00.556Z",
    "updatedAt": "2024-10-03T17:00:25.819Z",
    "id": "b1-U6EtXW"
  },
  {
    "_id": "ekSVBHlnT",
    "name": "Film Grain Effect copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6740d340c753360e1f0c16e9",
          "6740d340c753360e1f0c16ea",
          "6740d340c753360e1f0c16eb",
          "6740d340c753360e1f0c16ec"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6740d340c753360e1f0c16e8",
        "createdAt": "2024-11-22T18:53:56.185Z",
        "updatedAt": "2024-11-22T18:53:56.185Z",
        "id": "6740d340c753360e1f0c16e8"
      },
      {
        "name": "sketch.js",
        "content": "/** inspired by\n * Coding Train - Daniel Shiffman\n *\n * 11.3: The Pixel Array - p5.js Tutorial\n * https://www.youtube.com/watch?v=nMUMZ5YRxHI\n *\n *\n * And\n *\n *\n * Szenia Zadvornykh\n *\n * Canvas film grain\n * https://codepen.io/zadvorsky/pen/PwyoMm\n *\n *\n */\n\nlet grain;\n\nfunction setup() {\n  let w = windowWidth;\n  let h = windowHeight;\n  createCanvas(w, h);\n\n  createFilmGrain(0, 0, windowWidth, windowHeight, 500, 3, 0.1);\n}\n\nfunction draw() {\n  background(220);\n  fill(100,100,255)\n  rect(200,200,200,200)\n  updateGrain();\n  displayGrain();\n  \n}\n\nfunction updateGrain() {\n  grain.update();\n}\n\nfunction displayGrain() {\n  grain.display();\n}\n\nfunction createFilmGrain(x, y, w, h, patternSize, sampleSize, patternAlpha) {\n  grain = new FilmGrainEffect(x, y, w, h, patternSize, sampleSize, patternAlpha);\n}\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6740d340c753360e1f0c16eb",
        "createdAt": "2024-11-22T18:53:56.185Z",
        "updatedAt": "2024-11-22T18:53:56.185Z",
        "id": "6740d340c753360e1f0c16eb"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"FilmGrainEffect.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6740d340c753360e1f0c16ea",
        "createdAt": "2024-11-22T18:53:56.185Z",
        "updatedAt": "2024-11-22T18:53:56.185Z",
        "id": "6740d340c753360e1f0c16ea"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6740d340c753360e1f0c16ec",
        "createdAt": "2024-11-22T18:53:56.185Z",
        "updatedAt": "2024-11-22T18:53:56.185Z",
        "id": "6740d340c753360e1f0c16ec"
      },
      {
        "name": "FilmGrainEffect.js",
        "content": "class Effects {\n  static counter = 0;\n}\n\nclass FilmGrainEffect {\n  static counter = 0;\n  static index = 0;\n\n  constructor(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.id = \"FilmGrain_\" + Effects.counter++;\n    this.reset(x, y, w, h, patternSize, sampleSize, patternAlpha);\n  }\n\n  reset(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.samples = [];\n    this.currentSampleSet = [];\n    this.patternRefreshInterval = 4;\n    FilmGrainEffect.counter = 0;\n    FilmGrainEffect.index = 0;\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.p = patternSize;\n    this.s = sampleSize;\n    this.a = map(patternAlpha, 0, 1, 0, 255);\n    for (let i = 0; i < sampleSize; i++) {\n      this.samples.push(\n        this.pattern(this.x, this.y, this.w, this.h, this.p, this.a)\n      );\n    }\n  }\n\n  add(effect) {}\n\n  pattern(x, y, w, h, patternSize, patternAlpha) {\n    // luodaan uusi p5 canvas || create new p5 canvas\n    let pg = createGraphics(patternSize, patternSize);\n    pg.pixelDensity(1);\n\n    // luodaan kohina | create noise\n    pg.loadPixels();\n    for (var _y = 0; _y < patternSize; _y += 1) {\n      for (var _x = 0; _x < patternSize; _x += 1) {\n        let i = (_x + _y * patternSize) * 4;\n        let value = (Math.random() * 255) | 0;\n        pg.pixels[i] = value;\n        pg.pixels[i + 1] = value;\n        pg.pixels[i + 2] = value;\n        pg.pixels[i + 3] = patternAlpha;\n      }\n    }\n    pg.updatePixels();\n\n    // lasketaan kohinapalojen paikat ja tallennetaan ne | calculate position of noise pieces and save them\n    let xlen = w / patternSize;\n    let ylen = h / patternSize;\n\n    let samples = [];\n    for (let i = 0; i < ylen; i++) {\n      for (let j = 0; j < xlen; j++) {\n        let _x = x + patternSize * j;\n        let _y = y + patternSize * i;\n        samples.push({\n          canvas: pg,\n          x: _x,\n          y: _y,\n          w: patternSize,\n          h: patternSize,\n        });\n      }\n    }\n    \n    return samples;\n  }\n\n  update(data) {\n    if (FilmGrainEffect.counter++ === this.patternRefreshInterval) {\n      FilmGrainEffect.counter = 0;\n      FilmGrainEffect.index++;\n      if (!this.samples[FilmGrainEffect.index]) {\n        FilmGrainEffect.index = 0;\n      }\n    }\n    this.currentSampleSet = this.samples[FilmGrainEffect.index];\n  }\n\n  display() {\n    for (let sample of this.currentSampleSet) {\n      image(sample.canvas, sample.x, sample.y, sample.w, sample.h);\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.currentSampleSet;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6740d340c753360e1f0c16e9",
        "createdAt": "2024-11-22T18:53:56.185Z",
        "updatedAt": "2024-11-22T18:53:56.185Z",
        "id": "6740d340c753360e1f0c16e9"
      }
    ],
    "createdAt": "2024-11-22T18:53:52.619Z",
    "updatedAt": "2024-11-22T18:53:56.185Z",
    "id": "ekSVBHlnT"
  },
  {
    "_id": "aK0eB9XDZ",
    "name": "findSum",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67059968998532522ff1d703",
          "67059968998532522ff1d702",
          "67059968998532522ff1d704"
        ],
        "fileType": "folder",
        "_id": "67059968998532522ff1d705",
        "createdAt": "2024-10-08T20:46:47.178Z",
        "updatedAt": "2024-10-08T20:46:47.178Z",
        "id": "67059968998532522ff1d705"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n  findSum(10, 15);\n}\n\nfunction findSum(x, y) {\n  result = x + y;\n  console.log(result);\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67059968998532522ff1d702",
        "createdAt": "2024-10-08T20:46:47.178Z",
        "updatedAt": "2024-10-08T20:46:47.178Z",
        "id": "67059968998532522ff1d702"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "67059968998532522ff1d703",
        "createdAt": "2024-10-08T20:46:47.178Z",
        "updatedAt": "2024-10-08T20:46:47.178Z",
        "id": "67059968998532522ff1d703"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "67059968998532522ff1d704",
        "createdAt": "2024-10-08T20:46:47.178Z",
        "updatedAt": "2024-10-08T20:46:47.178Z",
        "id": "67059968998532522ff1d704"
      }
    ],
    "updatedAt": "2024-10-08T20:46:47.178Z",
    "createdAt": "2024-10-08T20:46:47.178Z",
    "id": "aK0eB9XDZ"
  },
  {
    "_id": "pUB0ckUG-",
    "name": "Generative Lightning copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "673629088f90a2aa27e51999",
          "673629088f90a2aa27e5199a",
          "673629088f90a2aa27e5199b"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "673629088f90a2aa27e51998",
        "createdAt": "2019-09-28T15:29:50.515Z",
        "updatedAt": "2019-09-28T15:29:50.515Z",
        "id": "673629088f90a2aa27e51998"
      },
      {
        "name": "sketch.js",
        "content": "let light = 0;\n\nfunction setup() {\n  createCanvas(400, 400);\n  xCoord2 = 0;\n  yCoord2 = height / 2;\n}\n\nfunction draw() {\n  background(0)\n  myLight()\n}\n\nfunction keyPressed(){\n  if ((light === 0) && (keyCode === ENTER)) {\n    light = 1\n  }\n}\n\nfunction keyReleased(){\n  if ((light === 1) && (keyCode === ENTER)) {\n    light = 0\n  }\n}\n\nfunction drawBackground() {\n  for (var i = 0; i < 500; i++) {\n    stroke(i - 255, 30, 50);\n    line(0, i, width, i);\n  }\n}\n\nvar xCoord1 = 0;\nvar yCoord1 = 0;\nvar xCoord2 = 0;\nvar yCoord2 = 0;\n\nfunction myLight(){\n  for (var i = 0; i < 20; i++) {\n    xCoord1 = xCoord2;\n    yCoord1 = yCoord2;\n    xCoord2 = xCoord1 + int(random(-20, 20));\n    yCoord2 = yCoord1 + int(random(-10, 20));\n    strokeWeight(random(1, 3));\n    strokeJoin(MITER);\n    line(xCoord1, yCoord1, xCoord2, yCoord2);\n\n    if ((xCoord2 > width) | (xCoord2 < 0) | (yCoord2 > height) | (yCoord2 < 0)) {\n      // clear();\n      // drawBackground();\n      xCoord2 = int(random(0, width));\n      yCoord2 = 0;\n      if (light === 0) {\n        noStroke();\n      } else {\n        stroke(255, 255, random(0, 255));\n      }\n    }\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "673629088f90a2aa27e5199a",
        "createdAt": "2019-09-28T15:29:50.515Z",
        "updatedAt": "2019-09-28T15:29:50.515Z",
        "id": "673629088f90a2aa27e5199a"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673629088f90a2aa27e51999",
        "createdAt": "2019-09-28T15:29:50.515Z",
        "updatedAt": "2019-09-28T15:29:50.515Z",
        "id": "673629088f90a2aa27e51999"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673629088f90a2aa27e5199b",
        "createdAt": "2019-09-28T15:29:50.515Z",
        "updatedAt": "2019-09-28T15:29:50.515Z",
        "id": "673629088f90a2aa27e5199b"
      }
    ],
    "createdAt": "2024-11-14T16:44:56.871Z",
    "updatedAt": "2024-11-14T16:44:56.871Z",
    "id": "pUB0ckUG-"
  },
  {
    "_id": "rvyFLgO65",
    "name": "Glitch by pixel lengths COPY",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67337bbfbba1d03d5bf7d5e8",
          "67337bbfbba1d03d5bf7d5e9",
          "67337bbfbba1d03d5bf7d5ea"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67337bbfbba1d03d5bf7d5e7",
        "createdAt": "2024-11-20T20:26:57.494Z",
        "updatedAt": "2024-11-20T20:26:57.494Z",
        "id": "67337bbfbba1d03d5bf7d5e7"
      },
      {
        "name": "sketch.js",
        "content": "let glitchlen = 0;\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  \n  if (frameCount % 60 === 0) {\n     background(random(255), random(255), random(255));\n    // new colored circle\n    fill(random(255), random(255), random(255));\n    ellipse(width / 2, height / 2, 300, 300);\n\n    // random glitch pixel length\n    glitchlen = int(random(4, 2400)) * 10;\n  }\n}\n\nfunction keyPressed() {\n  if ((key = \"q\")) {\n    loadPixels();\n    // channel shift?\n    let channelshift = int(random(0, 4));\n    // loop over chunks\n    for (\n      let i = 0;\n      i < pixels.length - glitchlen;\n      i = i + glitchlen\n    ) {\n      // set all pixels in chunk to color of the first pixel\n      for (let p = channelshift; p < glitchlen; p += 4) {\n        pixels[i + p] = pixels[i];\n        pixels[i + p + 1] = pixels[i + 1];\n        pixels[i + p + 2] = pixels[i + 2];\n        //pixels[i+p+3] = pixels[i+3];\n      }\n    }\n    updatePixels();\n  }\n}\n\n// function glitch() {\n//    loadPixels();\n//   // channel shift?\n//   let channelshift = int(random(0, 4));\n//   // loop over chunks\n//   for (\n//     let i = pixels.length / 2;\n//     i < pixels.length - glitchlen;\n//     i = i + glitchlen\n//   ) {\n//     // set all pixels in chunk to color of the first pixel\n//     for (let p = channelshift; p < glitchlen; p += 4) {\n//       pixels[i + p] = pixels[i];\n//       pixels[i + p + 1] = pixels[i + 1];\n//       pixels[i + p + 2] = pixels[i + 2];\n//       //pixels[i+p+3] = pixels[i+3];\n//     }\n//   }\n//   updatePixels();\n// }\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67337bbfbba1d03d5bf7d5e9",
        "createdAt": "2024-11-20T20:26:57.494Z",
        "updatedAt": "2024-11-20T20:26:57.494Z",
        "id": "67337bbfbba1d03d5bf7d5e9"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67337bbfbba1d03d5bf7d5e8",
        "createdAt": "2024-11-20T20:26:57.494Z",
        "updatedAt": "2024-11-20T20:26:57.494Z",
        "id": "67337bbfbba1d03d5bf7d5e8"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67337bbfbba1d03d5bf7d5ea",
        "createdAt": "2024-11-20T20:26:57.494Z",
        "updatedAt": "2024-11-20T20:26:57.494Z",
        "id": "67337bbfbba1d03d5bf7d5ea"
      }
    ],
    "createdAt": "2024-11-12T16:01:03.868Z",
    "updatedAt": "2024-11-20T20:26:57.494Z",
    "id": "rvyFLgO65"
  },
  {
    "_id": "nicyOa8jZ",
    "name": "glitchvibe",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "673cbe06df282763b9827d87",
          "673cbe06df282763b9827d86",
          "673cbe06df282763b9827d88"
        ],
        "fileType": "folder",
        "_id": "673cbe06df282763b9827d89",
        "createdAt": "2024-11-20T20:27:29.024Z",
        "updatedAt": "2024-11-20T20:27:29.024Z",
        "id": "673cbe06df282763b9827d89"
      },
      {
        "name": "sketch.js",
        "content": "let glitchlen = 0;\nlet originalImage;\n\nfunction setup() {\n  createCanvas(400, 400);\n  saveOriginalState();\n}\n\nfunction draw() {\n  if (frameCount % 60 === 0) {\n    // Generate a new background and ellipse every second\n    background(random(255), random(255), random(255));\n    fill(random(255), random(255), random(255));\n    ellipse(width / 2, height / 2, 300, 300);\n\n    // Save the current canvas as the \"original\" image\n    saveOriginalState();\n\n    // Random glitch pixel length\n    glitchlen = int(random(4, 2400)) * 10;\n  }\n}\n\nfunction keyPressed() {\n  if (key === \"q\") {\n    loadPixels();\n    // Random channel shift\n    let channelshift = int(random(0, 4));\n    // Loop over chunks\n    for (let i = 0; i < pixels.length - glitchlen; i += glitchlen) {\n      // Apply glitch by setting all pixels in chunk to the color of the first pixel\n      for (let p = channelshift; p < glitchlen; p += 4) {\n        pixels[i + p] = pixels[i];\n        pixels[i + p + 1] = pixels[i + 1];\n        pixels[i + p + 2] = pixels[i + 2];\n        // pixels[i + p + 3] = pixels[i + 3]; // Optional alpha channel\n      }\n    }\n    updatePixels();\n  }\n}\n\nfunction keyReleased() {\n  if (key === \"q\") {\n    // Restore the original canvas when 'q' is released\n    image(originalImage, 0, 0);\n  }\n}\n\nfunction saveOriginalState() {\n  // Save the current canvas as an image\n  originalImage = get();\n}\n\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "673cbe06df282763b9827d86",
        "createdAt": "2024-11-20T20:27:29.024Z",
        "updatedAt": "2024-11-20T20:27:29.024Z",
        "id": "673cbe06df282763b9827d86"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "673cbe06df282763b9827d87",
        "createdAt": "2024-11-20T20:27:29.024Z",
        "updatedAt": "2024-11-20T20:27:29.024Z",
        "id": "673cbe06df282763b9827d87"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "673cbe06df282763b9827d88",
        "createdAt": "2024-11-20T20:27:29.024Z",
        "updatedAt": "2024-11-20T20:27:29.024Z",
        "id": "673cbe06df282763b9827d88"
      }
    ],
    "updatedAt": "2024-11-20T20:27:29.024Z",
    "createdAt": "2024-11-19T16:34:51.156Z",
    "id": "nicyOa8jZ"
  },
  {
    "_id": "8TmPb5fzf",
    "name": "greencat",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6722af29d0028763f1fcbe5a",
          "6722af17294f2d2a6dc906cc",
          "6722af17294f2d2a6dc906cd",
          "6722af17294f2d2a6dc906ce"
        ],
        "fileType": "folder",
        "_id": "6722af17294f2d2a6dc906cb",
        "createdAt": "2024-10-31T16:20:57.525Z",
        "updatedAt": "2024-10-31T16:20:57.525Z",
        "id": "6722af17294f2d2a6dc906cb"
      },
      {
        "name": "sketch.js",
        "content": "let img;\n\nfunction preload() {\n  img = loadImage(\"cat.jpg\"); \n}\n\nfunction setup() {\n  createCanvas(img.width, img.height);\n  img.loadPixels();\n  \n  for (let y = 0; y < img.height; y++) {\n    for (let x = 0; x < img.width; x++) {\n      let index = (x + y * img.width) * 4;\n      if ((x + y) % 2 === 0) { \n        img.pixels[index] = 0;     \n        img.pixels[index + 1] = 255; \n        img.pixels[index + 2] = 0;   \n      }\n    }\n  }\n  \n  let line1 = img.height / 2;\n  for (let y = line1 - 5; y < line1 + 5; y++) {\n    for (let x = 0; x < img.width; x++) {\n      let index = (x + y * img.width) * 4;\n      img.pixels[index] = 255;     \n      img.pixels[index + 1] = 255; \n      img.pixels[index + 2] = 255; \n    }\n  }\n  \n  let line2 = img.width / 2;\n  for (let x = line2 - 5; x < line2 + 5; x++) {\n    for (let y = 0; y < img.height; y++) {\n      let index = (x + y * img.width) * 4;\n      img.pixels[index] = 0;       \n      img.pixels[index + 1] = 0;   \n      img.pixels[index + 2] = 255; \n    }\n  } \n  \n  img.updatePixels();\n  image(img, 0, 0);\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6722af17294f2d2a6dc906cd",
        "createdAt": "2024-10-31T16:20:57.525Z",
        "updatedAt": "2024-10-31T16:20:57.525Z",
        "id": "6722af17294f2d2a6dc906cd"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6722af17294f2d2a6dc906cc",
        "createdAt": "2024-10-31T16:20:57.525Z",
        "updatedAt": "2024-10-31T16:20:57.525Z",
        "id": "6722af17294f2d2a6dc906cc"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6722af17294f2d2a6dc906ce",
        "createdAt": "2024-10-31T16:20:57.525Z",
        "updatedAt": "2024-10-31T16:20:57.525Z",
        "id": "6722af17294f2d2a6dc906ce"
      },
      {
        "name": "cat.jpg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/89648232-58a2-402e-900a-c17917cecc9a.jpg",
        "children": [],
        "fileType": "file",
        "_id": "6722af29d0028763f1fcbe5a",
        "createdAt": "2024-10-31T16:20:57.525Z",
        "updatedAt": "2024-10-31T16:20:57.525Z",
        "id": "6722af29d0028763f1fcbe5a"
      }
    ],
    "createdAt": "2024-10-30T22:11:35.496Z",
    "updatedAt": "2024-10-31T16:20:57.525Z",
    "id": "8TmPb5fzf"
  },
  {
    "_id": "SF6rDzEA_",
    "name": "grid100",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66fc34d496eb82dceeceddcf",
          "66fc34d496eb82dceeceddd0",
          "66fc34d496eb82dceeceddd1"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66fc34d496eb82dceeceddce",
        "createdAt": "2024-10-01T17:52:17.411Z",
        "updatedAt": "2024-10-01T17:52:17.411Z",
        "id": "66fc34d496eb82dceeceddce"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n  let W = width / 10;\n  let H = height / 10;\n\n  // cells in the y direction\n  for (let j = 0; j <= height / H; j++) {\n    let ypos = j * H;\n    // cells in the x direction\n    for (i = 0; i <= width / W; i++) {\n      let xpos = W * i;\n\n      if (\n        mouseX > xpos &&\n        mouseX < xpos + W &&\n        mouseY > ypos &&\n        mouseY < ypos + H\n      ) {\n        fill(\"darkred\");\n      } else {\n        fill(\"white\");\n      }\n      rect(xpos, ypos, W, H);\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66fc34d496eb82dceeceddd0",
        "createdAt": "2024-10-01T17:52:17.411Z",
        "updatedAt": "2024-10-01T17:52:17.411Z",
        "id": "66fc34d496eb82dceeceddd0"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fc34d496eb82dceeceddcf",
        "createdAt": "2024-10-01T17:52:17.411Z",
        "updatedAt": "2024-10-01T17:52:17.411Z",
        "id": "66fc34d496eb82dceeceddcf"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fc34d496eb82dceeceddd1",
        "createdAt": "2024-10-01T17:52:17.411Z",
        "updatedAt": "2024-10-01T17:52:17.411Z",
        "id": "66fc34d496eb82dceeceddd1"
      }
    ],
    "createdAt": "2024-10-01T17:43:48.675Z",
    "updatedAt": "2024-10-01T17:52:17.411Z",
    "id": "SF6rDzEA_"
  },
  {
    "_id": "M7_KjdmXB",
    "name": "half-sec-rect",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66f312b72633a374ccc8f40a",
          "66f312b72633a374ccc8f409",
          "66f312b72633a374ccc8f40b"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66f312b72633a374ccc8f40c",
        "createdAt": "2024-09-24T19:47:55.953Z",
        "updatedAt": "2024-09-24T19:47:55.953Z",
        "id": "66f312b72633a374ccc8f40c"
      },
      {
        "name": "sketch.js",
        "content": "let state = false;\nlet bg = 0;\n\nfunction setup() {\n  createCanvas(400, 400);\n  rectMode(CENTER);\n  setInterval(myRect, 500);\n}\n\nfunction draw() {\n  background(bg);\n  if (state) {\n    fill('pink')\n  } else {\n    noStroke()\n    fill(bg)\n  }\n  rect(200,200,100,100)\n}\n\nfunction myRect() {\n  state = !state\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66f312b72633a374ccc8f409",
        "createdAt": "2024-09-24T19:47:55.953Z",
        "updatedAt": "2024-09-24T19:47:55.953Z",
        "id": "66f312b72633a374ccc8f409"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66f312b72633a374ccc8f40a",
        "createdAt": "2024-09-24T19:47:55.953Z",
        "updatedAt": "2024-09-24T19:47:55.953Z",
        "id": "66f312b72633a374ccc8f40a"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66f312b72633a374ccc8f40b",
        "createdAt": "2024-09-24T19:47:55.953Z",
        "updatedAt": "2024-09-24T19:47:55.953Z",
        "id": "66f312b72633a374ccc8f40b"
      }
    ],
    "updatedAt": "2024-09-24T19:47:55.953Z",
    "createdAt": "2024-09-24T19:47:55.953Z",
    "id": "M7_KjdmXB"
  },
  {
    "_id": "7Ic16lG4s",
    "name": "hue steps !",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6740f9de9f6d5f2970b8aa39",
          "6740f9de9f6d5f2970b8aa38",
          "6740f9de9f6d5f2970b8aa3a"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6740f9de9f6d5f2970b8aa3b",
        "createdAt": "2024-11-23T00:15:16.633Z",
        "updatedAt": "2024-11-23T00:15:16.633Z",
        "id": "6740f9de9f6d5f2970b8aa3b"
      },
      {
        "name": "sketch.js",
        "content": "// Input hue2 (range 0 to 360)\nlet hue2 = 0;\n\n// Generate three hue values spaced approximately 120 apart\nlet hue2A = (hue2 + 30) % 360;       // Base hue\nlet hue2B = (hue2 + 350) % 360;     // +120 degrees\nlet hue2C = (hue2 + 240) % 360;     // +240 degrees\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n  // Log or use the hue values\nconsole.log(\"Hue2A:\", hue2A, \"Hue2B:\", hue2B, \"Hue2C:\", hue2C);\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6740f9de9f6d5f2970b8aa38",
        "createdAt": "2024-11-23T00:15:16.633Z",
        "updatedAt": "2024-11-23T00:15:16.633Z",
        "id": "6740f9de9f6d5f2970b8aa38"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6740f9de9f6d5f2970b8aa39",
        "createdAt": "2024-11-23T00:15:16.633Z",
        "updatedAt": "2024-11-23T00:15:16.633Z",
        "id": "6740f9de9f6d5f2970b8aa39"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6740f9de9f6d5f2970b8aa3a",
        "createdAt": "2024-11-23T00:15:16.633Z",
        "updatedAt": "2024-11-23T00:15:16.633Z",
        "id": "6740f9de9f6d5f2970b8aa3a"
      }
    ],
    "updatedAt": "2024-11-23T00:15:16.633Z",
    "createdAt": "2024-11-22T21:39:08.889Z",
    "id": "7Ic16lG4s"
  },
  {
    "_id": "mfvnysD5W",
    "name": "image-array",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67d768f5240341814de16114",
          "67d768f5240341814de16127",
          "67d768f5240341814de16128",
          "67d768f5240341814de16129"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d768f5240341814de16113",
        "createdAt": "2025-03-17T00:16:33.160Z",
        "updatedAt": "2025-03-17T00:16:33.160Z",
        "id": "67d768f5240341814de16113"
      },
      {
        "name": "index.html",
        "content": "<!--\r\n  👋 Hello! This is an ml5.js example made and shared with ❤️.\r\n  Learn more about the ml5.js project: https://ml5js.org/\r\n  ml5.js license and Code of Conduct: https://github.com/ml5js/ml5-next-gen/blob/main/LICENSE.md\r\n\r\n  This example demonstrates segmenting a person by body parts with ml5.bodySegmentation.\r\n-->\r\n\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>ml5.js bodySegmentation Parts Example</title>\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js\"></script>\r\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\r\n  </head>\r\n  <body>\r\n    <script src=\"sketch.js\"></script>\r\n  </body>\r\n</html>\r\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d768f5240341814de16127",
        "createdAt": "2025-03-17T00:16:33.160Z",
        "updatedAt": "2025-03-17T00:16:33.160Z",
        "id": "67d768f5240341814de16127"
      },
      {
        "name": "sketch.js",
        "content": "let portals = [];\n\nfunction preload() {\n  let images = 18;\n  for (let i = 1; i < images + 1; i++) {\n    let path = 'images/' + String(i) + '.jpeg';\n    loadImage(path, \n      img => {\n        portals.push(img);\n        // console.log(\"Loaded:\", path);\n      }, \n      err => console.error(\"Failed to load:\", path, err)\n    );\n  }\n}\n\nfunction setup() {\n  createCanvas(640, 480);\n}\n\n// var ii = 0;\n\nfunction draw() {\n  background(0);\n\n// shift through all images in array\n\n// if (portals.length > 0) {\n//     image(portals[ii], 0, 0, 640, 480);\n//     ii = (ii + 1) % portals.length; \n//   }\n  \n  image(portals[2], 0, 0, 640, 480);\n\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67d768f5240341814de16128",
        "createdAt": "2025-03-17T00:16:33.160Z",
        "updatedAt": "2025-03-17T00:16:33.160Z",
        "id": "67d768f5240341814de16128"
      },
      {
        "name": "images",
        "content": "",
        "children": [
          "67d768f5240341814de16115",
          "67d768f5240341814de16116",
          "67d768f5240341814de16117",
          "67d768f5240341814de16118",
          "67d768f5240341814de16119",
          "67d768f5240341814de1611a",
          "67d768f5240341814de1611b",
          "67d768f5240341814de1611c",
          "67d768f5240341814de1611d",
          "67d768f5240341814de1611e",
          "67d768f5240341814de1611f",
          "67d768f5240341814de16120",
          "67d768f5240341814de16121",
          "67d768f5240341814de16122",
          "67d768f5240341814de16123",
          "67d768f5240341814de16124",
          "67d768f5240341814de16125",
          "67d768f5240341814de16126"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d768f5240341814de16114",
        "createdAt": "2025-03-17T00:16:33.160Z",
        "updatedAt": "2025-03-17T00:16:33.160Z",
        "id": "67d768f5240341814de16114"
      },
      {
        "name": "3.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/8ce00922-18dd-4093-aa2f-04b8bd66fe6b.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d768f5240341814de16120",
        "createdAt": "2025-03-17T00:16:33.160Z",
        "updatedAt": "2025-03-17T00:16:33.160Z",
        "id": "67d768f5240341814de16120"
      },
      {
        "name": "1.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/dea8ef68-5d27-4a5e-9bb1-841f2d86e5fd.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d768f5240341814de16115",
        "createdAt": "2025-03-17T00:16:33.160Z",
        "updatedAt": "2025-03-17T00:16:33.160Z",
        "id": "67d768f5240341814de16115"
      },
      {
        "name": "2.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/98b492ee-4a2a-42b9-b0cc-b91fe75b3e18.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d768f5240341814de1611f",
        "createdAt": "2025-03-17T00:16:33.160Z",
        "updatedAt": "2025-03-17T00:16:33.160Z",
        "id": "67d768f5240341814de1611f"
      },
      {
        "name": "4.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/1e32a8b0-b2d4-4307-b40e-47f70c7be70c.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d768f5240341814de16121",
        "createdAt": "2025-03-17T00:16:33.160Z",
        "updatedAt": "2025-03-17T00:16:33.160Z",
        "id": "67d768f5240341814de16121"
      },
      {
        "name": "5.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/a9025be9-9534-45c0-b5c1-92d997e9c97c.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d768f5240341814de16122",
        "createdAt": "2025-03-17T00:16:33.160Z",
        "updatedAt": "2025-03-17T00:16:33.160Z",
        "id": "67d768f5240341814de16122"
      },
      {
        "name": "15.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/5ce06a95-60b0-4d10-a05a-2bd3ab92efae.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d768f5240341814de1611b",
        "createdAt": "2025-03-17T00:16:33.160Z",
        "updatedAt": "2025-03-17T00:16:33.160Z",
        "id": "67d768f5240341814de1611b"
      },
      {
        "name": "16.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/2838b167-2dae-4427-8e37-3ae12392ae60.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d768f5240341814de1611c",
        "createdAt": "2025-03-17T00:16:33.160Z",
        "updatedAt": "2025-03-17T00:16:33.160Z",
        "id": "67d768f5240341814de1611c"
      },
      {
        "name": "17.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/dbedbc3b-cdd5-4445-b452-ebe96b76d797.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d768f5240341814de1611d",
        "createdAt": "2025-03-17T00:16:33.160Z",
        "updatedAt": "2025-03-17T00:16:33.160Z",
        "id": "67d768f5240341814de1611d"
      },
      {
        "name": "7.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/435b1208-376f-45ac-8447-a8cd0f81ba60.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d768f5240341814de16124",
        "createdAt": "2025-03-17T00:16:33.160Z",
        "updatedAt": "2025-03-17T00:16:33.160Z",
        "id": "67d768f5240341814de16124"
      },
      {
        "name": "6.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/a5610205-518f-48cb-881c-f6052ea24cc2.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d768f5240341814de16123",
        "createdAt": "2025-03-17T00:16:33.160Z",
        "updatedAt": "2025-03-17T00:16:33.160Z",
        "id": "67d768f5240341814de16123"
      },
      {
        "name": "8.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/4b9f9507-ac5b-4ff6-9a51-4655b0228873.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d768f5240341814de16125",
        "createdAt": "2025-03-17T00:16:33.160Z",
        "updatedAt": "2025-03-17T00:16:33.160Z",
        "id": "67d768f5240341814de16125"
      },
      {
        "name": "12.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/7bada62c-a30e-445b-a091-98b5eeee772e.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d768f5240341814de16118",
        "createdAt": "2025-03-17T00:16:33.160Z",
        "updatedAt": "2025-03-17T00:16:33.160Z",
        "id": "67d768f5240341814de16118"
      },
      {
        "name": "13.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/05cc484d-d132-4029-9fe2-1ebcea48b664.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d768f5240341814de16119",
        "createdAt": "2025-03-17T00:16:33.160Z",
        "updatedAt": "2025-03-17T00:16:33.160Z",
        "id": "67d768f5240341814de16119"
      },
      {
        "name": "14.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/33fb03a4-531c-41cf-9a99-bcf6cbb44638.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d768f5240341814de1611a",
        "createdAt": "2025-03-17T00:16:33.160Z",
        "updatedAt": "2025-03-17T00:16:33.160Z",
        "id": "67d768f5240341814de1611a"
      },
      {
        "name": "18.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/e82d9782-519b-426b-b47b-e4f6ab5b127e.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d768f5240341814de1611e",
        "createdAt": "2025-03-17T00:16:33.160Z",
        "updatedAt": "2025-03-17T00:16:33.160Z",
        "id": "67d768f5240341814de1611e"
      },
      {
        "name": "10.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/31fee305-5f58-4587-8171-cf8c499cfea7.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d768f5240341814de16116",
        "createdAt": "2025-03-17T00:16:33.160Z",
        "updatedAt": "2025-03-17T00:16:33.160Z",
        "id": "67d768f5240341814de16116"
      },
      {
        "name": "9.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/667e6bf7-9729-49df-9ea3-1c580465b721.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d768f5240341814de16126",
        "createdAt": "2025-03-17T00:16:33.160Z",
        "updatedAt": "2025-03-17T00:16:33.160Z",
        "id": "67d768f5240341814de16126"
      },
      {
        "name": "11.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/20e85c41-831f-4a25-b268-80f25ad50405.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d768f5240341814de16117",
        "createdAt": "2025-03-17T00:16:33.160Z",
        "updatedAt": "2025-03-17T00:16:33.160Z",
        "id": "67d768f5240341814de16117"
      },
      {
        "name": "vanishing.js",
        "content": "// // Body segmentation variables\n// let bodySegmentation;\n// let video;\n// let segmentation;\n// let personImage;\n\n// let options = {\n//   maskType: \"parts\",\n// };\n\n// let portals = [];\n// let layeredImage; // off-screen graphics buffer for layering\n\n// function preload() {\n//   let images = 18;\n//   for (let i = 1; i < images + 1; i++) {\n//     let path = 'images/' + String(i) + '.jpeg';\n//     loadImage(path, \n//       img => {\n//         portals.push(img);\n//       }, \n//       err => console.error(\"Failed to load:\", path, err)\n//     );\n//   }\n\n//   bodySegmentation = ml5.bodySegmentation(\"BodyPix\", options);\n// }\n\n// function setup() {\n//   createCanvas(640, 480);\n//   // Create the video\n//   video = createCapture(VIDEO);\n//   video.size(640, 480);\n//   video.hide();\n\n//   bodySegmentation.detectStart(video, gotResults);\n\n//   // Create an image for segmented output (if needed)\n//   personImage = createImage(video.width, video.height);\n  \n//   // Create a graphics buffer to draw our layered effect\n//   layeredImage = createGraphics(width, height);\n// }\n\n// var ii = 0;\n\n// function draw() {\n//   background(0);\n  \n//   // Draw the background image normally\n//   image(portals[2], 0, 0, 640, 480);\n  \n//   // Display the segmented mask filled with layered images\n//   if (segmentation) {\n//     // Clear the off-screen graphics\n//     layeredImage.clear();\n    \n//     // Number of layers and scale decrement\n//     let numLayers = 5;\n//     // Here we assume the vanishing point is the center; adjust offsets if needed.\n//     for (let j = 0; j < numLayers; j++) {\n//       // Each layer is drawn at a decreased scale\n//       let scaleFactor = 1 - j * 0.15; // adjust 0.15 to change the decrement\n//       let imgW = width * scaleFactor;\n//       let imgH = height * scaleFactor;\n//       // Center the image so they converge toward the center (vanishing point)\n//       let offsetX = (width - imgW) / 2;\n//       let offsetY = (height - imgH) / 2;\n      \n//       layeredImage.image(portals[2], offsetX, offsetY, imgW, imgH);\n//     }\n    \n//     // Get the layered composition as a p5.Image so we can apply the mask\n//     let layeredImg = layeredImage.get();\n//     layeredImg.mask(segmentation.mask);\n    \n//     // Draw the masked layered image on top\n//     image(layeredImg, 0, 0, width, height);\n//   }\n// }\n\n// // callback function for body segmentation\n// function gotResults(result) {\n//   segmentation = result;\n// }\n\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d768f5240341814de16129",
        "createdAt": "2025-03-17T00:16:33.160Z",
        "updatedAt": "2025-03-17T00:16:33.160Z",
        "id": "67d768f5240341814de16129"
      }
    ],
    "createdAt": "2025-03-17T00:12:38.177Z",
    "updatedAt": "2025-03-17T00:16:33.160Z",
    "id": "mfvnysD5W"
  },
  {
    "_id": "KhZmURc0p",
    "name": "instrument starter",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "678fead9eb922011482cddd2",
          "678fead9eb922011482cddd3",
          "678fead9eb922011482cddd4",
          "678fead9eb922011482cddd5",
          "678fead9eb922011482cddda"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "678fead9eb922011482cddd1",
        "createdAt": "2025-01-24T22:48:28.962Z",
        "updatedAt": "2025-01-24T22:48:28.962Z",
        "id": "678fead9eb922011482cddd1"
      },
      {
        "name": "sketch.js",
        "content": "const blip = new SimplePlayer(\"sounds/blip.wav\").toDestination();\nconst pink = new SimplePlayer(\"sounds/pink.wav\").toDestination();\nconst takerimba = new SimplePlayer(\"sounds/takerimba.wav\").toDestination();\nconst tears = new SimplePlayer(\"sounds/tears.wav\").toDestination();\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(0);\n  // console.log(tears.progress());\n\n  // pink\n  let x = map(pink.progress(), 0, 1, 0, width);\n  fill(\"green\");\n  ellipse(x, height / 2, 50, 50);\n\n  // tears\n  let y = map(tears.progress(), 0, 1, 0, height);\n  fill(\"red\");\n  ellipse(width / 2, y, 50, 50);\n}\n\n// function mouseClicked() {\n//   if (loaded) {\n//     blip.start();\n//   }\n// }\n\nfunction keyTyped() {\n  if (loaded) {\n    if (key === \"a\") {\n      blip.start();\n    } else if (key === \"s\") {\n      pink.start();\n    } else if (key === \"d\") {\n      takerimba.start();\n    } else if (key === \"f\") {\n      tears.start();\n    }\n  }\n}\n\nlet loaded = false;\n\nTone.loaded().then(function () {\n  loaded = true;\n});\n\n\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "678fead9eb922011482cddd4",
        "createdAt": "2025-01-24T22:48:28.962Z",
        "updatedAt": "2025-01-24T22:48:28.962Z",
        "id": "678fead9eb922011482cddd4"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.1/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.1/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/tone/14.8.9/Tone.js\"></script>\n    <script src=\"SimplePlayer.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "678fead9eb922011482cddd3",
        "createdAt": "2025-01-24T22:48:28.962Z",
        "updatedAt": "2025-01-24T22:48:28.962Z",
        "id": "678fead9eb922011482cddd3"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "678fead9eb922011482cddda",
        "createdAt": "2025-01-24T22:48:28.962Z",
        "updatedAt": "2025-01-24T22:48:28.962Z",
        "id": "678fead9eb922011482cddda"
      },
      {
        "name": "sounds",
        "content": "",
        "children": [
          "678fead9eb922011482cddd6",
          "678fead9eb922011482cddd7",
          "678fead9eb922011482cddd8",
          "678fead9eb922011482cddd9"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "678fead9eb922011482cddd5",
        "createdAt": "2025-01-24T22:48:28.962Z",
        "updatedAt": "2025-01-24T22:48:28.962Z",
        "id": "678fead9eb922011482cddd5"
      },
      {
        "name": "blip.wav",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/8421ae3f-36b8-4408-b679-a811f08062e4.wav",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "678fead9eb922011482cddd6",
        "createdAt": "2025-01-24T22:48:28.962Z",
        "updatedAt": "2025-01-24T22:48:28.962Z",
        "id": "678fead9eb922011482cddd6"
      },
      {
        "name": "SimplePlayer.js",
        "content": "// a subclass of Tone.Player that adds a progress function to it.\n// The only permitted playbackRate is 1.\n\nclass SimplePlayer extends Tone.Player {\n  constructor(...args){\n    super(...args);\n    this.playbackRate = 1;\n  }\n  \n  start(...args){\n    // assuming args[0] is always time\n    this.startTime = args[0] | Tone.now();\n    super.start(...args);\n  }\n  \n  get duration(){\n    return this._buffer.duration;\n  }\n  \n  currentTime(){\n    return Tone.now() - this.startTime;\n  }\n  \n  progress(){\n    if(this.state == \"started\"){\n       return this.currentTime() / this.duration; \n    }\n    else{\n      return 0;\n    }\n  }\n  \n  // disable setting playbackRate to anything other than 1\n  set playbackRate(rate) {\n    if(rate != 1) throw new Error(\"Setting the playbackRate value to any value other than 1 is disabled in SimplePlayer. If required, use Tone.Player instead.\");\n  }\n}\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "678fead9eb922011482cddd2",
        "createdAt": "2025-01-24T22:48:28.962Z",
        "updatedAt": "2025-01-24T22:48:28.962Z",
        "id": "678fead9eb922011482cddd2"
      },
      {
        "name": "tears.wav",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/bedaf9c2-58ce-471a-9f2c-ac936be8d379.wav",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "678fead9eb922011482cddd9",
        "createdAt": "2025-01-24T22:48:28.962Z",
        "updatedAt": "2025-01-24T22:48:28.962Z",
        "id": "678fead9eb922011482cddd9"
      },
      {
        "name": "takerimba.wav",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/e2929550-e07c-46fe-9180-47b3095299a6.wav",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "678fead9eb922011482cddd8",
        "createdAt": "2025-01-24T22:48:28.962Z",
        "updatedAt": "2025-01-24T22:48:28.962Z",
        "id": "678fead9eb922011482cddd8"
      },
      {
        "name": "pink.wav",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/334dccb1-074f-46b2-9fe0-28bebd622593.wav",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "678fead9eb922011482cddd7",
        "createdAt": "2025-01-24T22:48:28.962Z",
        "updatedAt": "2025-01-24T22:48:28.962Z",
        "id": "678fead9eb922011482cddd7"
      }
    ],
    "createdAt": "2025-01-21T18:43:38.255Z",
    "updatedAt": "2025-01-24T22:48:28.962Z",
    "id": "KhZmURc0p"
  },
  {
    "_id": "46d5sb41i",
    "name": "it's the same i promise copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67a0e03df9e3a2352da421f5",
          "67a0e03df9e3a2352da421f6",
          "67a0e03df9e3a2352da421f7"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67a0e03df9e3a2352da421f4",
        "createdAt": "2025-02-03T15:34:59.786Z",
        "updatedAt": "2025-02-03T15:34:59.786Z",
        "id": "67a0e03df9e3a2352da421f4"
      },
      {
        "name": "sketch.js",
        "content": "let rowHeight;\n\nfunction setup() {\n  createCanvas(600, 600);\n  noStroke();\n  rowHeight = height / 3;\n}\n\nfunction draw() {\n  \n  if (mouseIsPressed) {\n    background(80, 150); // error 2\n  } else {\n    background(150, 80);\n  }\n  \n  let x = mouseX;\n  let y = mouseY; // error 3\n  \n  fill(255, 150);\n  circle(x, height / 2, y);\n\n  let inverseX = width - mouseX;\n  let inverseY = height - mouseY;\n\n  fill(0, 150);\n  circle(inverseX, height / 2, inverseY);\n\n  if (mouseY < rowHeight) { // error 1\n    fill(20, 150);\n    rect(0, 0, width, rowHeight);\n  } else if (mouseY < rowHeight * 2) {\n    fill(80, 150);\n    rect(0, rowHeight, width, rowHeight);\n  } else {\n    fill(140, 150);\n    rect(0, rowHeight * 2, width, rowHeight);\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67a0e03df9e3a2352da421f6",
        "createdAt": "2025-02-03T15:34:59.786Z",
        "updatedAt": "2025-02-03T15:34:59.786Z",
        "id": "67a0e03df9e3a2352da421f6"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a0e03df9e3a2352da421f5",
        "createdAt": "2025-02-03T15:34:59.786Z",
        "updatedAt": "2025-02-03T15:34:59.786Z",
        "id": "67a0e03df9e3a2352da421f5"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67a0e03df9e3a2352da421f7",
        "createdAt": "2025-02-03T15:34:59.786Z",
        "updatedAt": "2025-02-03T15:34:59.786Z",
        "id": "67a0e03df9e3a2352da421f7"
      }
    ],
    "createdAt": "2025-02-03T15:26:53.852Z",
    "updatedAt": "2025-02-03T15:34:59.786Z",
    "id": "46d5sb41i"
  },
  {
    "_id": "hLBbTmPCo",
    "name": "Laser  copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "674f6092263ce005cf72621a",
          "674f6092263ce005cf72621b",
          "674f6092263ce005cf72621c",
          "674f6092263ce005cf72621d",
          "674f6092263ce005cf72621e"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "674f6092263ce005cf726219",
        "createdAt": "2019-09-20T01:46:34.496Z",
        "updatedAt": "2019-09-20T01:46:34.496Z",
        "id": "674f6092263ce005cf726219"
      },
      {
        "name": "sketch.js",
        "content": "let sound\nlet amp\n\nfunction preload() {\n  //sound = loadSound(\"Here Comes The Sun.mp3\")\n  sound = loadSound(\"in my mind.mp3\")\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  angleMode(DEGREES)\n  amp = new p5.Amplitude(0.9)\n  fft = new p5.FFT()\n  sound.play()\n}\n\nfunction draw() {\n  colorMode(HSB,1)\n  background(0);\n  translate(width / 2, height / 2)\n  fft.analyze()\n  freq = fft.getCentroid()\n  var left = amp.getLevel(0);\n  var A_L = map(left, 0, 1, 0, width)\n  var right = amp.getLevel(1)\n  var A_R = map(right, 0, 1, 0, height)\n  c = amp.getLevel()\n  beginShape()\n  for (let t = 0; t < 100; t++) {\n    noFill()\n    x = A_L * cos(t*freq)\n    y = A_R * sin(t*freq)\n    stroke(c,1,1)\n    vertex(x, y)\n  }\n  endShape()\n\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "674f6092263ce005cf72621d",
        "createdAt": "2019-09-20T01:46:34.496Z",
        "updatedAt": "2019-09-20T01:46:34.496Z",
        "id": "674f6092263ce005cf72621d"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674f6092263ce005cf72621c",
        "createdAt": "2019-09-20T01:46:34.496Z",
        "updatedAt": "2019-09-20T01:46:34.496Z",
        "id": "674f6092263ce005cf72621c"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674f6092263ce005cf72621e",
        "createdAt": "2019-09-20T01:46:34.496Z",
        "updatedAt": "2019-09-20T01:46:34.496Z",
        "id": "674f6092263ce005cf72621e"
      },
      {
        "name": "Here Comes The Sun.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/4bfdcae5-7514-4977-9e89-8a164581640a.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674f6092263ce005cf72621a",
        "createdAt": "2019-09-20T01:46:34.496Z",
        "updatedAt": "2019-09-20T01:46:34.496Z",
        "id": "674f6092263ce005cf72621a"
      },
      {
        "name": "in my mind.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/1757c01d-fbc3-49e9-9f62-446b8243a4e5.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674f6092263ce005cf72621b",
        "createdAt": "2019-09-20T01:46:34.496Z",
        "updatedAt": "2019-09-20T01:46:34.496Z",
        "id": "674f6092263ce005cf72621b"
      }
    ],
    "createdAt": "2024-12-03T19:48:35.360Z",
    "updatedAt": "2024-12-03T19:48:35.360Z",
    "id": "hLBbTmPCo"
  },
  {
    "_id": "6K3MSQfsY",
    "name": "laser beams 2 copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "674f60ea1fb8743220e14917",
          "674f60ea1fb8743220e14918",
          "674f60ea1fb8743220e14919"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "674f60ea1fb8743220e14916",
        "createdAt": "2024-12-03T20:46:55.558Z",
        "updatedAt": "2024-12-03T20:46:55.558Z",
        "id": "674f60ea1fb8743220e14916"
      },
      {
        "name": "sketch.js",
        "content": "let xLength = 500;\nlet yLength = 500;\n\nlet numLines = 28;\nlet xDist = 11;\n\n//sliders\nlet distSlider;\nlet colorSlider;\nlet lineSlider;\n\n\nlet leftLine = {\n  x1 : 0,\n  y1 : yLength,\n  x2 : xLength,\n  y2 : 0\n}\n\nlet rightLine = {\n  x1 : xLength,\n  y1 : yLength,\n  x2 : 0,\n  y2 : 0\n}\n\nfunction setup() {\n  createCanvas(xLength, yLength);\n  \n  //sliders\n  distSlider = createSlider(1, 20, 3);\n  colorSlider = createSlider(1, 200, 1);\n  lineSlider = createSlider(1, 30, 10);\n}\n\nfunction draw() {\n  background(0);\n  vertLine1();\n  vertLine2();\n\tvertLine3();\n  vertLine4();\n}\n\nfunction vertLine1() {\n  strokeWeight(1);\n  stroke(10, 255, 155);\n  let x2 = xLength;\n  line(leftLine.x1, leftLine.y1, leftLine.x2, leftLine.y2);\n  for (let i = 0; i < lineSlider.value(); i++) {\n    line(leftLine.x1, leftLine.y1, x2, leftLine.y2);\n    let shiftX = -(distSlider.value());\n    x2 += shiftX; \n  }\n  \n}\n\nfunction vertLine2() {\n  strokeWeight(1);\n  stroke(colorSlider.value(), 10, 155);\n  let x2 = 0;\n  line(rightLine.x1, rightLine.y1, rightLine.x2, rightLine.y2);\n  for (let i = 0; i < lineSlider.value(); i++) {\n    line(rightLine.x1, rightLine.y1, x2, rightLine.y2);\n    let shiftX = distSlider.value();\n    x2 += shiftX;\n  }\n}\n\nfunction vertLine3() {\n  strokeWeight(1);\n  stroke(10, 255, 155);\n  let x2 = xLength;\n  line(leftLine.x1, leftLine.y2, leftLine.x2, leftLine.y1);\n  for (let i = 0; i < lineSlider.value(); i++) {\n    line(leftLine.x1, leftLine.y2, x2, leftLine.y1);\n    let shiftX = -(distSlider.value());\n    x2 += shiftX; \n  }\n}\n\nfunction vertLine4() {\n  strokeWeight(1);\n  stroke(colorSlider.value(), 10, 155);\n  let x2 = 0;\n  line(rightLine.x1, rightLine.y2, rightLine.x2, rightLine.y1);\n  for (let i = 0; i < lineSlider.value(); i++) {\n    line(rightLine.x1, rightLine.y2, x2, rightLine.y1);\n    let shiftX = distSlider.value();\n    x2 += shiftX;\n  }\n}\n  \n  \n  \n  \n  \n  \n  \n  \n  ",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "674f60ea1fb8743220e14918",
        "createdAt": "2024-12-03T20:46:55.558Z",
        "updatedAt": "2024-12-03T20:46:55.558Z",
        "id": "674f60ea1fb8743220e14918"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674f60ea1fb8743220e14917",
        "createdAt": "2024-12-03T20:46:55.558Z",
        "updatedAt": "2024-12-03T20:46:55.558Z",
        "id": "674f60ea1fb8743220e14917"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674f60ea1fb8743220e14919",
        "createdAt": "2024-12-03T20:46:55.558Z",
        "updatedAt": "2024-12-03T20:46:55.558Z",
        "id": "674f60ea1fb8743220e14919"
      }
    ],
    "createdAt": "2024-12-03T19:50:02.361Z",
    "updatedAt": "2024-12-03T20:46:55.558Z",
    "id": "6K3MSQfsY"
  },
  {
    "_id": "e6y53O5lf",
    "name": "line()",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66e321fad2613a626e52f6b2",
          "66e321fad2613a626e52f6b3",
          "66e321fad2613a626e52f6b4"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66e321fad2613a626e52f6b1",
        "createdAt": "2024-09-12T17:19:08.510Z",
        "updatedAt": "2024-09-12T17:19:08.510Z",
        "id": "66e321fad2613a626e52f6b1"
      },
      {
        "name": "sketch.js",
        "content": "// function mouseMoved() {\n//   console.log(`Mouse X: ${mouseX}, Mouse Y: ${mouseY}`);\n// }\n\nfunction setup() {\n  createCanvas(400,400);\n}\n\nfunction draw() {\n  background(1, 9, 61);\n  stroke(255);\n  line(width/4, height/4, 3*width/4, height/4);\n  line(3*width/4, height/4, 3*width/4, 3*height/4);\n  line(3*width/4, 3*height/4, width/4, 3*height/4);\n  line(width/4, 3*height/4, width/4, height/4);\n}\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66e321fad2613a626e52f6b3",
        "createdAt": "2024-09-12T17:19:08.510Z",
        "updatedAt": "2024-09-12T17:19:08.510Z",
        "id": "66e321fad2613a626e52f6b3"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66e321fad2613a626e52f6b2",
        "createdAt": "2024-09-12T17:19:08.510Z",
        "updatedAt": "2024-09-12T17:19:08.510Z",
        "id": "66e321fad2613a626e52f6b2"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66e321fad2613a626e52f6b4",
        "createdAt": "2024-09-12T17:19:08.510Z",
        "updatedAt": "2024-09-12T17:19:08.510Z",
        "id": "66e321fad2613a626e52f6b4"
      }
    ],
    "createdAt": "2024-09-12T17:16:42.895Z",
    "updatedAt": "2024-09-12T17:19:08.510Z",
    "id": "e6y53O5lf"
  },
  {
    "_id": "DNWjC8a7C",
    "name": "Lizard meteor",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67607f56776fae3330001562",
          "67607f56776fae3330001561",
          "67607f56776fae3330001563"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67607f56776fae3330001564",
        "createdAt": "2024-12-17T20:14:48.216Z",
        "updatedAt": "2024-12-17T20:14:48.216Z",
        "id": "67607f56776fae3330001564"
      },
      {
        "name": "sketch.js",
        "content": "let sound;\nlet fft;\nlet bassEnergy;\nlet threshold = 10; // Adjust this threshold based on sensitivity\nlet beatDetected = false;\n\n// function preload() {\n//   sound = loadSound('your-audio-file.mp3'); // Replace with your audio file\n// }\n\nfunction setup() {\n  createCanvas(400, 200);\n  // sound.play();\n  \n  fft = new p5.FFT();\n  mic = new p5.AudioIn();\n  mic.start();\n  // amp = new p5.Amplitude(0.9)\n  fft.setInput(mic);\n}\n\nfunction draw() {\n  background(0);\n  \n  // Perform FFT analysis\n  let spectrum = fft.analyze();\n  \n  // Get energy level in the bass frequency range (20-140 Hz)\n  bassEnergy = fft.getEnergy('bass');\n  \n  // Check if the bass energy surpasses a threshold to detect a beat\n  if (bassEnergy > threshold) {\n    beatDetected = true;\n  } else {\n    beatDetected = false;\n  }\n  \n  // Visualize the beat\n  if (beatDetected) {\n    fill(255, 0, 0);\n  } else {\n    fill(255);\n  }\n  \n  ellipse(width / 2, height / 2, bassEnergy, bassEnergy);\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67607f56776fae3330001561",
        "createdAt": "2024-12-17T20:14:48.216Z",
        "updatedAt": "2024-12-17T20:14:48.216Z",
        "id": "67607f56776fae3330001561"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67607f56776fae3330001562",
        "createdAt": "2024-12-17T20:14:48.216Z",
        "updatedAt": "2024-12-17T20:14:48.216Z",
        "id": "67607f56776fae3330001562"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67607f56776fae3330001563",
        "createdAt": "2024-12-17T20:14:48.216Z",
        "updatedAt": "2024-12-17T20:14:48.216Z",
        "id": "67607f56776fae3330001563"
      }
    ],
    "updatedAt": "2024-12-17T20:14:48.216Z",
    "createdAt": "2024-12-17T20:14:48.216Z",
    "id": "DNWjC8a7C"
  },
  {
    "_id": "QJ2OyvZSA",
    "name": "log scale frequencies",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67c73d885c257d0ebd936a5f",
          "67c73d885c257d0ebd936a60",
          "67c73d885c257d0ebd936a61"
        ],
        "fileType": "folder",
        "_id": "67c73d885c257d0ebd936a5e",
        "createdAt": "2025-03-04T17:51:29.513Z",
        "updatedAt": "2025-03-04T17:51:29.513Z",
        "id": "67c73d885c257d0ebd936a5e"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://unpkg.com/tone@15.0.4/build/Tone.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67c73d885c257d0ebd936a5f",
        "createdAt": "2025-03-04T17:51:29.513Z",
        "updatedAt": "2025-03-04T17:51:29.513Z",
        "id": "67c73d885c257d0ebd936a5f"
      },
      {
        "name": "sketch.js",
        "content": "// The Code of Music\n// NYU ITP/IMA Fall 2024\n// Luisa Pereira\n\n// Starter code for the Melody chapter\n\n// Create a Synth instrument, which can play specific frequencies\nconst synth = new Tone.Synth();\nsynth.toDestination();\n\nlet min = 80;\nlet max = 1300;\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(0);\n}\n\nfunction mousePressed() {\n  let freq = yToF(mouseY);\n  let velocity = mouseX / width;\n  // Trigger (play) a 100Hz tone\n  synth.triggerAttack(freq, velocity);\n}\n\nfunction yToF(y) {\n  let turns = 2;\n  let steps = map(y, 0, height, turns, 0);\n  return min * Math.pow(2, steps);\n}\n\nfunction mouseReleased() {\n  // Release (stop playing) the tone\n  synth.triggerRelease();\n}\n\n// Create p5.js' setup function - this is just to make sure p5.js is initialized\n// and the event handlers we defined above (mousePressed, mouseReleased) are called\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67c73d885c257d0ebd936a60",
        "createdAt": "2025-03-04T17:51:29.513Z",
        "updatedAt": "2025-03-04T17:51:29.513Z",
        "id": "67c73d885c257d0ebd936a60"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67c73d885c257d0ebd936a61",
        "createdAt": "2025-03-04T17:51:29.513Z",
        "updatedAt": "2025-03-04T17:51:29.513Z",
        "id": "67c73d885c257d0ebd936a61"
      }
    ],
    "createdAt": "2025-03-04T17:51:04.970Z",
    "updatedAt": "2025-03-04T17:51:29.513Z",
    "id": "QJ2OyvZSA"
  },
  {
    "_id": "zD23oPCIV",
    "name": "log scale frequencies copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67c73f9b5c257d0ebd936a63",
          "67c73f9b5c257d0ebd936a64",
          "67c73f9b5c257d0ebd936a65"
        ],
        "fileType": "folder",
        "_id": "67c73f9b5c257d0ebd936a62",
        "createdAt": "2025-03-04T18:02:14.496Z",
        "updatedAt": "2025-03-04T18:02:14.496Z",
        "id": "67c73f9b5c257d0ebd936a62"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://unpkg.com/tone@15.0.4/build/Tone.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67c73f9b5c257d0ebd936a63",
        "createdAt": "2025-03-04T18:02:14.496Z",
        "updatedAt": "2025-03-04T18:02:14.496Z",
        "id": "67c73f9b5c257d0ebd936a63"
      },
      {
        "name": "sketch.js",
        "content": "// The Code of Music\n// NYU ITP/IMA Fall 2024\n// Luisa Pereira\n\n// Starter code for the Melody chapter\n\n// Create a Synth instrument, which can play specific frequencies\nconst synth = new Tone.Synth();\nsynth.toDestination();\n\nlet min = 80;\nconst turns = 3;\nlet max = min * turns;\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(0);\n}\n\nfunction mousePressed() {\n  let freq = random(min,max);\n  let velocity = mouseX / width;\n  // Trigger (play) a 100Hz tone\n  synth.triggerAttack(freq, velocity);\n}\n\nfunction mouseReleased() {\n  // Release (stop playing) the tone\n  synth.triggerRelease();\n}\n\n// Create p5.js' setup function - this is just to make sure p5.js is initialized\n// and the event handlers we defined above (mousePressed, mouseReleased) are called\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67c73f9b5c257d0ebd936a64",
        "createdAt": "2025-03-04T18:02:14.496Z",
        "updatedAt": "2025-03-04T18:02:14.496Z",
        "id": "67c73f9b5c257d0ebd936a64"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67c73f9b5c257d0ebd936a65",
        "createdAt": "2025-03-04T18:02:14.496Z",
        "updatedAt": "2025-03-04T18:02:14.496Z",
        "id": "67c73f9b5c257d0ebd936a65"
      }
    ],
    "createdAt": "2025-03-04T17:59:55.457Z",
    "updatedAt": "2025-03-04T18:02:14.496Z",
    "id": "zD23oPCIV"
  },
  {
    "_id": "AddH7R3Sz",
    "name": "Loop Launcher - OO COPY",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67992c86f3e97c49240aab9d",
          "67992c86f3e97c49240aab9e",
          "67992c86f3e97c49240aab9f",
          "67992c86f3e97c49240aaba9",
          "67992c86f3e97c49240aabaa"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67992c86f3e97c49240aab9c",
        "createdAt": "2025-02-01T19:07:40.364Z",
        "updatedAt": "2025-02-01T19:07:40.364Z",
        "id": "67992c86f3e97c49240aab9c"
      },
      {
        "name": "sketch.js",
        "content": "let trackNames = [\"Drums\", \"Bass\", \"Chords\"];\nlet shapeTypes = [\"square\", \"triangle\"]; // Assign shapes to tracks\nlet loops = [];\nlet visualizers = [];\nlet n = 2; // Number of alternative loops per track\nlet assignedKeys = ['1', '8', '2', '9', '3', '0']; // Define keys for loops\nlet recorder;\nlet player;\nlet isRecording = false;\nlet angle = 0;\nlet cval = 0;\nlet direction = 1;\n\nfunction setup() {  \n  createCanvas(windowWidth,windowHeight);  \n  loadLoops();\n      // Start audio context\n    Tone.start();\n    \n    // Create recorder\n    recorder = new Tone.Recorder();\n    \n    // Connect microphone to recorder\n    const mic = new Tone.UserMedia();\n    mic.open().then(() => {\n        mic.connect(recorder);\n        console.log('Microphone ready');\n    }).catch(e => {\n        console.log('Error opening microphone:', e);\n    });\n}\n\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n}\n\nfunction draw(){\n  // blendMode(BLEND);\n  background(100);\n  // blendMode(DIFFERENCE);\n  \n  for (let vis of visualizers) {\n    vis.update();\n    vis.display();\n  }\n//   let c1 = color(cval, 0, 255 - cval);\n//   let c2 = color(255 - cval, 0, cval);\n\n//   // Update color over time\n//   // Update cval smoothly between 0 and 255\n\n//   cval += direction;\n//   if (cval >= 255 || cval <= 0) {\n//     direction *= -1; // Reverse direction when hitting limits\n//   }\n\n//   let minDimension = min(width, height);\n//   let spacing = minDimension / 8;\n//   let x = width / 2;\n//   let y = height / 2;\n//   let amount1 = sin(angle) / 2 + 0.6;\n//   let amount2 = cos(angle) / 2 + 0.6;\n\n//   let thickness = (minDimension / 20);\n//   strokeWeight(thickness);\n\n//   push();\n//   stroke(255 - cval, 0, cval);\n//   fill(cval, 255 - cval, 0);\n//   translate(x, y); // rotate about center of canvas\n//   rectMode(CENTER); // rotate square around its center point\n//   rotate(angle); // clockwise\n//   rect(0, 0, spacing * 3, spacing * 3);\n//   pop();\n\n//   // push();\n//   // translate(x, y); // rotate about center of canvas\n//   // rectMode(CENTER);\n//   // stroke(255 - cval, 0, cval);\n//   // fill(cval, 255 - cval, 0);\n//   // // stroke(cval, 0, 255 - cval);\n//   // // fill(255 - cval, 0, cval);\n//   // rotate(-angle); // counterclockwise\n//   // rect(0, 0, spacing * 3 * amount2, spacing * 3 * amount2);\n//   // pop();\n\n//   // angle += 0.03; // set speed of rotation\n}\n\nfunction loadLoops() {  \n  Tone.Transport.bpm.value = 122;\n  let keyIndex = 0;\n\n  for (let i = 0; i < trackNames.length; i++) {    \n    let x = 100;\n    let y = i * 100 + 50;\n    let shapeType = shapeTypes[i];\n    let visualizer = new TrackVisualizer(x, y, shapeType);\n    visualizers.push(visualizer);\n\n    loops[i] = [];\n    for (let j = 0; j < n; j++) {\n      let name = trackNames[i] + \" \" + j;\n      let key = assignedKeys[keyIndex % assignedKeys.length];\n      keyIndex++;\n      loops[i][j] = new Loop(\"loops/\" + trackNames[i] + j + \".mp3\", i, j, name, key, visualizer);\n    }\n\n    for (let j = 0; j < n; j++) {\n      for (let k = 0; k < n; k++) {\n        if (j !== k) {\n          loops[i][j].siblings.push(loops[i][k]);\n        }\n      }\n    }\n  }\n}\n\n\nfunction keyPressed() {\n  for (let i = 0; i < loops.length; i++) {\n    for (let j = 0; j < loops[i].length; j++) {\n      if (key.toUpperCase() === loops[i][j].key) {\n        loops[i][j].toggle();\n      }\n    }\n  }\n  \n   if (keyCode === 32) { // Space key\n        if (!isRecording) {\n            // Start recording\n            recorder.start();\n            isRecording = true;\n            console.log('Recording started');\n        } else {\n            // Stop recording and play back\n            isRecording = false;\n            console.log('Recording stopped');\n            \n            recorder.stop().then(recording => {\n                // Create a new blob URL from the recording\n                const url = URL.createObjectURL(recording);\n                \n                // If there's an existing player, stop and dispose of it\n                if (player) {\n                    player.stop();\n                    player.dispose();\n                }\n                \n                // Create a new player with the recording\n                player = new Tone.Player({\n                    url: url,\n                    loop: true,\n                    autostart: true\n                }).toDestination();\n                \n            });\n        }\n    }\n}\n\nTone.loaded().then(() => console.log('Loops Loaded'));\n\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67992c86f3e97c49240aaba9",
        "createdAt": "2025-02-01T19:07:40.364Z",
        "updatedAt": "2025-02-01T19:07:40.364Z",
        "id": "67992c86f3e97c49240aaba9"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://unpkg.com/tone@15.0.4/build/Tone.js\"></script>\n    <script src=\"loop.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67992c86f3e97c49240aab9d",
        "createdAt": "2025-02-01T19:07:40.364Z",
        "updatedAt": "2025-02-01T19:07:40.364Z",
        "id": "67992c86f3e97c49240aab9d"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67992c86f3e97c49240aabaa",
        "createdAt": "2025-02-01T19:07:40.364Z",
        "updatedAt": "2025-02-01T19:07:40.364Z",
        "id": "67992c86f3e97c49240aabaa"
      },
      {
        "name": "loops",
        "content": "",
        "children": [
          "67992c86f3e97c49240aaba0",
          "67992c86f3e97c49240aaba1",
          "67992c86f3e97c49240aaba2",
          "67992c86f3e97c49240aaba3",
          "67992c86f3e97c49240aaba4",
          "67992c86f3e97c49240aaba5",
          "67992c86f3e97c49240aaba6",
          "67992c86f3e97c49240aaba7"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67992c86f3e97c49240aab9f",
        "createdAt": "2025-02-01T19:07:40.364Z",
        "updatedAt": "2025-02-01T19:07:40.364Z",
        "id": "67992c86f3e97c49240aab9f"
      },
      {
        "name": "Chords0.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/902889df-1e3e-4259-ad95-9a4e4608ed71.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67992c86f3e97c49240aaba2",
        "createdAt": "2025-02-01T19:07:40.364Z",
        "updatedAt": "2025-02-01T19:07:40.364Z",
        "id": "67992c86f3e97c49240aaba2"
      },
      {
        "name": "Bass0.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/f03749b8-3e34-4d20-9b22-46b1141b8278.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67992c86f3e97c49240aaba0",
        "createdAt": "2025-02-01T19:07:40.364Z",
        "updatedAt": "2025-02-01T19:07:40.364Z",
        "id": "67992c86f3e97c49240aaba0"
      },
      {
        "name": "Bass1.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/d59a9cea-0b2d-45da-be6a-0bf1c9916bf4.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67992c86f3e97c49240aaba1",
        "createdAt": "2025-02-01T19:07:40.364Z",
        "updatedAt": "2025-02-01T19:07:40.364Z",
        "id": "67992c86f3e97c49240aaba1"
      },
      {
        "name": "Chords1.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/b4c18ffd-cd4b-49f4-8711-526f635ba416.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67992c86f3e97c49240aaba3",
        "createdAt": "2025-02-01T19:07:40.364Z",
        "updatedAt": "2025-02-01T19:07:40.364Z",
        "id": "67992c86f3e97c49240aaba3"
      },
      {
        "name": "Chords2.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/b59e1cff-c560-426d-9767-be72bed9c4b3.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67992c86f3e97c49240aaba4",
        "createdAt": "2025-02-01T19:07:40.364Z",
        "updatedAt": "2025-02-01T19:07:40.364Z",
        "id": "67992c86f3e97c49240aaba4"
      },
      {
        "name": "Drums0.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/2ed39329-19c1-468c-ac2f-ce0307c6b8bd.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67992c86f3e97c49240aaba5",
        "createdAt": "2025-02-01T19:07:40.364Z",
        "updatedAt": "2025-02-01T19:07:40.364Z",
        "id": "67992c86f3e97c49240aaba5"
      },
      {
        "name": "Drums1.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/3615a583-0245-4191-b54c-8f2e74fd4573.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67992c86f3e97c49240aaba6",
        "createdAt": "2025-02-01T19:07:40.364Z",
        "updatedAt": "2025-02-01T19:07:40.364Z",
        "id": "67992c86f3e97c49240aaba6"
      },
      {
        "name": "Melody0.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/11574957-f543-4700-8552-b31c534f3c85.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67992c86f3e97c49240aaba7",
        "createdAt": "2025-02-01T19:07:40.364Z",
        "updatedAt": "2025-02-01T19:07:40.364Z",
        "id": "67992c86f3e97c49240aaba7"
      },
      {
        "name": "loop.js",
        "content": "class Loop {\n  constructor(url, trackIndex, loopIndex, name, key, parentVisualizer) {\n    this.player = new Tone.Player({\n      url: url,\n      loop: true\n    });\n    this.player.toDestination();\n    this.quantize = \"@1m\";\n    this.siblings = [];\n    this.key = key;  // Assigned key\n    this.parentVisualizer = parentVisualizer; // Reference to visualizer\n  }\n\n  toggle() {\n    if (Tone.Transport.state != \"started\") {\n      Tone.start();\n      Tone.Transport.start();\n    }\n    if (this.player.state == \"started\") {\n      this.scheduleStop();\n    } else {\n      this.scheduleStart();\n    }\n  }\n\n  start() {\n    this.parentVisualizer.activeLoop = this; // Update visualizer\n  }\n\n  stop() {\n    if (this.parentVisualizer.activeLoop === this) {\n      this.parentVisualizer.activeLoop = null; // Reset if stopped\n    }\n  }\n\n  scheduleStart() {\n    this.player.start(this.quantize);\n    for (const sibling of this.siblings) {\n      if (sibling.player.state == 'started') {\n        sibling.scheduleStop();\n      }\n    }\n    this.start();\n  }\n\n  scheduleStop() {\n    this.player.stop(this.quantize);\n    this.stop();\n  }\n}\n\nclass TrackVisualizer {\n  constructor(x, y, shapeType) {\n    this.x = x;\n    this.y = y;\n    this.shapeType = shapeType;\n    this.activeLoop = null; // Tracks which loop is active\n    this.angle = 0;\n    this.size = 40;\n  }\n\n  update() {\n    if (this.activeLoop) {\n      if (this.shapeType === \"square\") {\n        this.angle += 0.05; // Rotate\n      } else if (this.shapeType === \"triangle\") {\n        this.size = lerp(this.size, 60, 0.1); // Grow\n      }\n    } else {\n      if (this.shapeType === \"triangle\") {\n        this.size = lerp(this.size, 40, 0.1); // Shrink back\n      }\n    }\n  }\n\n  display() {\n    push();\n    translate(this.x, this.y);\n    if (this.shapeType === \"square\") {\n      rotate(this.angle);\n      rectMode(CENTER);\n      fill(this.activeLoop ? 'black' : 'white');\n      stroke(0);\n      rect(0, 0, 50, 50);\n    } else if (this.shapeType === \"triangle\") {\n      fill(this.activeLoop ? 'red' : 'white');\n      stroke(0);\n      triangle(-this.size / 2, this.size / 2, \n                this.size / 2, this.size / 2, \n                0, -this.size / 2);\n    }\n    pop();\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67992c86f3e97c49240aab9e",
        "createdAt": "2025-02-01T19:07:40.364Z",
        "updatedAt": "2025-02-01T19:07:40.364Z",
        "id": "67992c86f3e97c49240aab9e"
      }
    ],
    "createdAt": "2025-01-28T19:14:14.778Z",
    "updatedAt": "2025-02-01T19:07:40.364Z",
    "id": "AddH7R3Sz"
  },
  {
    "_id": "AzyCrVVwi",
    "name": "Loops starter COPY",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "679927a6490ddd73a5f0161d",
          "679927a6490ddd73a5f0161e",
          "679927a6490ddd73a5f01628",
          "679927a6490ddd73a5f01629"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "679927a6490ddd73a5f0161c",
        "createdAt": "2025-01-28T18:56:41.868Z",
        "updatedAt": "2025-01-28T18:56:41.868Z",
        "id": "679927a6490ddd73a5f0161c"
      },
      {
        "name": "sketch.js",
        "content": "let loaded = false;\n\nconst bass = new Tone.Player({\n  url: \"loops/Bass0.mp3\",\n  loop: true,\n}).toDestination();\n\nconst chord = new Tone.Player({\n  url: \"loops/Chords0.mp3\",\n  loop: true,\n}).toDestination();\n\nconst drums = new Tone.Player({\n  url: \"loops/Drums0.mp3\",\n  loop: true,\n}).toDestination();\n\nconst melody = new Tone.Player({\n  url: \"loops/Melody0.mp3\",\n  loop: true,\n}).toDestination();\n\nfunction setup() {\n  noCanvas();\n}\n\nfunction keyTyped() {\n  if (loaded) {\n    const now = Tone.now();\n    const d = bass._buffer.duration;\n\n    //     bass.start(now);\n    //     chord.start(now + d/2);\n    //     drums.start(now + d);\n    //     melody.start(now + 3*d/2);\n\n    if (key === \"a\" && bass.state === \"stopped\") {\n      bass.start(now);\n    } else if (key === \"a\" && bass.state === \"started\") {\n      bass.stop();\n    } else if (key === \"s\" && chord.state === \"stopped\") {\n      chord.start(now + d/2);\n    } else if (key === \"s\" && chord.state === \"started\") {\n      chord.stop();\n    } else if (key === \"d\" && drums.state === \"stopped\") {\n      drums.start(now + d);\n    } else if (key === \"d\" && drums.state === \"started\") {\n      drums.stop();\n    } else if (key === \"f\" && melody.state === \"stopped\") {\n      melody.start(now + (3 * d) / 2);\n    } else if (key === \"f\" && melody.state === \"started\") {\n      melody.stop();\n    }\n  }\n}\n\nfunction draw() {\n  // not drawing anything for now\n}\n\nTone.loaded().then(function () {\n  loaded = true;\n});\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "679927a6490ddd73a5f01628",
        "createdAt": "2025-01-28T18:56:41.868Z",
        "updatedAt": "2025-01-28T18:56:41.868Z",
        "id": "679927a6490ddd73a5f01628"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/tone/14.8.9/Tone.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679927a6490ddd73a5f0161d",
        "createdAt": "2025-01-28T18:56:41.868Z",
        "updatedAt": "2025-01-28T18:56:41.868Z",
        "id": "679927a6490ddd73a5f0161d"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679927a6490ddd73a5f01629",
        "createdAt": "2025-01-28T18:56:41.868Z",
        "updatedAt": "2025-01-28T18:56:41.868Z",
        "id": "679927a6490ddd73a5f01629"
      },
      {
        "name": "loops",
        "content": "",
        "children": [
          "679927a6490ddd73a5f0161f",
          "679927a6490ddd73a5f01620",
          "679927a6490ddd73a5f01621",
          "679927a6490ddd73a5f01622",
          "679927a6490ddd73a5f01623",
          "679927a6490ddd73a5f01624",
          "679927a6490ddd73a5f01625",
          "679927a6490ddd73a5f01626",
          "679927a6490ddd73a5f01627"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "679927a6490ddd73a5f0161e",
        "createdAt": "2025-01-28T18:56:41.868Z",
        "updatedAt": "2025-01-28T18:56:41.868Z",
        "id": "679927a6490ddd73a5f0161e"
      },
      {
        "name": "Chords0.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/1edab3d2-4a7a-43e6-b853-d180ebccb162.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679927a6490ddd73a5f01621",
        "createdAt": "2025-01-28T18:56:41.868Z",
        "updatedAt": "2025-01-28T18:56:41.868Z",
        "id": "679927a6490ddd73a5f01621"
      },
      {
        "name": "Bass0.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/1298d67b-2385-4612-a0dc-9fcf81a31f38.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679927a6490ddd73a5f0161f",
        "createdAt": "2025-01-28T18:56:41.868Z",
        "updatedAt": "2025-01-28T18:56:41.868Z",
        "id": "679927a6490ddd73a5f0161f"
      },
      {
        "name": "Bass1.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/633575ce-e7a5-4fe1-a167-f5ce0a1f6336.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679927a6490ddd73a5f01620",
        "createdAt": "2025-01-28T18:56:41.868Z",
        "updatedAt": "2025-01-28T18:56:41.868Z",
        "id": "679927a6490ddd73a5f01620"
      },
      {
        "name": "Chords1.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/02e51386-1b1e-401a-8054-cadd2a1d3a4c.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679927a6490ddd73a5f01622",
        "createdAt": "2025-01-28T18:56:41.868Z",
        "updatedAt": "2025-01-28T18:56:41.868Z",
        "id": "679927a6490ddd73a5f01622"
      },
      {
        "name": "Chords2.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/b6692ad6-97a8-4663-9b11-256553ed2da2.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679927a6490ddd73a5f01623",
        "createdAt": "2025-01-28T18:56:41.868Z",
        "updatedAt": "2025-01-28T18:56:41.868Z",
        "id": "679927a6490ddd73a5f01623"
      },
      {
        "name": "Drums0.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/223c45f1-b415-4228-b8dd-a37d70a0346b.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679927a6490ddd73a5f01624",
        "createdAt": "2025-01-28T18:56:41.868Z",
        "updatedAt": "2025-01-28T18:56:41.868Z",
        "id": "679927a6490ddd73a5f01624"
      },
      {
        "name": "Drums1.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/7ea82e26-7659-442c-9609-2087c80e6e56.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679927a6490ddd73a5f01625",
        "createdAt": "2025-01-28T18:56:41.868Z",
        "updatedAt": "2025-01-28T18:56:41.868Z",
        "id": "679927a6490ddd73a5f01625"
      },
      {
        "name": "Melody0.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/fd53cd73-9858-4bae-96ad-fffa99affba5.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679927a6490ddd73a5f01626",
        "createdAt": "2025-01-28T18:56:41.868Z",
        "updatedAt": "2025-01-28T18:56:41.868Z",
        "id": "679927a6490ddd73a5f01626"
      },
      {
        "name": "Melody1.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/6b737f99-6951-432d-baab-334c821945d6.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679927a6490ddd73a5f01627",
        "createdAt": "2025-01-28T18:56:41.868Z",
        "updatedAt": "2025-01-28T18:56:41.868Z",
        "id": "679927a6490ddd73a5f01627"
      }
    ],
    "createdAt": "2025-01-28T18:53:27.265Z",
    "updatedAt": "2025-01-28T18:56:41.868Z",
    "id": "AzyCrVVwi"
  },
  {
    "_id": "3su_nmR8i",
    "name": "Loops starter midpoint 5 COPY",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6799298ff4fa44592cd70132",
          "6799298ff4fa44592cd70133",
          "6799298ff4fa44592cd7013d",
          "6799298ff4fa44592cd7013e"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6799298ff4fa44592cd70131",
        "createdAt": "2025-01-28T19:12:53.170Z",
        "updatedAt": "2025-01-28T19:12:53.170Z",
        "id": "6799298ff4fa44592cd70131"
      },
      {
        "name": "sketch.js",
        "content": "let loaded = false;\nconst bass = new Tone.Player({\n          url: \"loops/Bass0.mp3\",\n          loop: true\n        });\nbass.toDestination();\n\nconst chords = new Tone.Player({\n          url: \"loops/Chords0.mp3\",\n          loop: true\n        });\nchords.toDestination();\n\nconst melody = new Tone.Player({\n          url: \"loops/Melody0.mp3\",\n          loop: true\n        });\nmelody.toDestination();\n\nconst drums = new Tone.Player({\n          url: \"loops/Drums0.mp3\",\n          loop: true\n        });\ndrums.toDestination();\n\nfunction setup() {  \n  noCanvas();\n\n}\n\nfunction draw() {\n  // not drawing anything for now\n  \n  \n}\n\nfunction keyTyped(){\n  if(loaded){\n    if(Tone.Transport.state == \"stopped\"){\n      Tone.Transport.bpm.value = 121.80;\n      Tone.Transport.start();\n    }\n    \n    let quantizeResolution = \"@4n\"\n  \n    if(key == 'a'){\n      if(drums.state == \"started\"){\n        drums.stop();  \n      } else{\n        // start aligned with the next 'measure' subdivision\n        drums.start(quantizeResolution);\n      }\n    }\n    else if (key == 's'){\n      if(chords.state == \"started\"){\n        chords.stop();  \n      } else{\n        chords.start(quantizeResolution);\n      }\n    }\n    else if (key == 'd'){\n      if(melody.state == \"started\"){\n        melody.stop();  \n      } else{\n        melody.start(quantizeResolution);\n      }\n    }\n    else if (key == 'f'){\n      if(bass.state == \"started\"){\n        bass.stop();  \n      } else{\n        bass.start(quantizeResolution);\n      }\n    }\n  }\n}\n\nTone.loaded().then(function(){  \n  loaded = true;\n});\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6799298ff4fa44592cd7013d",
        "createdAt": "2025-01-28T19:12:53.170Z",
        "updatedAt": "2025-01-28T19:12:53.170Z",
        "id": "6799298ff4fa44592cd7013d"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://unpkg.com/tone@15.0.4/build/Tone.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6799298ff4fa44592cd70132",
        "createdAt": "2025-01-28T19:12:53.170Z",
        "updatedAt": "2025-01-28T19:12:53.170Z",
        "id": "6799298ff4fa44592cd70132"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6799298ff4fa44592cd7013e",
        "createdAt": "2025-01-28T19:12:53.170Z",
        "updatedAt": "2025-01-28T19:12:53.170Z",
        "id": "6799298ff4fa44592cd7013e"
      },
      {
        "name": "loops",
        "content": "",
        "children": [
          "6799298ff4fa44592cd70134",
          "6799298ff4fa44592cd70135",
          "6799298ff4fa44592cd70136",
          "6799298ff4fa44592cd70137",
          "6799298ff4fa44592cd70138",
          "6799298ff4fa44592cd70139",
          "6799298ff4fa44592cd7013a",
          "6799298ff4fa44592cd7013b",
          "6799298ff4fa44592cd7013c"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6799298ff4fa44592cd70133",
        "createdAt": "2025-01-28T19:12:53.170Z",
        "updatedAt": "2025-01-28T19:12:53.170Z",
        "id": "6799298ff4fa44592cd70133"
      },
      {
        "name": "Chords0.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/a6cd3d76-2c3f-4ba5-a698-b1ed9d0648bf.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6799298ff4fa44592cd70136",
        "createdAt": "2025-01-28T19:12:53.170Z",
        "updatedAt": "2025-01-28T19:12:53.170Z",
        "id": "6799298ff4fa44592cd70136"
      },
      {
        "name": "Bass0.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/e3ca8a02-cb4b-4b88-be8f-e61ba64dd361.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6799298ff4fa44592cd70134",
        "createdAt": "2025-01-28T19:12:53.170Z",
        "updatedAt": "2025-01-28T19:12:53.170Z",
        "id": "6799298ff4fa44592cd70134"
      },
      {
        "name": "Bass1.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/9eab8cd4-adb6-4882-bf41-f4ae22268d1e.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6799298ff4fa44592cd70135",
        "createdAt": "2025-01-28T19:12:53.170Z",
        "updatedAt": "2025-01-28T19:12:53.170Z",
        "id": "6799298ff4fa44592cd70135"
      },
      {
        "name": "Chords1.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/a9ee2b85-df4c-4e3d-9c64-cae816fb75b4.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6799298ff4fa44592cd70137",
        "createdAt": "2025-01-28T19:12:53.170Z",
        "updatedAt": "2025-01-28T19:12:53.170Z",
        "id": "6799298ff4fa44592cd70137"
      },
      {
        "name": "Chords2.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/608ab8f9-c2b9-4de3-9c1a-fef99f17cf2d.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6799298ff4fa44592cd70138",
        "createdAt": "2025-01-28T19:12:53.170Z",
        "updatedAt": "2025-01-28T19:12:53.170Z",
        "id": "6799298ff4fa44592cd70138"
      },
      {
        "name": "Drums0.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/949b802f-9d1e-4ea0-89be-82bbd6f928bc.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6799298ff4fa44592cd70139",
        "createdAt": "2025-01-28T19:12:53.170Z",
        "updatedAt": "2025-01-28T19:12:53.170Z",
        "id": "6799298ff4fa44592cd70139"
      },
      {
        "name": "Drums1.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/a5976a1a-95c7-40ce-bc6d-ace24404cdce.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6799298ff4fa44592cd7013a",
        "createdAt": "2025-01-28T19:12:53.170Z",
        "updatedAt": "2025-01-28T19:12:53.170Z",
        "id": "6799298ff4fa44592cd7013a"
      },
      {
        "name": "Melody0.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/fc5ae0bf-83a2-4caa-9846-909181ff9e16.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6799298ff4fa44592cd7013b",
        "createdAt": "2025-01-28T19:12:53.170Z",
        "updatedAt": "2025-01-28T19:12:53.170Z",
        "id": "6799298ff4fa44592cd7013b"
      },
      {
        "name": "Melody1.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/9a313e75-c911-4755-9489-6c40a48cdce9.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6799298ff4fa44592cd7013c",
        "createdAt": "2025-01-28T19:12:53.170Z",
        "updatedAt": "2025-01-28T19:12:53.170Z",
        "id": "6799298ff4fa44592cd7013c"
      }
    ],
    "createdAt": "2025-01-28T19:01:36.329Z",
    "updatedAt": "2025-01-28T19:12:53.170Z",
    "id": "3su_nmR8i"
  },
  {
    "_id": "d3LhfYCKx",
    "name": "loopVisualizer",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "678ff3bc249ce01410a08b4b",
          "67952c200423e270175f6a93",
          "67952c2b0423e270175f6b91",
          "67952c33a7d1766767885a48",
          "67952c240423e270175f6ad5",
          "678ff3bc249ce01410a08b4c",
          "67952c27a7d176676788597c",
          "678ff3bc249ce01410a08b4d",
          "678ff3bc249ce01410a08b50"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "678ff3bc249ce01410a08b4a",
        "createdAt": "2025-02-01T18:30:30.653Z",
        "updatedAt": "2025-02-01T18:30:30.653Z",
        "id": "678ff3bc249ce01410a08b4a"
      },
      {
        "name": "sketch.js",
        "content": "// reference materials:\n\n// https://editor.p5js.org/jesse_harding/sketches/0szF7gcAx\n// https://p5js.org/reference/p5/lerpColor/\n// https://editor.p5js.org/evebdn/sketches/O9G35ueZv\n// https://editor.p5js.org/luisa_NYU/sketches/jnextrr-a\n// https://tonejs.github.io/docs/15.0.4/classes/Player.html\n\nconst beat = new SimplePlayer(\"beat.mp3\").toDestination();\nlet analyzer = new Tone.Waveform(4096);\nbeat.connect(analyzer);\nconst dark = new SimplePlayer(\"dark.mp3\").toDestination();\nconst pluck = new SimplePlayer(\"pluck.mp3\").toDestination();\nconst breeze = new SimplePlayer(\"breeze.mp3\").toDestination();\nconst comp = new SimplePlayer(\"comp.mp3\").toDestination();\n\nlet stars = [];\nlet numStars = 400;\n\nlet c1, c2, c3, c4, moveX;\n\nlet loaded = false;\n\nfunction setup() {\n  createCanvas(600, 600);\n  makeStars();\n}\n\nfunction draw() {\n  if (loaded) {\n    if (dark.state === \"started\") {\n      c1 = color(0);\n      c2 = color(\"#b50523\");\n\n      for (let y = 0; y < height; y++) {\n        n = map(y, 0, height, 0, 1);\n        bg = lerpColor(c1, c2, n);\n        stroke(bg);\n        line(0, y, width, y);\n      }\n    } else if (dark.state === \"stopped\") {\n      background(0);\n    } else {\n      background(0);\n    }\n\n    showStars();\n\n    let waveform = analyzer.getValue();\n\n    fill(\"#3D27DE\");\n    stroke(0);\n    strokeWeight(2);\n    beginShape();\n    vertex(0, height / 2);\n    for (let i = 0; i < waveform.length; i++) {\n      let x = map(i, 0, waveform.length, 0, width + 10);\n      let y = map(waveform[i], -1, 1, height * 2, 0);\n      vertex(x, y);\n    }\n    vertex(width, height);\n    vertex(0, height);\n    endShape();\n  } else {\n    background(0);\n    fill(255);\n    text(\"loading...\", 20, 20);\n  }\n}\n\nfunction keyTyped() {\n  if (loaded) {\n    if (key === \"1\" && beat.state === \"stopped\") {\n      beat.start();\n      // beat.loop = true;\n    } else if (key === \"1\" && beat.state === \"started\") {\n      beat.stop();\n    } else if (key === \"2\" && dark.state === \"stopped\") {\n      dark.start();\n      // dark.loop = true;\n    } else if (key === \"2\" && dark.state === \"started\") {\n      dark.stop();\n    } else if (key === \"3\" && pluck.state === \"stopped\") {\n      pluck.start();\n      // pluck.loop = true;\n    } else if (key === \"3\" && pluck.state === \"started\") {\n      pluck.stop();\n    } else if (key === \"4\" && breeze.state === \"stopped\") {\n      breeze.start();\n      // breeze.loop = true;\n      makeStars();\n    } else if (key === \"4\" && breeze.state === \"started\") {\n      breeze.stop();\n    }\n  }\n}\n\nTone.loaded().then(function () {\n  loaded = true;\n});\n\nfunction makeStars() {\n  for (let i = 0; i < numStars; i++) {\n    stars[i] = createVector(random(width), random(height), random(1, 6));\n  }\n}\n\nfunction showStars() {\n  for (let i = 0; i < numStars; i++) {\n    if (breeze.state === \"started\") {\n      // 110-114 w/ assistance from chatGPT (moving stars & regeneration)\n\n      stars[i].x += stars[i].z * 0.5; // Speed based on star size (z)\n      // Wrap stars when they move off the canvas\n      if (stars[i].x > width) {\n        stars[i].x = 0;\n        stars[i].y = random(height);\n      }\n    }\n\n    if (pluck.state === \"started\") {\n      c3 = color(\"#3D27DE\");\n      c4 = color(200);\n      let randC = lerpColor(c3, c4, random(0, 1));\n      stroke(0);\n      strokeWeight(1);\n      fill(randC);\n    } else {\n      stroke(0);\n      strokeWeight(1);\n      fill(\"#3D27DE\");\n    }\n    ellipse(stars[i].x, stars[i].y, stars[i].z, stars[i].z);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "678ff3bc249ce01410a08b4d",
        "createdAt": "2025-02-01T18:30:30.653Z",
        "updatedAt": "2025-02-01T18:30:30.653Z",
        "id": "678ff3bc249ce01410a08b4d"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.1/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.1/addons/p5.dom.min.js\"></script>\n    <script src=\"https://unpkg.com/tone@15.0.4/build/Tone.js\"></script>\n    <script src=\"SimplePlayer.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "678ff3bc249ce01410a08b4c",
        "createdAt": "2025-02-01T18:30:30.653Z",
        "updatedAt": "2025-02-01T18:30:30.653Z",
        "id": "678ff3bc249ce01410a08b4c"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "678ff3bc249ce01410a08b50",
        "createdAt": "2025-02-01T18:30:30.653Z",
        "updatedAt": "2025-02-01T18:30:30.653Z",
        "id": "678ff3bc249ce01410a08b50"
      },
      {
        "name": "SimplePlayer.js",
        "content": "// a subclass of Tone.Player that adds a progress function to it.\n// The only permitted playbackRate is 1.\n\nclass SimplePlayer extends Tone.Player {\n  constructor(...args){\n    super(...args);\n    this.playbackRate = 1;\n  }\n  \n  start(...args){\n    // assuming args[0] is always time\n    this.startTime = args[0];\n    super.start(...args);\n  }\n  \n  progress(){\n    return (Tone.now() - this.startTime) / this._buffer.duration;\n  }\n  \n  // disable setting playbackRate to anything other than 1\n  set playbackRate(rate) {\n    if(rate != 1) throw new Error(\"Setting the playbackRate value to any value other than 1 is disabled in SimplePlayer. If required, use Tone.Player instead.\");\n  }\n}\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "678ff3bc249ce01410a08b4b",
        "createdAt": "2025-02-01T18:30:30.653Z",
        "updatedAt": "2025-02-01T18:30:30.653Z",
        "id": "678ff3bc249ce01410a08b4b"
      },
      {
        "name": "beat.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/b526a7bc-3cb3-4eb7-a552-9c57323ff0a7.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67952c200423e270175f6a93",
        "createdAt": "2025-02-01T18:30:30.653Z",
        "updatedAt": "2025-02-01T18:30:30.653Z",
        "id": "67952c200423e270175f6a93"
      },
      {
        "name": "dark.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/4103684e-a08f-424e-aa29-f24b6281f633.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67952c240423e270175f6ad5",
        "createdAt": "2025-02-01T18:30:30.653Z",
        "updatedAt": "2025-02-01T18:30:30.653Z",
        "id": "67952c240423e270175f6ad5"
      },
      {
        "name": "pluck.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/27ddf920-00a9-4953-a591-943dd8241589.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67952c27a7d176676788597c",
        "createdAt": "2025-02-01T18:30:30.653Z",
        "updatedAt": "2025-02-01T18:30:30.653Z",
        "id": "67952c27a7d176676788597c"
      },
      {
        "name": "breeze.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/fdeffaf8-a54f-4bb5-9c5b-0704920d3f95.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67952c2b0423e270175f6b91",
        "createdAt": "2025-02-01T18:30:30.653Z",
        "updatedAt": "2025-02-01T18:30:30.653Z",
        "id": "67952c2b0423e270175f6b91"
      },
      {
        "name": "comp.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/cf4bd183-24ea-4093-9aff-3019d5b3d4fa.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67952c33a7d1766767885a48",
        "createdAt": "2025-02-01T18:30:30.653Z",
        "updatedAt": "2025-02-01T18:30:30.653Z",
        "id": "67952c33a7d1766767885a48"
      }
    ],
    "createdAt": "2025-01-21T19:21:33.410Z",
    "updatedAt": "2025-02-01T18:30:30.653Z",
    "id": "d3LhfYCKx"
  },
  {
    "_id": "XDdLP0mHx",
    "name": "mappedpot",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6705599d66d924270ca01137",
          "6705599d66d924270ca01136",
          "6705599d66d924270ca01138"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6705599d66d924270ca01139",
        "createdAt": "2024-10-13T20:38:34.824Z",
        "updatedAt": "2024-10-13T20:38:34.824Z",
        "id": "6705599d66d924270ca01139"
      },
      {
        "name": "sketch.js",
        "content": "// variable to hold an instance of the p5.webserial library:\nconst serial = new p5.WebSerial();\n\n// HTML button object:\nlet portButton;\nlet sensor1 = 0;\nlet sensor2 = 0;\n\nfunction setup() {\n  createCanvas(400, 400);\n  // check to see if serial is available:\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n  // if serial is available, add connect/disconnect listeners:\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n  // check for any ports that are available:\n  serial.getPorts();\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n}\n\nfunction draw() {\n  background(sensor1);\n  fill(sensor2);\n  rect(200, 200, 200, 200);\n}\n\n// if there's no port selected,\n// make a port select button appear:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n\n// make the port selector window appear:\nfunction choosePort() {\n  if (portButton) portButton.show();\n  serial.requestPort();\n}\n\n// open the selected port, and make the port\n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  serial.open().then(initiateSerial);\n\n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n    // serial.write(\"x\");\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n\n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n// read any incoming data as a string\n// (assumes a newline at the end of it):\n// callback function for incoming serial data:\nfunction serialEvent() {\n  // read from port until new line:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  if (inString != null) {\n    let list = split(trim(inString), \",\");\n    if (list.length > 1) {\n      // conver list items to floats:\n      sensor1 = float(list[0]);\n      sensor2 = float(list[1]);\n      console.log(sensor1 + \",\" + sensor2);\n      // send a byte to the microcontroller to get new data:\n      // serial.write(\"x\");\n    }\n  }\n}\n// try to connect if a new serial port\n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n\n// if a port is disconnected:\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n\nfunction closePort() {\n  serial.close();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6705599d66d924270ca01136",
        "createdAt": "2024-10-13T20:38:34.824Z",
        "updatedAt": "2024-10-13T20:38:34.824Z",
        "id": "6705599d66d924270ca01136"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6705599d66d924270ca01137",
        "createdAt": "2024-10-13T20:38:34.824Z",
        "updatedAt": "2024-10-13T20:38:34.824Z",
        "id": "6705599d66d924270ca01137"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6705599d66d924270ca01138",
        "createdAt": "2024-10-13T20:38:34.824Z",
        "updatedAt": "2024-10-13T20:38:34.824Z",
        "id": "6705599d66d924270ca01138"
      }
    ],
    "updatedAt": "2024-10-13T20:38:34.824Z",
    "createdAt": "2024-10-08T16:18:03.762Z",
    "id": "XDdLP0mHx"
  },
  {
    "_id": "Ia7-ejKm8",
    "name": "Meter COPY",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67ab9e3afcab2c9db47c6263",
          "67ab9e3afcab2c9db47c6264",
          "67ab9e3afcab2c9db47c6267",
          "67ab9e3afcab2c9db47c6268"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67ab9e3afcab2c9db47c6262",
        "createdAt": "2025-02-11T19:24:17.386Z",
        "updatedAt": "2025-02-11T19:24:17.386Z",
        "id": "67ab9e3afcab2c9db47c6262"
      },
      {
        "name": "sketch.js",
        "content": "// Create a Player object and load the \"kick.mp3\" file\nconst drum = new Tone.Player(\"samples/505/kick.mp3\");\n\n// Connect the player output to the computer's audio output\ndrum.toDestination();\n\n// Set the tempo to 120 beats per minute\nTone.Transport.bpm.value = 120;\n\n// Set the time signature to 4/4. \n// See documentation: https://github.com/Tonejs/Tone.js/wiki/Transport\nTone.Transport.timeSignature = [4, 4];\n\nTone.Transport.scheduleRepeat(playDrum, \"4n\");\n\nfunction playDrum(time){\n  drum.start(time);\n  console.log(Tone.Transport.position);\n  \n    // Take a look at the middle number printed on each line on the console. It corresponds to the current beat.\n  \n  // Changing the time signature to 3/4 or 4/4 does not change the sound\n  // But it changes the counting\n  // 4/4 means we count 0, 1, 2, 3 beats before going to the next measure\n  // 3/4 means we count 0, 1, 2 before going to the next measure\n  \n  // We can then use this counting to treat each beat in a measure differently\n  // Maybe we'll play the first beat of a measure louder (if beat == 0), \n  // Or maybe it will be an entirely different type of drum.\n  \n// We will do exactly that in the next couple of examples.\n  \n}\n\nTone.loaded().then(function(){\n  console.log('loaded');\n  Tone.Transport.start();\n}\n)\n\n// Interface: p5 functions\nfunction setup(){  \n  btn = createButton(\"play\");\n  btn.mousePressed(togglePlay);\n  btn.position(0, 0);\n}\n\nfunction togglePlay(){\n  if(Tone.Transport.state == \"started\"){\n    Tone.Transport.pause();\n    btn.html(\"play\");\n  }\n  else{\n    Tone.Transport.start();\n    btn.html(\"pause\");\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67ab9e3afcab2c9db47c6267",
        "createdAt": "2025-02-11T19:24:17.386Z",
        "updatedAt": "2025-02-11T19:24:17.386Z",
        "id": "67ab9e3afcab2c9db47c6267"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/tone/14.8.9/Tone.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ab9e3afcab2c9db47c6263",
        "createdAt": "2025-02-11T19:24:17.386Z",
        "updatedAt": "2025-02-11T19:24:17.386Z",
        "id": "67ab9e3afcab2c9db47c6263"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ab9e3afcab2c9db47c6268",
        "createdAt": "2025-02-11T19:24:17.386Z",
        "updatedAt": "2025-02-11T19:24:17.386Z",
        "id": "67ab9e3afcab2c9db47c6268"
      },
      {
        "name": "samples",
        "content": "",
        "children": [
          "67ab9e3afcab2c9db47c6265"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67ab9e3afcab2c9db47c6264",
        "createdAt": "2025-02-11T19:24:17.386Z",
        "updatedAt": "2025-02-11T19:24:17.386Z",
        "id": "67ab9e3afcab2c9db47c6264"
      },
      {
        "name": "505",
        "content": "",
        "children": [
          "67ab9e3afcab2c9db47c6266"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67ab9e3afcab2c9db47c6265",
        "createdAt": "2025-02-11T19:24:17.386Z",
        "updatedAt": "2025-02-11T19:24:17.386Z",
        "id": "67ab9e3afcab2c9db47c6265"
      },
      {
        "name": "kick.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/20aa7b76-6eae-4634-a5a9-991fd2734f46.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ab9e3afcab2c9db47c6266",
        "createdAt": "2025-02-11T19:24:17.386Z",
        "updatedAt": "2025-02-11T19:24:17.386Z",
        "id": "67ab9e3afcab2c9db47c6266"
      }
    ],
    "createdAt": "2025-02-11T19:00:10.786Z",
    "updatedAt": "2025-02-11T19:24:17.386Z",
    "id": "Ia7-ejKm8"
  },
  {
    "_id": "Rt-UcS3D3",
    "name": "mic-viz",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67cdbe1385a8455a29de3242",
          "67cdbe1385a8455a29de3243",
          "67cdbe1385a8455a29de3244"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67cdbe1385a8455a29de3241",
        "createdAt": "2025-03-10T14:44:41.693Z",
        "updatedAt": "2025-03-10T14:44:41.693Z",
        "id": "67cdbe1385a8455a29de3241"
      },
      {
        "name": "sketch.js",
        "content": "let recorder;\nlet player;\nlet isRecording = false;\nlet angle = 0;\nlet xpos, ypos;\nlet D = 0;\nlet R = 0.001;\nlet lastRecording = null;\nlet recordingWithEffects = null;\nlet isTestingEffects = true;\nlet processButton;\nlet isDragging = false;\n\n// Create a destination for clean recording\nconst cleanRecordingDest = new Tone.Gain();\n\n// Create effects chain\nconst filter = new Tone.Filter(400, \"lowpass\");\nconst feedbackDelay = new Tone.FeedbackDelay(D, 0.5);\nconst myReverb = new Tone.Reverb({\n  decay: R,\n  preDelay: 0.05,\n});\n\n// Create master gain to control volume\nconst masterGain = new Tone.Gain(0.7).toDestination();\nconst dryGain = new Tone.Gain(0.5);\nmic.connect(dryGain);\ndryGain.connect(masterGain);\n\nmyReverb.wet.value = 0.5;\nfeedbackDelay.wet.value = 0.5;\n\n// Connect the effects chain\nfilter.connect(feedbackDelay);\nfeedbackDelay.connect(myReverb);\nmyReverb.connect(masterGain);\n\nlet analyzer = new Tone.Waveform(2048);\nlet clearButton, exportButton, recordButton, loopButton;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  background(0);\n  rectMode(CENTER);\n  let minDimension = min(width, height);\n  let spacing = minDimension / 10;\n  let rectX = width / 2;\n  let rectY = height / 2;\n  let rectW = width / 1.5;\n  let rectH = height / 1.5;\n  xpos = rectX;\n  ypos = rectY;\n\n  // Initialize Tone.js\n  Tone.start();  // Ensure audio starts inside a user action\n\n  // Create recorder (connected to the clean recording destination)\n  recorder = new Tone.Recorder();\n  cleanRecordingDest.connect(recorder);\n\n  // Set up the microphone\n  const mic = new Tone.UserMedia();\n  mic\n    .open()\n    .then(() => {\n      // Connect mic to the clean recording destination\n      mic.connect(cleanRecordingDest);\n\n      // Connect mic to live monitoring through effects\n      mic.connect(filter);\n\n      // Connect to analyzer for visualization\n      myReverb.connect(analyzer);\n\n      console.log(\"Microphone ready\");\n    })\n    .catch((e) => {\n      console.error(\"Error opening microphone:\", e);\n      alert(\"Couldn't access your microphone. Please check permissions.\");\n    });\n\n  // // Set up the buttons\n  // const buttonSpacing = width / 6;\n  // const buttonY = spacing;\n\n  // Record Button\n  recordButton = createButton(\"Record\");\n\n  recordButton.mousePressed(myRecord);\n\n  // Loop/Test Button\n  loopButton = createButton(\"Testing Effects\");\n\n  loopButton.mousePressed(toggleTestMode);\n\n  // Process Button\n  processButton = createButton(\"Process with Effects\");\n\n  processButton.mousePressed(processRecordingWithEffects);\n\n  // Clear Button\n  clearButton = createButton(\"Clear\");\n\n  clearButton.mousePressed(clearRecording);\n\n  // Export Button\n  exportButton = createButton(\"Export\");\n\n  exportButton.mousePressed(exportRecording);\n\n  // Initially disable process and export buttons\n  processButton.attribute(\"disabled\", \"\");\n  exportButton.attribute(\"disabled\", \"\");\n\n  repositionButtons();\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n  background(0);\n  let minDimension = min(width, height);\n  let spacing = minDimension / 10;\n  let rectX = width / 2;\n  let rectY = height / 2;\n\n  // Only reset position if not dragging\n  if (!isDragging) {\n    xpos = rectX;\n    ypos = rectY;\n  }\n}\n\nfunction draw() {\n  blendMode(BLEND);\n  background(0, 50);\n\n  let minDimension = min(width, height);\n  let spacing = minDimension / 10;\n\n  let rectX = width / 2;\n  let rectY = height / 2;\n  let rectW = width / 1.5;\n  let rectH = height / 1.5;\n\n  // Draw movement bounds\n  noFill();\n  stroke(0, 0, 255);\n  rect(rectX, rectY, rectW, rectH);\n\n  // Constrain movement within the rectangle (only when dragging)\n  if (isDragging) {\n    xpos = constrain(mouseX, rectX - rectW / 2, rectX + rectW / 2);\n    ypos = constrain(mouseY, rectY - rectH / 2, rectY + rectH / 2);\n  }\n\n  // Update record button appearance\n  if (isRecording) {\n    recordButton.style(\"background\", \"red\");\n    recordButton.html(\"Stop\");\n  } else {\n    recordButton.style(\"background\", \"darkblue\");\n    recordButton.html(\"Record\");\n  }\n\n  // Map position to effect parameters\n  D = constrain(map(xpos, rectX - rectW / 2, rectX + rectW / 2, 0, 1), 0, 1);\n  R = constrain(\n    map(ypos, rectY - rectH / 2, rectY + rectH / 2, 20, 0.001),\n    0.001,\n    20\n  );\n\n  // Update effects\n  feedbackDelay.delayTime.value = D;\n  myReverb.decay = R;\n\n  // Display current effect values\n  fill(255);\n  noStroke();\n  textAlign(LEFT);\n  textSize(16);\n  text(`Delay: ${D.toFixed(2)}`, 20, height - 60);\n  text(`Reverb: ${R.toFixed(2)}`, 20, height - 30);\n\n  // Show mode status\n  textAlign(CENTER);\n  if (isTestingEffects) {\n    fill(0, 255, 0);\n    text(\"Test Mode: Adjust effects in real-time\", width / 2, height - 30);\n  } else if (recordingWithEffects) {\n    fill(255, 165, 0);\n    text(\n      \"Final Mode: Effects processed and ready to export\",\n      width / 2,\n      height - 30\n    );\n  }\n\n  // Draw the draggable control point\n  let controlPointSize = minDimension / 30;\n  let rev = color(map(D, 0, 1, 150, 0), 0, map(R, 0.001, 20, 150, 255));\n  let del = color(0, map(R, 0.001, 20, 255, 150), map(D, 0, 1, 150, 255));\n\n  // Check if mouse is over the control point for hover effect\n  let distToControl = dist(mouseX, mouseY, xpos, ypos);\n  let isHovering = distToControl < controlPointSize;\n\n  // Draw drag handle with hover effect\n  stroke(rev);\n  strokeWeight(2);\n  if (isHovering || isDragging) {\n    fill(255);\n    cursor(HAND);\n  } else {\n    fill(lerpColor(rev, del, 0.9));\n    cursor(ARROW);\n  }\n  ellipse(xpos, ypos, controlPointSize, controlPointSize);\n\n  push(); // Save the current transformation\n  translate(xpos, ypos);\n  rotate(angle);\n\n  myWaveform(1, rev);\n  myWaveform(1.5, del);\n  myWaveform(2.5, lerpColor(rev, del, 0.5));\n\n  pop(); // Restore the transformation\n\n  angle += 0.01;\n}\n\nfunction myWaveform(val, c) {\n  let minDimension = min(width, height);\n  let spacing = minDimension / 10;\n  let waveform = analyzer.getValue();\n  beginShape();\n  let points = floor(waveform.length / 50);\n  for (let i = 0; i < waveform.length; i += points) {\n    let phi = radians(map(i, 0, waveform.length, 0, 360));\n    let radius = map(waveform[i], -1, 1, 0, 3 * spacing);\n    let x = (radius / val) * cos(phi);\n    let y = (radius / val) * sin(phi);\n    noStroke();\n    fill(c);\n    ellipse(\n      x * 1.5,\n      y * 1.5,\n      minDimension / (100 * val),\n      minDimension / (100 * val)\n    );\n  }\n  endShape();\n}\n\nfunction mousePressed() {\n  // Check if the mouse is over the control point\n  let controlPointSize = min(width, height) / 30;\n  let distToControl = dist(mouseX, mouseY, xpos, ypos);\n\n  if (distToControl < controlPointSize) {\n    isDragging = true;\n  }\n}\n\nfunction mouseReleased() {\n  isDragging = false;\n}\n\nfunction myRecord() {\n  if (!isRecording) {\n    // Start a new recording\n    recorder.start();\n    isRecording = true;\n    console.log(\"Recording started\");\n\n    // Reset the processed recording when starting a new recording\n    recordingWithEffects = null;\n    if (player) {\n      player.stop();\n    }\n\n    // Disable buttons during recording\n    loopButton.attribute(\"disabled\", \"\");\n    processButton.attribute(\"disabled\", \"\");\n    exportButton.attribute(\"disabled\", \"\");\n  } else {\n    // Stop recording\n    isRecording = false;\n    console.log(\"Recording stopped\");\n\n    // Using async/await with the recorder stop method\n    (async () => {\n      try {\n        // Get the clean recording\n        const recording = await recorder.stop();\n        console.log(\"Recording size:\", recording.size, \"bytes\");\n\n        // Store the recording\n        lastRecording = recording;\n\n        // Create a URL for the recording\n        const url = URL.createObjectURL(recording);\n\n        // Stop any existing player\n        if (player) {\n          player.stop();\n          player.dispose();\n        }\n\n        // Create a new player with the recording\n        player = new Tone.Player({\n          url: url,\n          loop: true,\n          autostart: true,\n        });\n\n        // Connect player to effects chain for playback\n        player.connect(filter);\n\n        // Enable test mode buttons\n        loopButton.removeAttribute(\"disabled\");\n        processButton.removeAttribute(\"disabled\");\n\n        // Set to testing mode by default\n        isTestingEffects = true;\n        updateTestModeButton();\n\n        console.log(\"Player created and started in test mode\");\n      } catch (err) {\n        console.error(\"Error processing recording:\", err);\n        alert(\"Error processing recording: \" + err.message);\n      }\n    })();\n  }\n}\n\nfunction toggleTestMode() {\n  if (!lastRecording) return;\n\n  isTestingEffects = !isTestingEffects;\n  updateTestModeButton();\n\n  if (player) {\n    player.stop();\n    player.dispose();\n\n    // Create a URL for the appropriate recording\n    const recordingToUse = isTestingEffects\n      ? lastRecording\n      : recordingWithEffects;\n    const url = URL.createObjectURL(recordingToUse);\n\n    // Create a new player\n    player = new Tone.Player({\n      url: url,\n      loop: true,\n      autostart: true,\n    });\n\n    // Connect appropriately based on mode\n    if (isTestingEffects) {\n      // In test mode, connect to the effects chain\n      player.connect(filter);\n    } else {\n      // In final mode, connect directly to destination\n      player.toDestination();\n    }\n  }\n}\n\nfunction updateTestModeButton() {\n  if (isTestingEffects) {\n    // loopButton.html(\"Testing Effects: ON\");\n    loopButton.style(\"background\", \"green\");\n  } else {\n    // loopButton.html(\"Testing Effects: OFF\");\n    loopButton.style(\"background\", \"orange\");\n  }\n}\n\nasync function processRecordingWithEffects() {\n  if (!lastRecording) return;\n\n  // Disable buttons during processing\n  processButton.attribute(\"disabled\", \"\");\n  processButton.html(\"Processing...\");\n\n  // Create a temporary player and recorder to process the recording with effects\n  const tempUrl = URL.createObjectURL(lastRecording);\n  const tempRecorder = new Tone.Recorder();\n\n  // Create a temporary effects chain with current settings\n  const tempFilter = new Tone.Filter(400, \"lowpass\");\n  const tempDelay = new Tone.FeedbackDelay(D, 0.5);\n  const tempReverb = new Tone.Reverb({\n    decay: R,\n    preDelay: 0.05,\n  });\n\n  // Connect the temporary effects chain to the recorder\n  tempFilter.connect(tempDelay);\n  tempDelay.connect(tempReverb);\n  tempReverb.connect(tempRecorder);\n\n  // Create temporary player\n  const tempPlayer = new Tone.Player({\n    url: tempUrl,\n    loop: false,\n    autostart: false,\n    onload: async () => {\n      // Start recording\n      tempRecorder.start();\n\n      // Play the audio through the effects\n      await Tone.loaded();\n      tempPlayer.start();\n\n      // Wait for the audio to finish playing\n      await new Promise((resolve) => {\n        tempPlayer.onstop = resolve;\n      });\n\n      // Stop recording and get the processed audio\n      const processedRecording = await tempRecorder.stop();\n      recordingWithEffects = processedRecording;\n      console.log(\"Recording processed with effects\");\n\n      // Switch to processed mode\n      isTestingEffects = false;\n      updateTestModeButton();\n\n      // Update playback to use processed recording\n      if (player) {\n        player.stop();\n        player.dispose();\n\n        const processedUrl = URL.createObjectURL(recordingWithEffects);\n        player = new Tone.Player({\n          url: processedUrl,\n          loop: true,\n          autostart: true,\n        }).toDestination();\n      }\n\n      // Clean up\n      tempPlayer.dispose();\n      tempFilter.dispose();\n      tempDelay.dispose();\n      tempReverb.dispose();\n      tempRecorder.dispose();\n      URL.revokeObjectURL(tempUrl);\n\n      // Re-enable buttons\n      processButton.removeAttribute(\"disabled\");\n      processButton.html(\"Process with Effects\");\n      exportButton.removeAttribute(\"disabled\");\n    },\n  });\n\n  // Connect temporary player to the temporary effects chain\n  tempPlayer.connect(tempFilter);\n}\n\nfunction exportRecording() {\n  if (!recordingWithEffects) {\n    console.log(\"No processed recording available to export\");\n    alert(\"Please process your recording with effects before exporting!\");\n    return;\n  }\n\n  // Using the approach from the example code\n  const url = URL.createObjectURL(recordingWithEffects);\n  const anchor = document.createElement(\"a\");\n  anchor.download = \"recording_with_effects.webm\"; // Using webm format as in the example\n  anchor.href = url;\n  anchor.click();\n\n  // Clean up\n  setTimeout(() => {\n    URL.revokeObjectURL(url);\n    console.log(\"Recording with effects exported\");\n  }, 100);\n}\n\nfunction clearRecording() {\n  if (player) {\n    player.stop();\n    player.dispose();\n    player = null;\n  }\n\n  lastRecording = null;\n  recordingWithEffects = null;\n  console.log(\"Recording cleared\");\n\n  // Reset button states\n  processButton.attribute(\"disabled\", \"\");\n  exportButton.attribute(\"disabled\", \"\");\n  loopButton.attribute(\"disabled\", \"\");\n  isTestingEffects = true;\n  updateTestModeButton();\n}\n\nfunction keyPressed() {\n  if (key === \"f\") {\n    let fs = fullscreen();\n    fullscreen(!fs);\n    setTimeout(() => {\n      resizeCanvas(windowWidth, windowHeight);\n      repositionButtons();\n    }, 100);\n  }\n}\n\nfunction repositionButtons() {\n  let minDimension = min(width, height);\n  let spacing = minDimension / 10;\n  let buttonSpacing = width / 6;\n  let buttonY = spacing;\n\n  recordButton.position(buttonSpacing - recordButton.width / 2, buttonY);\n  loopButton.position(2 * buttonSpacing - loopButton.width / 2, buttonY);\n  processButton.position(3 * buttonSpacing - processButton.width / 2, buttonY);\n  exportButton.position(4 * buttonSpacing - exportButton.width / 2, buttonY);\n  clearButton.position(5 * buttonSpacing - clearButton.width / 2, buttonY);\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n  repositionButtons();\n}\n\nfunction setupMic() {\n  const mic = new Tone.UserMedia();\n  mic\n    .open()\n    .then(() => {\n      mic.connect(cleanRecordingDest);\n      mic.connect(filter);\n      myReverb.connect(analyzer);\n      console.log(\"Microphone ready\");\n    })\n    .catch((e) => {\n      console.error(\"Microphone access denied:\", e);\n      alert(\"Microphone permission needed.\");\n    });\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67cdbe1385a8455a29de3243",
        "createdAt": "2025-03-10T14:44:41.693Z",
        "updatedAt": "2025-03-10T14:44:41.693Z",
        "id": "67cdbe1385a8455a29de3243"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://unpkg.com/tone@15.0.4/build/Tone.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67cdbe1385a8455a29de3242",
        "createdAt": "2025-03-10T14:44:41.693Z",
        "updatedAt": "2025-03-10T14:44:41.693Z",
        "id": "67cdbe1385a8455a29de3242"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n\nbutton {\n  font-size: 0.7rem;\n  border: none;\n  border-radius: 5px;\n  padding: 5px;\n  color: white;\n  background:  darkblue;\n}\n\nbutton:hover {\n  padding: 6px;\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67cdbe1385a8455a29de3244",
        "createdAt": "2025-03-10T14:44:41.693Z",
        "updatedAt": "2025-03-10T14:44:41.693Z",
        "id": "67cdbe1385a8455a29de3244"
      }
    ],
    "createdAt": "2025-03-09T16:13:07.214Z",
    "updatedAt": "2025-03-10T14:44:41.693Z",
    "id": "Rt-UcS3D3"
  },
  {
    "_id": "XRD00zMe3",
    "name": "mic-viz copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67cef78761ba02d53b7d70fd",
          "67cef78761ba02d53b7d70fe",
          "67cef78761ba02d53b7d70ff"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67cef78761ba02d53b7d70fc",
        "createdAt": "2025-03-10T14:43:53.619Z",
        "updatedAt": "2025-03-10T14:43:53.619Z",
        "id": "67cef78761ba02d53b7d70fc"
      },
      {
        "name": "sketch.js",
        "content": "let recorder, player;\nlet isRecording = false;\nlet xpos, ypos;\nlet D = 0;\nlet R = 0.001;\nlet angle = 0;\nlet lastRecording = null;\nlet recordingWithEffects = null;\nlet isTestingEffects = true;\nlet isDragging = false;\nlet processButton,\n  clearButton,\n  exportButton,\n  recordButton,\n  loopButton,\n  startButton;\n\n// Audio Nodes\nconst cleanRecordingDest = new Tone.Gain();\nconst filter = new Tone.Filter(400, \"lowpass\");\nconst feedbackDelay = new Tone.FeedbackDelay(D, 0.5);\nconst myReverb = new Tone.Reverb({ decay: R, preDelay: 0.05 });\nconst masterGain = new Tone.Gain(0.7).toDestination();\nconst dryGain = new Tone.Gain(0.5); // Dry mix\n\n// Connect Effects Chain\nfilter.connect(feedbackDelay);\nfeedbackDelay.connect(myReverb);\nmyReverb.connect(masterGain);\n\n// Waveform Analyzer\nlet analyzer = new Tone.Waveform(2048);\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  background(0);\n  rectMode(CENTER);\n  xpos = width / 2;\n  ypos = height / 2;\n\n  // Recorder\n  recorder = new Tone.Recorder();\n  cleanRecordingDest.connect(recorder);\n\n  // UI Buttons\n  startButton = createButton(\"Start Audio\");\n  startButton.mousePressed(() => {\n  Tone.start().then(() => {\n    setupMic();\n    startButton.hide();\n  }).catch(err => {\n    console.error(\"Tone.js failed to start:\", err);\n    alert(\"Audio could not start. Check browser permissions.\");\n  });\n});\n\n  recordButton = createButton(\"Record\").mousePressed(myRecord);\n  loopButton = createButton(\"Testing\").mousePressed(toggleTestMode);\n  processButton = createButton(\"Process\").mousePressed(\n    processRecordingWithEffects\n  );\n  clearButton = createButton(\"Clear\").mousePressed(clearRecording);\n  exportButton = createButton(\"Export\").mousePressed(exportRecording);\n  processButton.attribute(\"disabled\", \"\");\n  exportButton.attribute(\"disabled\", \"\");\n  repositionButtons();\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n  background(0);\n  let minDimension = min(width, height);\n  let spacing = minDimension / 10;\n  let rectX = width / 2;\n  let rectY = height / 2;\n\n  // Only reset position if not dragging\n  if (!isDragging) {\n    xpos = rectX;\n    ypos = rectY;\n  }\n}\n\nfunction draw() {\n  blendMode(BLEND);\n  background(0, 50);\n  updateEffects();\n  let minDimension = min(width, height);\n  let spacing = minDimension / 10;\n\n  let rectX = width / 2;\n  let rectY = height / 2;\n  let rectW = width / 1.5;\n  let rectH = height / 1.5;\n\n  // Draw movement bounds\n  noFill();\n  stroke(0, 0, 255);\n  rect(rectX, rectY, rectW, rectH);\n\n  // Constrain movement within the rectangle (only when dragging)\n  if (isDragging) {\n    xpos = constrain(mouseX, rectX - rectW / 2, rectX + rectW / 2);\n    ypos = constrain(mouseY, rectY - rectH / 2, rectY + rectH / 2);\n  }\n\n  // Update record button appearance\n  if (isRecording) {\n    recordButton.style(\"background\", \"red\");\n    recordButton.html(\"Stop\");\n  } else {\n    recordButton.style(\"background\", \"darkblue\");\n    recordButton.html(\"Record\");\n  }\n\n  // Map position to effect parameters\n  D = constrain(map(xpos, rectX - rectW / 2, rectX + rectW / 2, 0, 1), 0, 1);\n  R = constrain(\n    map(ypos, rectY - rectH / 2, rectY + rectH / 2, 20, 0.001),\n    0.001,\n    20\n  );\n\n  // Update effects\n  feedbackDelay.delayTime.value = D;\n  myReverb.decay = R;\n\n  // Display current effect values\n  fill(255);\n  noStroke();\n  textAlign(LEFT);\n  textSize(16);\n  text(`Delay: ${D.toFixed(2)}`, 20, height - 60);\n  text(`Reverb: ${R.toFixed(2)}`, 20, height - 30);\n\n  // Show mode status\n  textAlign(CENTER);\n  if (isTestingEffects) {\n    fill(0, 255, 0);\n    text(\"Test Mode: Adjust effects in real-time\", width / 2, height - 30);\n  } else if (recordingWithEffects) {\n    fill(255, 165, 0);\n    text(\n      \"Final Mode: Effects processed and ready to export\",\n      width / 2,\n      height - 30\n    );\n  }\n\n  // Draw the draggable control point\n  let controlPointSize = minDimension / 30;\n  let rev = color(map(D, 0, 1, 150, 0), 0, map(R, 0.001, 20, 150, 255));\n  let del = color(0, map(R, 0.001, 20, 255, 150), map(D, 0, 1, 150, 255));\n\n  // Check if mouse is over the control point for hover effect\n  let distToControl = dist(mouseX, mouseY, xpos, ypos);\n  let isHovering = distToControl < controlPointSize;\n\n  // Draw drag handle with hover effect\n  stroke(rev);\n  strokeWeight(2);\n  if (isHovering || isDragging) {\n    fill(255);\n    cursor(HAND);\n  } else {\n    fill(lerpColor(rev, del, 0.9));\n    cursor(ARROW);\n  }\n  ellipse(xpos, ypos, controlPointSize, controlPointSize);\n\n  push(); // Save the current transformation\n  translate(xpos, ypos);\n  rotate(angle);\n\n  myWaveform(1, rev);\n  myWaveform(1.5, del);\n  myWaveform(2.5, lerpColor(rev, del, 0.5));\n\n  pop(); // Restore the transformation\n\n  angle += 0.01;\n}\n\nfunction myWaveform(val, c) {\n  let minDimension = min(width, height);\n  let spacing = minDimension / 10;\n  let waveform = analyzer.getValue();\n  beginShape();\n  let points = floor(waveform.length / 50);\n  for (let i = 0; i < waveform.length; i += points) {\n    let phi = radians(map(i, 0, waveform.length, 0, 360));\n    let radius = map(waveform[i], -1, 1, 0, 3 * spacing);\n    let x = (radius / val) * cos(phi);\n    let y = (radius / val) * sin(phi);\n    noStroke();\n    fill(c);\n    ellipse(\n      x * 1.5,\n      y * 1.5,\n      minDimension / (100 * val),\n      minDimension / (100 * val)\n    );\n  }\n  endShape();\n}\n\nfunction mousePressed() {\n  // Check if the mouse is over the control point\n  let controlPointSize = min(width, height) / 30;\n  let distToControl = dist(mouseX, mouseY, xpos, ypos);\n\n  if (distToControl < controlPointSize) {\n    isDragging = true;\n  }\n}\n\nfunction mouseReleased() {\n  isDragging = false;\n}\n\nasync function myRecord() {\n  if (!isRecording) {\n    try {\n      await recorder.start(); // Ensure start succeeds\n      isRecording = true;\n      console.log(\"Recording started\");\n    } catch (err) {\n      console.error(\"Error starting recording:\", err);\n      alert(\"Could not start recording. Try again.\");\n    }\n  } else {\n    try {\n      const recording = await recorder.stop(); // Stop safely\n      console.log(\"Recording stopped. Size:\", recording.size, \"bytes\");\n\n      if (recording.size === 0) {\n        console.error(\"Recording is empty!\");\n        alert(\"Error: No audio was recorded. Check mic input.\");\n        return;\n      }\n\n      lastRecording = recording;\n      const url = URL.createObjectURL(recording);\n      \n      if (player) player.dispose(); // Clean up old player\n\n      player = new Tone.Player({ url, loop: true, autostart: true }).connect(filter);\n      loopButton.removeAttribute(\"disabled\");\n      processButton.removeAttribute(\"disabled\");\n\n      console.log(\"Playback started in test mode\");\n    } catch (err) {\n      console.error(\"Error stopping recording:\", err);\n      alert(\"Recording failed. Try again.\");\n    }\n  }\n}\n\nfunction toggleTestMode() {\n  if (!lastRecording) return;\n\n  isTestingEffects = !isTestingEffects;\n  updateTestModeButton();\n\n  if (player) {\n    player.stop();\n    player.dispose();\n\n    // Create a URL for the appropriate recording\n    const recordingToUse = isTestingEffects\n      ? lastRecording\n      : recordingWithEffects;\n    const url = URL.createObjectURL(recordingToUse);\n\n    // Create a new player\n    player = new Tone.Player({\n      url: url,\n      loop: true,\n      autostart: true,\n    });\n\n    // Connect appropriately based on mode\n    if (isTestingEffects) {\n      // In test mode, connect to the effects chain\n      player.connect(filter);\n    } else {\n      // In final mode, connect directly to destination\n      player.toDestination();\n    }\n  }\n}\n\nfunction updateTestModeButton() {\n  if (isTestingEffects) {\n    // loopButton.html(\"Testing Effects: ON\");\n    loopButton.style(\"background\", \"green\");\n  } else {\n    // loopButton.html(\"Testing Effects: OFF\");\n    loopButton.style(\"background\", \"orange\");\n  }\n}\n\nasync function processRecordingWithEffects() {\n  if (!lastRecording) return;\n\n  // Disable buttons during processing\n  processButton.attribute(\"disabled\", \"\");\n  processButton.html(\"Processing...\");\n\n  // Create a temporary player and recorder to process the recording with effects\n  const tempUrl = URL.createObjectURL(lastRecording);\n  const tempRecorder = new Tone.Recorder();\n\n  // Create a temporary effects chain with current settings\n  const tempFilter = new Tone.Filter(400, \"lowpass\");\n  const tempDelay = new Tone.FeedbackDelay(D, 0.5);\n  const tempReverb = new Tone.Reverb({\n    decay: R,\n    preDelay: 0.05,\n  });\n\n  // Connect the temporary effects chain to the recorder\n  tempFilter.connect(tempDelay);\n  tempDelay.connect(tempReverb);\n  tempReverb.connect(tempRecorder);\n\n  // Create temporary player\n  const tempPlayer = new Tone.Player({\n    url: tempUrl,\n    loop: false,\n    autostart: false,\n    onload: async () => {\n      // Start recording\n      tempRecorder.start();\n\n      // Play the audio through the effects\n      await Tone.loaded();\n      tempPlayer.start();\n\n      // Wait for the audio to finish playing\n      await new Promise((resolve) => {\n        tempPlayer.onstop = resolve;\n      });\n\n      // Stop recording and get the processed audio\n      const processedRecording = await tempRecorder.stop();\n      recordingWithEffects = processedRecording;\n      console.log(\"Recording processed with effects\");\n\n      // Switch to processed mode\n      isTestingEffects = false;\n      updateTestModeButton();\n\n      // Update playback to use processed recording\n      if (player) {\n        player.stop();\n        player.dispose();\n\n        const processedUrl = URL.createObjectURL(recordingWithEffects);\n        player = new Tone.Player({\n          url: processedUrl,\n          loop: true,\n          autostart: true,\n        }).toDestination();\n      }\n\n      // Clean up\n      tempPlayer.dispose();\n      tempFilter.dispose();\n      tempDelay.dispose();\n      tempReverb.dispose();\n      tempRecorder.dispose();\n      URL.revokeObjectURL(tempUrl);\n\n      // Re-enable buttons\n      processButton.removeAttribute(\"disabled\");\n      processButton.html(\"Process with Effects\");\n      exportButton.removeAttribute(\"disabled\");\n    },\n  });\n\n  // Connect temporary player to the temporary effects chain\n  tempPlayer.connect(tempFilter);\n}\n\nfunction exportRecording() {\n  if (!recordingWithEffects) {\n    console.log(\"No processed recording available to export\");\n    alert(\"Please process your recording with effects before exporting!\");\n    return;\n  }\n\n  // Using the approach from the example code\n  const url = URL.createObjectURL(recordingWithEffects);\n  const anchor = document.createElement(\"a\");\n  anchor.download = \"recording_with_effects.webm\"; // Using webm format as in the example\n  anchor.href = url;\n  anchor.click();\n\n  // Clean up\n  setTimeout(() => {\n    URL.revokeObjectURL(url);\n    console.log(\"Recording with effects exported\");\n  }, 100);\n}\n\nfunction clearRecording() {\n  if (player) {\n    player.stop();\n    player.dispose();\n    player = null;\n  }\n\n  lastRecording = null;\n  recordingWithEffects = null;\n  console.log(\"Recording cleared\");\n\n  // Reset button states\n  processButton.attribute(\"disabled\", \"\");\n  exportButton.attribute(\"disabled\", \"\");\n  loopButton.attribute(\"disabled\", \"\");\n  isTestingEffects = true;\n  updateTestModeButton();\n}\n\nfunction keyPressed() {\n  if (key === \"f\") {\n    let fs = fullscreen();\n    fullscreen(!fs);\n    setTimeout(() => {\n      resizeCanvas(windowWidth, windowHeight);\n      repositionButtons();\n    }, 100);\n  }\n}\n\n// ✅ Ensure effects update in real-time\nfunction updateEffects() {\n  feedbackDelay.delayTime.value = D;\n  myReverb.decay = R;\n}\n\n// ✅ Recalculate positions for fullscreen\nfunction repositionButtons() {\n  let buttonSpacing = width / 7;\n  let buttonY = height / 12;\n\n  startButton.position(buttonSpacing - startButton.width / 2, buttonY);\n  recordButton.position(2 * buttonSpacing - recordButton.width / 2, buttonY);\n  loopButton.position(3 * buttonSpacing - loopButton.width / 2, buttonY);\n  processButton.position(4 * buttonSpacing - processButton.width / 2, buttonY);\n  exportButton.position(5 * buttonSpacing - exportButton.width / 2, buttonY);\n  clearButton.position(6 * buttonSpacing - clearButton.width / 2, buttonY);\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n  repositionButtons();\n}\n\nfunction setupMic() {\n  const mic = new Tone.UserMedia();\n  mic.open().then(() => {\n    mic.connect(cleanRecordingDest);\n    mic.connect(filter);\n    mic.connect(dryGain);\n    dryGain.connect(masterGain);\n    console.log(\"Microphone ready\");\n  }).catch(err => {\n    console.error(\"Microphone access denied:\", err);\n    alert(\"Microphone permission needed.\");\n  });\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67cef78761ba02d53b7d70fe",
        "createdAt": "2025-03-10T14:43:53.619Z",
        "updatedAt": "2025-03-10T14:43:53.619Z",
        "id": "67cef78761ba02d53b7d70fe"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://unpkg.com/tone@15.0.4/build/Tone.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67cef78761ba02d53b7d70fd",
        "createdAt": "2025-03-10T14:43:53.619Z",
        "updatedAt": "2025-03-10T14:43:53.619Z",
        "id": "67cef78761ba02d53b7d70fd"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n\nbutton {\n  font-size: 0.7rem;\n  border: none;\n  border-radius: 5px;\n  padding: 5px;\n  color: white;\n  background:  darkblue;\n}\n\nbutton:hover {\n  padding: 6px;\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67cef78761ba02d53b7d70ff",
        "createdAt": "2025-03-10T14:43:53.619Z",
        "updatedAt": "2025-03-10T14:43:53.619Z",
        "id": "67cef78761ba02d53b7d70ff"
      }
    ],
    "createdAt": "2025-03-10T14:30:31.871Z",
    "updatedAt": "2025-03-10T14:43:53.619Z",
    "id": "XRD00zMe3"
  },
  {
    "_id": "3KVnOj59h",
    "name": "mirror",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6722b1ab294f2d2a6dc906d0",
          "6722b1ab294f2d2a6dc906d1",
          "6722b1ab294f2d2a6dc906d2",
          "6722b1ab294f2d2a6dc906d3"
        ],
        "fileType": "folder",
        "_id": "6722b1ab294f2d2a6dc906cf",
        "createdAt": "2024-10-30T22:33:30.978Z",
        "updatedAt": "2024-10-30T22:33:30.978Z",
        "id": "6722b1ab294f2d2a6dc906cf"
      },
      {
        "name": "sketch.js",
        "content": "let pw=20;\nlet ph=20;\n\nlet cw,ch;\n\nlet video;\n\nfunction setup() {\n  createCanvas(300, 300);\n  cw=width/pw;\n  ch=height/ph;\n  video=createCapture(VIDEO);\n  video.hide();\n   // Use HSB color.\n  colorMode(HSB);\n}\n\nfunction draw() {\n  background(220);\n  let cImage=video.get();\n  let wr=floor(cImage.width/pw);\n  let hr=floor(cImage.width/ph);\n  noStroke();\n  cImage.loadPixels();\n  for (j=0; j<ph; j++) {\n    for (i=0; i<pw; i++) {\n      let imageI=i*wr;\n      let imageJ=j*hr;\n      let h=cImage.pixels[(imageI+imageJ*cImage.width)*4];\n      let s=cImage.pixels[(imageI+imageJ*cImage.width)*4+1];\n      let b=cImage.pixels[(imageI+imageJ*cImage.width)*4+2];\n\n      if (b>50) {\n        fill(255)\n      rect(i*cw,j*ch,cw,ch);\n      } else {\n        fill(0)\n \n      rect(i*cw,j*ch,cw,ch);}\n      \n    }\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6722b1ab294f2d2a6dc906d2",
        "createdAt": "2024-10-30T22:33:30.978Z",
        "updatedAt": "2024-10-30T22:33:30.978Z",
        "id": "6722b1ab294f2d2a6dc906d2"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6722b1ab294f2d2a6dc906d1",
        "createdAt": "2024-10-30T22:33:30.978Z",
        "updatedAt": "2024-10-30T22:33:30.978Z",
        "id": "6722b1ab294f2d2a6dc906d1"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6722b1ab294f2d2a6dc906d3",
        "createdAt": "2024-10-30T22:33:30.978Z",
        "updatedAt": "2024-10-30T22:33:30.978Z",
        "id": "6722b1ab294f2d2a6dc906d3"
      },
      {
        "name": "cat.jpg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/37a6ad43-ea74-45f1-895c-c24f4b917a37.jpg",
        "children": [],
        "fileType": "file",
        "_id": "6722b1ab294f2d2a6dc906d0",
        "createdAt": "2024-10-30T22:33:30.978Z",
        "updatedAt": "2024-10-30T22:33:30.978Z",
        "id": "6722b1ab294f2d2a6dc906d0"
      }
    ],
    "createdAt": "2024-10-30T22:22:36.132Z",
    "updatedAt": "2024-10-30T22:33:30.978Z",
    "id": "3KVnOj59h"
  },
  {
    "_id": "-CQ__F5uX",
    "name": "Mixer starter- Bon Iver Tracks COPY",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "679915b7548e8390b475b9d5",
          "679915b7548e8390b475b9d6",
          "679915b7548e8390b475b9d7",
          "679915b7548e8390b475b9dc"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "679915b7548e8390b475b9d4",
        "createdAt": "2025-01-28T17:54:56.068Z",
        "updatedAt": "2025-01-28T17:54:56.068Z",
        "id": "679915b7548e8390b475b9d4"
      },
      {
        "name": "sketch.js",
        "content": "let players = [];\nlet sliders = [];\n\n// load a track\nplayers[0] = new Tone.Player({\n  url: \"stems/blobtower.mp3\",\n  autostart: true,\n});\nplayers[0].toDestination();\n\nplayers[1] = new Tone.Player({\n  url: \"stems/brazen_mo.mp3\",\n  autostart: true,\n});\nplayers[1].toDestination();\n\nplayers[2] = new Tone.Player({\n  url: \"stems/breezy_point_rd.mp3\",\n  autostart: true,\n});\nplayers[2].toDestination();\n\nplayers[3] = new Tone.Player({\n  url: \"stems/lower_long_lake.mp3\",\n  autostart: true,\n});\nplayers[3].toDestination();\n\nfunction setup() {\n  noCanvas();\n  for (let i in players) {\n    // create sliders\n    sliders[i] = createSlider(-60, 0);\n    sliders[i].id = i; \n    // connect the value of the slider to volume of the track\n    sliders[i].input(volumeInput);\n  }\n}\n\nfunction volumeInput() {\n  console.log(this.id , this.value());\n  players[this.id].volume.rampTo(this.value());\n}\n\nfunction draw() {\n  background(220);\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "679915b7548e8390b475b9d6",
        "createdAt": "2025-01-28T17:54:56.068Z",
        "updatedAt": "2025-01-28T17:54:56.068Z",
        "id": "679915b7548e8390b475b9d6"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://unpkg.com/tone@15.0.4/build/Tone.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679915b7548e8390b475b9d5",
        "createdAt": "2025-01-28T17:54:56.068Z",
        "updatedAt": "2025-01-28T17:54:56.068Z",
        "id": "679915b7548e8390b475b9d5"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679915b7548e8390b475b9dc",
        "createdAt": "2025-01-28T17:54:56.068Z",
        "updatedAt": "2025-01-28T17:54:56.068Z",
        "id": "679915b7548e8390b475b9dc"
      },
      {
        "name": "stems",
        "content": "",
        "children": [
          "679915b7548e8390b475b9d8",
          "679915b7548e8390b475b9d9",
          "679915b7548e8390b475b9da",
          "679915b7548e8390b475b9db"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "679915b7548e8390b475b9d7",
        "createdAt": "2025-01-28T17:54:56.068Z",
        "updatedAt": "2025-01-28T17:54:56.068Z",
        "id": "679915b7548e8390b475b9d7"
      },
      {
        "name": "lower_long_lake.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/f24e3b75-2bc6-4b61-b7dd-bb4fea76583c.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679915b7548e8390b475b9db",
        "createdAt": "2025-01-28T17:54:56.068Z",
        "updatedAt": "2025-01-28T17:54:56.068Z",
        "id": "679915b7548e8390b475b9db"
      },
      {
        "name": "breezy_point_rd.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/a1a2a66a-9105-4fde-af52-bf29b592877e.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679915b7548e8390b475b9da",
        "createdAt": "2025-01-28T17:54:56.068Z",
        "updatedAt": "2025-01-28T17:54:56.068Z",
        "id": "679915b7548e8390b475b9da"
      },
      {
        "name": "brazen_mo.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/83e7c0ec-60d7-4ddc-bdcb-8438e45e1a7d.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679915b7548e8390b475b9d9",
        "createdAt": "2025-01-28T17:54:56.068Z",
        "updatedAt": "2025-01-28T17:54:56.068Z",
        "id": "679915b7548e8390b475b9d9"
      },
      {
        "name": "blobtower.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/43412ee1-db5c-43d3-83db-6a90114b0010.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679915b7548e8390b475b9d8",
        "createdAt": "2025-01-28T17:54:56.068Z",
        "updatedAt": "2025-01-28T17:54:56.068Z",
        "id": "679915b7548e8390b475b9d8"
      }
    ],
    "createdAt": "2025-01-28T17:36:56.567Z",
    "updatedAt": "2025-01-28T17:54:56.068Z",
    "id": "-CQ__F5uX"
  },
  {
    "_id": "yvWwuYMeN",
    "name": "ML5?",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6723bad725a5a99464f47bca",
          "6723bad725a5a99464f47bc9",
          "6723bad725a5a99464f47bcb"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6723bad725a5a99464f47bcc",
        "createdAt": "2024-10-31T18:38:46.069Z",
        "updatedAt": "2024-10-31T18:38:46.069Z",
        "id": "6723bad725a5a99464f47bcc"
      },
      {
        "name": "sketch.js",
        "content": "let video;\nlet bodypose;\nlet myNose;\nlet keypoints;\n\nfunction preload() {\n  // bodypose = ml5.bodyPose(\"BlazePose\");\n  bodypose = ml5.bodyPose();\n}\n\nfunction setup() {\n  createCanvas(400, 400);\n  video = createCapture(VIDEO);\n  video.size(width, height);\n  video.hide();\n  bodypose.detectStart(video, gotPoses);\n}\n\nfunction gotPoses(results) {\n  print(\"Poses Loaded:\");\n  if (results) {\n    if (results.length > 0) {\n      // print(results[0]);\n      keypoints = results[0].keypoints;\n      //print(keypoints);\n      /*\n      if (results[0].nose.confidence>0.95) {\n        myNose=results[0].nose;        \n        print(myNose);\n      }\n      */\n    }\n  }\n}\n\nfunction draw() {\n  background(220);\n  image(video, 0, 0);\n  /*\n  if (myNose) {\n    fill(255,0,0);\n    circle(myNose.x,myNose.y,20);\n  }\n  */\n\n  if (keypoints) {\n    // print(keypoints[0]);\n    for (let i = 0; i < keypoints.length; i++) {\n      // circle(keypoints[i].x,keypoints[i].y,20);\n      // print(keypoints);\n    }\n\n    if (keypoints.length > 0) {\n      circle(keypoints[0].x, keypoints[0].y, 20);\n\n      circle(keypoints[1].x, keypoints[1].y, 20);\n      circle(keypoints[2].x, keypoints[2].y, 20);\n      // circle((keypoints[9].x +keypoints[10].x)/2 ,(keypoints[9].y +keypoints[10].y)/2 ,20)\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6723bad725a5a99464f47bc9",
        "createdAt": "2024-10-31T18:38:46.069Z",
        "updatedAt": "2024-10-31T18:38:46.069Z",
        "id": "6723bad725a5a99464f47bc9"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6723bad725a5a99464f47bca",
        "createdAt": "2024-10-31T18:38:46.069Z",
        "updatedAt": "2024-10-31T18:38:46.069Z",
        "id": "6723bad725a5a99464f47bca"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6723bad725a5a99464f47bcb",
        "createdAt": "2024-10-31T18:38:46.069Z",
        "updatedAt": "2024-10-31T18:38:46.069Z",
        "id": "6723bad725a5a99464f47bcb"
      }
    ],
    "updatedAt": "2024-10-31T18:38:46.069Z",
    "createdAt": "2024-10-31T18:24:52.536Z",
    "id": "yvWwuYMeN"
  },
  {
    "_id": "eRTFrZhJq",
    "name": "Muse Arduino winter show 1 final copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "675b292c60c918db1525d4cb",
          "675b292c60c918db1525d4cc",
          "675b292c60c918db1525d4cd",
          "675b292c60c918db1525d4d7",
          "675b292c60c918db1525d4d8",
          "675b292c60c918db1525d4db",
          "675b292c60c918db1525d4df",
          "675b292c60c918db1525d4ec",
          "675b292c60c918db1525d4ed"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4ca",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4ca"
      },
      {
        "name": "sketch.js",
        "content": "let songFiles = [\"DEEPEST2.mp3\", \"DEEPEST3.mp3\"];\nlet songs = [];\nlet i = 0;\n//let r = 100;\nlet amp, fft;\nlet myLine = [];\nlet num = 1500;\nlet theta = 60;\nlet isPlaying = false;\nlet startTime;\nlet stage = 0;\nlet myeegD, myeegT, myeegA, myeegB, myeegG;\nlet weAreConnected=false;\nlet portButton;\nlet inData;         // for incoming serial data\nlet outByte = 0;\nlet stageIsChanging=false;\nlet o=0;\n\nlet serial = new p5.WebSerial();\n\nfunction preload() {\n  for (let j = 0; j < songFiles.length; j++) {\n    songs[j] = loadSound(songFiles[j]);\n  }\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  frameRate(15);\n  o=width/8;\n  amp = new p5.Amplitude();\n  fft = new p5.FFT();\n  angleMode(DEGREES);\n // b = width / 2;\n  //n = height / 2;\n  setupMuse();\n  setupMuseML();\nif(!navigator.serial){\n  alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n}\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n serial.getPorts();\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n\n  if(eeg.delta<50){\n   startTime = millis(); \n  }  \n}\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n \n// make the port selector window appear:\nfunction choosePort() {\n  serial.requestPort();\n}\n \n// open the selected port, and make the port \n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  serial.open().then(initiateSerial);\n \n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n    weAreConnected=true;\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n \n// read any incoming data as a byte:\nfunction serialEvent() {\n  // read a byte from the serial port:\n var inByte = serial.read();\n  print(\"in:\", inByte);\n  // store it in a global variable:\n // inData = inByte;\n  //let inStr=serial.readUntil(\"\\n\");\n  //print(\"in:\", inStr);\n}\n \n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n \n// try to connect if a new serial port \n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n \n// if a port is disconnected:\nfunction portDisconnect() {\n  sendModeToArduino(10);\n  serial.close();\n  console.log(\"port disconnected\");\n  weAreConnected=false;\n}\n \nfunction closePort() {\n  serial.close();\n}\n\nfunction mousePressed() {\n  // If there's a song playing, toggle play/pause on it\n  if (isPlaying) {\n    songs[i].pause();\n    isPlaying = false;\n  } else {\n    songs[i].play();\n    isPlaying = true;\n  }\n}\n\n\nfunction proccessEEG() {\n  let elapsedTime = millis() - startTime;\n \n // Stage progression\n  if (elapsedTime > 10000 && stage === 0) {\n    stage = 1;\n    stageIsChanging=false;\n  }\n  if (elapsedTime > 30000 && stage === 1) {\n    stage = 2;\n    stageIsChanging=false;\n  }\n  if (elapsedTime > 50000 && stage === 2) {\n    stage = 3;\n    stageIsChanging=false;\n  }\n  if (elapsedTime > 70000 && stage === 3) {\n    stage = 4;\n    stageIsChanging=false;\n  } \n  if (elapsedTime > 90000 && stage === 4) {\n    stage = 5;\n    stageIsChanging=false;\n  } \n  if (elapsedTime > 100000 && stage === 5) {\n    stage = 6;\n    stageIsChanging=false;\n  }\n\n  // Stage-specific actions\n  if(!stageIsChanging){\n  if (stage === 1 && elapsedTime <= 30000) {\n    if (myeegD < 10) {\n      sendModeToArduino(3);\n    }\n    else if(myeegD < 20 && myeegD >= 10){\n      sendModeToArduino(1);\n    }else{\n      sendModeToArduino(2);\n    }\n  } else if (stage === 2 && elapsedTime > 30000 && elapsedTime <= 50000) {\n    if (myeegA < 10 && myeegB < 10) {\n      sendModeToArduino(3);\n    }\n    else if( myeegB < 10){\n      sendModeToArduino(1);\n      sendModeToArduino(1);\n    } else{\n      sendModeToArduino(1);\n      sendModeToArduino(2);\n    }\n  } else if (stage === 3 && elapsedTime > 50000 && elapsedTime <= 70000) {\n    if (myeegA < 10 && myeegB < 10) {\n      sendModeToArduino(3);\n    }\n    else if(myeegA < 10) {\n      sendModeToArduino(2);\n      sendModeToArduino(2);\n    }else{\n      sendModeToArduino(1);\n      sendModeToArduino(2);\n    }\n  } else if (stage === 4 && elapsedTime > 70000 && elapsedTime <= 90000) {\n    if (myeegT < 10) {\n      sendModeToArduino(1);\n      sendModeToArduino(5);\n    } else {\n      sendModeToArduino(2);\n      sendModeToArduino(5);\n    }\n  } else if (stage === 5 && elapsedTime > 90000 && elapsedTime <= 100000) {\n    if (myeegG < 10) {\n      sendModeToArduino(6);\n    }\n    else {\n      sendModeToArduino(7);\n    }\n  } else if (stage === 6 && elapsedTime > 100000 && elapsedTime <= 110000) {\n    if (myeegT < 10) {\n      sendModeToArduino(8);\n    }\n    else {\n      sendModeToArduino(9);\n    }\n  }\n    stageIsChanging=true;\n  }\n}\n\nfunction sendModeToArduino(mode) {\n    try {\n      serial.write(`${mode}\\n`);\n      console.log(`Sent mode: ${mode}`);\n    } catch (error) {\n      console.error(\"Failed to write to serial:\", error);\n    }\n}\n\nfunction draw() {\n    let level = amp.getLevel();\n  let spectrum = fft.analyze();\n  background(230-(spectrum[1]*2), 50-(spectrum[1]*2), 15-(spectrum[1]*2));\n  //print(Math.abs(230-(spectrum[1]*2)), Math.abs(50-(spectrum[1]*2)), Math.abs(15-(spectrum[1]*2)));\npush();\n  if(eeg.alpha>0 ){\n     stroke( 200, 2000/eeg.alpha*level, 255  ,2000/eeg.theta);\n  } \n  strokeWeight(0.5);\n  noFill();\n   translate(width / 2, height / 2); // Center the sphere\n\n  // Dynamically update parameters using frameCount\n  let thetaMax = map(Math.abs(sin(frameCount *6)), -1, 1, 30, 360); // Oscillates between 0 and 360\n  let phiMax = map(Math.abs(cos(frameCount *6)), -1, 1, 90, 360);  // Oscillates between 0 and 360 for full shape\n  let density = int(map(sin(frameCount *4), -1, 1, 8, 102)); // Oscillates between 13 and 72\n\n  // Loop through phi and theta to calculate 2D projected positions\n  for (let phi = 0; phi < phiMax; phi += 360 / density) {\n    beginShape();\n    for (let alp = 0; alp < thetaMax; alp += 360 / density) {\n      // Calculate 3D coordinates\n      let x3D = o * spectrum[4]/500*cos(phi) * cos(alp);\n      let y3D = o * spectrum[4]/500*sin(phi) * sin(alp);\n      let z3D = o * cos(alp);\n\n      // Project 3D coordinates into 2D (perspective effect)\n      let x2D = x3D;\n      let y2D = y3D - z3D * 0.4;\n\n      vertex(x3D, y3D);\n    }\n    endShape(CLOSE);\n  }\n  pop();\n\n\n  if (!songs[i].isPlaying() && isPlaying) {\n    i++;\n    if (i >= songs.length) {\n      i = 0; // Loop back to the first song if reach the end\n    }\n    songs[i].play();\n  }\n  push();\n  translate(width/2, height/2);\n\n  for (let i = 0; i < num; i++) {\n    let Noise =\n      550 * noise(frameCount / 100 + i / 100, (millis() / 2500) * level);\n    stroke((i / 1.5) * level, 0, (Noise * spectrum[4]) / 200, 20);\n    strokeWeight(2);\n    rotate(2000 / num);\n    //center circle eeg affacted\n    line(\n      600,\n      600,\n      eegSpectrum[4] / 100+80,\n      (Math.floor(eeg.alpha) * 0.5 * Math.floor(eeg.delta)) / 10+80\n    );\n    let r = random(width*2); //use random radius\n    let x = Math.cos(theta) * r+width ;\n    let y = Math.sin(theta) * r +width;\n    stroke((i / 1.5) * level, 0, (Noise * spectrum[1]) / 200, 80);\n    //outer circle music affacted\n   line(spectrum[4], spectrum[4] / 2,x * level,y * Noise);\n\n    strokeWeight(4);\n    //point music affacted\n    point(Noise / 1.5, Noise / 1.5);\n  }\n  pop();\n  //print(level);\n  //print(eegSpectrum[4]);\n  // print(eegSpectrum[6]);\n  /* for (let i = 1; i <= eegSpectrum.length / 2; i++) {\n    let x = map(i, 0, 48, 0, width);\n    let y = map(eegSpectrum[i], 0, 50, height, 0);\n    vertex(x, y); //<-- draw a line graph\n  }\n  endShape();\n\n  // PPG chart\n  if (ppg.buffer.length == PPG_SAMPLES_MAX) {\n    beginShape();\n    strokeWeight(1);\n    noFill();\n    stroke(255, 100, 100);\n\n   for (let i = 1; i <= PPG_SAMPLES_MAX; i++) {\n      let x = map(i, 0, PPG_SAMPLES_MAX, 0, width);\n      let y = map(ppg.buffer[i], ppg.min, ppg.max, height * 0.6, height * 0.4);\n      vertex(x, y); //<-- draw a line graph\n    }\n    endShape();\n  }*/\n\n  noStroke();\n  fill(255);\n  textSize(10);\n  text(\"BATTERY: \" + Math.floor(batteryLevel), width - 80, 30);\n  /*\n  textSize(12);\n  text(\"NOISE: \" + state.noise, 10, 135);\n  text(\"MUSCLE: \" + state.muscle, 10, 150);\n  text(\"FOCUS: \" + state.focus, 10, 165);\n  text(\"CLEAR:  \" + state.clear, 10, 180);\n  text(\"MEDITATE: \" + state.meditation.toFixed(4), 10, 195);\n  text(\"DREAM: \" + state.dream, 15, 105);\n\n  let statePos = [-10, 30, 45, 60, 75, 90, 105];\n  let highestState = 0;\n  let highestValue = 0;\n  if (state.noise > highestValue) {\n    highestValue = state.noise;\n    highestState = 1;\n    \n  }\n  if (state.muscle > highestValue) {\n    highestValue = state.muscle;\n    highestState = 2;\n  }\n  if (state.focus > highestValue) {\n    highestValue = state.focus;\n    highestState = 3;\n  }\n  if (state.clear > highestValue) {\n    highestValue = state.clear;\n    highestState = 4;\n  }\n  if (state.meditation > highestValue) {\n    highestValue = state.meditation;\n    highestState = 5;\n  }\n  if (state.dream > highestValue) {\n    highestValue = state.dream;\n    highestState = 6;\n  }\n\n  text(\">\", 5, statePos[highestState] - 1);*/\n  let statePos = [-10, 30, 45, 60, 75, 90, 105];\n  let highestState = 0;\n  let highestValue = 0;\n  if (eeg.delta > highestValue) {\n    highestValue = eeg.delta;\n    highestState = 1;\n  }\n  if (eeg.theta > highestValue) {\n    highestValue = eeg.theta;\n    highestState = 2;\n  }\n  if (eeg.alpha > highestValue) {\n    highestValue = eeg.alpha;\n    highestState = 3;\n  }\n  if (eeg.beta > highestValue) {\n    highestValue = eeg.beta;\n    highestState = 4;\n  }\n  if (eeg.gamma > highestValue) {\n    highestValue = eeg.gamma;\n    highestState = 5;\n  }\n\n  text(\">\", 5, statePos[highestState] - 1);\n\n  text(\"NO-FOCUS: \" + eeg.delta.toFixed(0), 15, 30);\n  text(\"ACTIVE: \" + eeg.theta.toFixed(0), 15, 45);\n  text(\"TENSE: \" + eeg.alpha.toFixed(0), 15, 60);\n  text(\"CALM:  \" + eeg.beta.toFixed(0), 15, 75);\n  text(\"SADNESS: \" + eeg.gamma.toFixed(0), 15, 90);\n\n  myeegD = Math.floor(eeg.delta);\n  myeegT = Math.floor(eeg.theta);\n  myeegA = Math.floor(eeg.alpha);\n  myeegB = Math.floor(eeg.beta);\n  myeegG = Math.floor(eeg.gamma);\n\n  //print(myeegA);\n  if(weAreConnected){\n     proccessEEG();\n  }\n \n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "675b292c60c918db1525d4ec",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4ec"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"libraries/p5.js\"></script>\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <script src=\"libraries/ml5.min.js\"></script>\n     <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"muse/muse.js\"></script>\n    <script src=\"muse/fft.js\"></script>\n    <script src=\"muse/museDataBuffer.js\"></script>\n    <script src=\"muse/museEEG.js\"></script>\n    <script src=\"muse/musePPG.js\"></script>\n    <script src=\"muse/museParser.js\"></script>\n    <script src=\"muse/museListeners.js\"></script>\n    <script src=\"muse/museSetup.js\"></script>\n    <script src=\"muse/museBluetooth.js\"></script>\n    <script src=\"muse/webBLE.js\"></script>\n    <script src=\"muse/museML.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4d7",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4d7"
      },
      {
        "name": "style.css",
        "content": "html,\nbody {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4ed",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4ed"
      },
      {
        "name": "muse",
        "content": "",
        "children": [
          "675b292c60c918db1525d4e0",
          "675b292c60c918db1525d4e1",
          "675b292c60c918db1525d4e2",
          "675b292c60c918db1525d4e3",
          "675b292c60c918db1525d4e4",
          "675b292c60c918db1525d4e5",
          "675b292c60c918db1525d4e6",
          "675b292c60c918db1525d4e7",
          "675b292c60c918db1525d4e8",
          "675b292c60c918db1525d4e9",
          "675b292c60c918db1525d4ea",
          "675b292c60c918db1525d4eb"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4df",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4df"
      },
      {
        "name": "fft.js",
        "content": "/* \n *  DSP.js - a comprehensive digital signal processing  library for javascript\n * \n *  Created by Corban Brook <corbanbrook@gmail.com> on 2010-01-01.\n *  Copyright 2010 Corban Brook. All rights reserved.\n *\n */\n\n/**\n * FFT is a class for calculating the Discrete Fourier Transform of a signal\n * with the Fast Fourier Transform algorithm.\n *\n * @param {Number} bufferSize The size of the sample buffer to be computed. Must be power of 2\n * @param {Number} sampleRate The sampleRate of the buffer (eg. 44100)\n *\n * @constructor\n */\nclass FFT {\n\n    constructor(bufferSize, sampleRate) {\n        \n        //save incoming vars\n        this.bufferSize = bufferSize;\n        this.sampleRate = sampleRate;\n\n        //init and calc vars\n        this.rval; \n        this.ival;\n        this.mag;\n        this.sqrt = Math.sqrt;\n        this.bandwidth = 2 / bufferSize * sampleRate / 2;\n        this.bSi = 2 / this.bufferSize;\n        \n\n        //init arrays that hold the real and imaginary data\n        this.spectrum = new Float64Array(bufferSize / 2);\n        this.real = new Float64Array(bufferSize);\n        this.imag = new Float64Array(bufferSize);\n\n        //peaks \n        this.peakBand = 0;\n        this.peak = 0;\n\n        this.reverseTable = new Uint32Array(bufferSize);\n\n        var limit = 1;\n        var bit = bufferSize >> 1;\n\n        var i;\n\n        while (limit < bufferSize) {\n            for (i = 0; i < limit; i++) {\n                this.reverseTable[i + limit] = this.reverseTable[i] + bit;\n            }\n\n            limit = limit << 1;\n            bit = bit >> 1;\n        }\n\n        this.sinTable = new Float64Array(bufferSize);\n        this.cosTable = new Float64Array(bufferSize);\n\n        for (i = 0; i < bufferSize; i++) {\n            this.sinTable[i] = Math.sin(-Math.PI / i);\n            this.cosTable[i] = Math.cos(-Math.PI / i);\n        }\n    }\n\n    /**\n     * Performs a forward transform on the sample buffer.\n     * Converts a time domain signal to frequency domain spectra.\n     *\n     * @param {Array} buffer The sample buffer. Buffer Length must be power of 2\n     *\n     * @returns The frequency spectrum array\n     */\n\n    //called by code that needs to convert time based data into a frequency spectrum\n    forward(buffer) {\n        \n        // Locally scope variables for speed up\n        var bufferSize = this.bufferSize,\n            cosTable = this.cosTable,\n            sinTable = this.sinTable,\n            reverseTable = this.reverseTable,\n            real = this.real,\n            imag = this.imag,\n            spectrum = this.spectrum;\n\n        var k = Math.floor(Math.log(bufferSize) / Math.LN2);\n        \n        if (Math.pow(2, k) !== bufferSize) { throw \"Invalid buffer size, must be a power of 2.\"; }\n        if (bufferSize !== buffer.length) { throw \"Supplied buffer is not the same size as defined FFT. FFT Size: \" + bufferSize + \" Buffer Size: \" + buffer.length; }\n\n        var halfSize = 1,\n            phaseShiftStepReal,\n            phaseShiftStepImag,\n            currentPhaseShiftReal,\n            currentPhaseShiftImag,\n            off,\n            tr,\n            ti,\n            tmpReal,\n            i;\n     \n        for (i = 0; i < bufferSize; i++) {\n            real[i] = buffer[reverseTable[i]];\n            imag[i] = 0;\n        }\n\n        while (halfSize < bufferSize) {\n            \n            phaseShiftStepReal = cosTable[halfSize];\n            phaseShiftStepImag = sinTable[halfSize];\n\n            currentPhaseShiftReal = 1;\n            currentPhaseShiftImag = 0;\n\n            for (var fftStep = 0; fftStep < halfSize; fftStep++) {\n                i = fftStep;\n\n                while (i < bufferSize) {\n                    off = i + halfSize;\n                    tr = (currentPhaseShiftReal * real[off]) - (currentPhaseShiftImag * imag[off]);\n                    ti = (currentPhaseShiftReal * imag[off]) + (currentPhaseShiftImag * real[off]);\n\n                    real[off] = real[i] - tr;\n                    imag[off] = imag[i] - ti;\n                    real[i] += tr;\n                    imag[i] += ti;\n\n                    i += halfSize << 1;\n                }\n\n                tmpReal = currentPhaseShiftReal;\n                currentPhaseShiftReal = (tmpReal * phaseShiftStepReal) - (currentPhaseShiftImag * phaseShiftStepImag);\n                currentPhaseShiftImag = (tmpReal * phaseShiftStepImag) + (currentPhaseShiftImag * phaseShiftStepReal);\n            }\n\n            halfSize = halfSize << 1;\n        }\n\n        //update spectrum\n        for (var i = 0, N = bufferSize / 2; i < N; i++) {\n            this.rval = real[i];\n            this.ival = imag[i];\n            this.mag = this.bSi * sqrt(this.rval * this.rval + this.ival * this.ival);\n\n            if (this.mag > this.peak) {\n                this.peakBand = i;\n                this.peak = this.mag;\n            }\n\n            spectrum[i] = this.mag;\n        }\n        \n        //console.log(\"fft spec\", spectrum);\n        return spectrum;\n    }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4e0",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4e0"
      },
      {
        "name": "museDataBuffer.js",
        "content": "class MuseDataBuffer {\n\n    constructor(length) {\n        //save length\n        this.maxLength = length;\n        //fill buffer with zeroes to length\n        this._buffer = new Array(length).fill(0);\n    }\n  \n    //take a sample set and add to the buffer\n    update(withSamples){\n        \n        //add samples to the existing buffer\n        this._buffer = [...this._buffer, ...withSamples];\n        \n        //keep the buffer the right size\n        if (this._buffer.length > this.maxLength) { \n            let diff = this._buffer.length - this.maxLength;\n            this._buffer.splice(0, diff); \n        }\n\n        //return updated buffer\n        return this._buffer;\n    }\n\n    getLength(){\n        return this._buffer.length;\n    }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4e3",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4e3"
      },
      {
        "name": "museEEG.js",
        "content": "//delta, theta, alpha, beta, gamma waves\nclass EEGWave {\n\n    //create wave with the low and high end of the wave, in Hz\n    //for example, alpha is 8Hz - 12 Hz\n    //so binLow = 8, binHigh = 12\n    constructor(binLow, binHigh) {\n        this.binLow = binLow;\n        this.binHigh = binHigh\n        this.spectrum = []\n        this.average = 0;\n    }\n\n    //receive frequency spectrum for just this wave from FFT\n    //for example, alpha would just receive the 8 - 12 Hz slices of the frequency spectrum\n    update(withSpectrum) {\n\n        //average out each slice to one, averaged value for the whole brainwave\n        //for example, alpha would take the values from 8Hz, 9Hz, 10Hz, and 11Hz\n        //and average them into one value\n        this.spectrum = withSpectrum;\n        this.average = withSpectrum.reduce((a, b) => a + b) / withSpectrum.length;\n\n    }\n}\n\nclass EEGSensor {\n\n    constructor() {\n\n        //data buffer\n        this.EEG_BUFFER_SIZE = 256;\n        this.buffer = new MuseDataBuffer(this.EEG_BUFFER_SIZE);\n\n        //fft to process time based samples in buffer into a frequency based spectrum\n        let MUSE_SAMPLE_RATE = 220;\n        this.fft = new FFT(this.EEG_BUFFER_SIZE, MUSE_SAMPLE_RATE);\n        \n        //divide the sample rate by the buffer size to get how many frequencies are covered per fft bin\n        let freqInc = (MUSE_SAMPLE_RATE / this.EEG_BUFFER_SIZE)\n\n        //create and store an array to store what frequency is at what bin\n        //only is the sample rate and the buffer size were exactly the same\n        //(like 256 sample rate / 256 buffer size)\n        //would each bin be 1 Hz\n        //since they aren't, we need to calculate which bin corresponds with which Hz\n        \n        //start with an array of 0's\n        this.frequencies = new Array(this.EEG_BUFFER_SIZE/2).fill(0);\n        //loop through\n        for (let i = 0; i < this.frequencies.length; i++) {\n            //each slot is the slot num x the incrementation\n            //for example, if the sample rate is 220 and buffer is 246  \n            //then the frequencies in the bins are:\n            //0, 0.859375, 1.71875, 2.578125, 3.4375, etc...\n            //not 0, 1, 2, 3, 4, etc...\n            this.frequencies[i] = i * freqInc; \n        }\n\n        //calc the high and low bin for each brainwave\n        //pass in the Hz (like alpha is 8-12)\n        //get back the bins (alpha bins are 9-14)\n\n        let deltaLow = this._getPositionForFrequency(1, this.frequencies);\n        let deltaHigh = this._getPositionForFrequency(3, this.frequencies);\n        this.delta = new EEGWave(deltaLow, deltaHigh);\n        let thetaLow = this._getPositionForFrequency(4, this.frequencies);\n        let thetaHigh = this._getPositionForFrequency(7, this.frequencies);\n        this.theta = new EEGWave(thetaLow, thetaHigh);\n        let alphaLow = this._getPositionForFrequency(8, this.frequencies);\n        let alphaHigh = this._getPositionForFrequency(12, this.frequencies);\n        this.alpha = new EEGWave(alphaLow, alphaHigh);\n        let betaLow = this._getPositionForFrequency(13, this.frequencies);\n        let betaHigh = this._getPositionForFrequency(30, this.frequencies);\n        this.beta = new EEGWave(betaLow, betaHigh);\n        let gammaLow = this._getPositionForFrequency(31, this.frequencies);\n        let gammaHigh = this._getPositionForFrequency(40, this.frequencies);\n        this.gamma = new EEGWave(gammaLow, gammaHigh);\n        \n        //store all the new waves in an array for access\n        this.waves = [\n            this.delta,\n            this.theta,\n            this.alpha,\n            this.beta,\n            this.gamma,\n        ]\n\n        //and store the whole spectrum var for screen printing, etc...\n        this.spectrum = new Array(this.EEG_BUFFER_SIZE/2).fill(0);\n    }\n\n    //update from sensor\n    update(withSamples) {\n        \n        //add new samples to buffer\n        let sensorBuffer = this.buffer.update(withSamples)\n\n        //turn samples into a frequency spectrum using FFT\n        this.spectrum = this.fft.forward(sensorBuffer);\n        //console.log(\"spectrum\", this.spectrum);\n\n        for (let i = 0; i < this.waves.length; i++) {\n            let wave = this.waves[i];\n            wave.update(this.spectrum.slice(wave.binLow, wave.binHigh));\n        }\n    }\n  \n    //helpers\n    _findClosestValue(searchValue, inArray) {\n\n        return inArray.reduce((a, b) => {\n            let aDiff = Math.abs(a - searchValue);\n            let bDiff = Math.abs(b - searchValue);\n    \n            if (aDiff == bDiff) {\n                return a > b ? a : b;\n            } else {\n                return bDiff < aDiff ? b : a;\n            }\n        });\n    }\n\n    _getPositionForFrequency(frequency, inArray){\n        let exactFrequency = this._findClosestValue(frequency, inArray)\n        let exactFrequencyPosition = inArray.indexOf(exactFrequency, 0);\n         return exactFrequencyPosition;\n    }\n\n}\n\n//vars (need to be after the class definitions)\n\nlet leftEar = new EEGSensor();\nlet leftForehead = new EEGSensor();\nlet rightForehead = new EEGSensor();\nlet rightEar = new EEGSensor();\n\nlet sensors = [\n    leftEar,\n    leftForehead,\n    rightForehead,\n    rightEar\n]\nlet sensorTotal = sensors.length;\n\nlet eegSpectrum = new Array(leftForehead.EEG_BUFFER_SIZE/2).fill(0);\n\n//global scope func to process EEG data per sensor\nfunction processEEG(sensor, data) {\n\n    //process data buffer into samples and save\n    let eegSamples = decodeUnsigned12BitData(new Uint8Array(data.buffer).subarray(2));\n\n    //pass into the specified sensor\n    sensors[sensor].update(eegSamples);\n\n    //get the post-fft frequency spectrum from each sensor\n    let sensorSpectrums = []\n    for (let i = 0; i < sensorTotal; i++) {\n        sensorSpectrums.push(sensors[i].spectrum);\n    }\n    //average the spectrums from all the sensors into one spectrum \n    eegSpectrum = _getAverageByIndex(sensorSpectrums);\n\n    //init vars for the total of each brainwave across all sensors\n    //for example, what is the average alpha across all 4 sensors\n    let deltaTotal = 0;\n    let thetaTotal = 0;\n    let alphaTotal = 0;\n    let betaTotal = 0;\n    let gammaTotal = 0;\n    \n    //loop through each sensor\n    for (let i = 0; i < sensorTotal; i++) {\n\n        //target each sensor\n        let sensor = sensors[i];\n\n        //add brainwave average from each sensor to the total\n        deltaTotal += sensor.delta.average;\n        thetaTotal += sensor.theta.average;\n        alphaTotal += sensor.alpha.average;\n        betaTotal += sensor.beta.average;\n        gammaTotal += sensor.gamma.average;\n    }\n\n    //then average out the totals by 4 (sensor total)\n    //resulting in the average brainwave strength across the entire headband\n    eeg.delta = deltaTotal / sensorTotal;\n    eeg.theta = thetaTotal / sensorTotal;\n    eeg.alpha = alphaTotal / sensorTotal;\n    eeg.beta = betaTotal / sensorTotal;\n    eeg.gamma = gammaTotal / sensorTotal;\n\n}\n\n\n\n//helper\nfunction _getAverageByIndex(arrays) {\n\n    //create blank array to store the averages\n    let avgArr = new Array(arrays[0].length).fill(0);\n    \n    //step through each empty slot in averaged array\n    for (let s = 0; s < avgArr.length; s++) {\n\n        //loop throgh the values in this position\n        let positionAvg = 0;\n        for (let a = 0; a < arrays.length; a++) {\n            positionAvg += arrays[a][s]; //add them up\n        }\n        //divide to get average\n        positionAvg /= arrays.length;\n\n        //store in slot\n        avgArr[s] = positionAvg;\n    }\n\n    return avgArr;\n}\n\n\n\n ",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4e4",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4e4"
      },
      {
        "name": "museBluetooth.js",
        "content": "//bluetooth class \nlet bluetoothConnection;\n\n//ID for muse devices\nconst MUSE_SERVICE = 0xfe8d\n\n//channel to send commands to muse\nlet controlChar;\nconst MUSE_CONTROL_ID = '273e0001-4c4d-454d-96be-f03bac821358';\n\n//eeg sensors\nconst MUSE_LEFT_EAR_ID = '273e0003-4c4d-454d-96be-f03bac821358';\nconst MUSE_LEFT_FOREHEAD_ID = '273e0004-4c4d-454d-96be-f03bac821358';\nconst MUSE_RIGHT_FOREHEAD_ID = '273e0005-4c4d-454d-96be-f03bac821358';\nconst MUSE_RIGHT_EAR_ID = '273e0006-4c4d-454d-96be-f03bac821358';\n\n//battery\nconst MUSE_BATTERY_ID = '273e000b-4c4d-454d-96be-f03bac821358';\n\n//other sensors\nconst MUSE_GYROSCOPE_ID = '273e0009-4c4d-454d-96be-f03bac821358';\nconst MUSE_ACCELEROMETER_ID = '273e000a-4c4d-454d-96be-f03bac821358';\nconst MUSE_PPG_ID = '273e0010-4c4d-454d-96be-f03bac821358';\n\nlet connectionOptions = { filters: [{ services: [MUSE_SERVICE] }] };\n\nfunction connectToMuse() {\n\n    //ask bluetooth to connect\n    bluetoothConnection.connect(connectionOptions, museConnected);\n}\n\n//connected listener\nasync function initMuseStreaming(characteristics) {\n\n    console.log(\"Connected to Muse\");\n    let controlActive = false;\n\n    //go through each characteristic and add listeners\n    for (let i = 0; i < characteristics.length; i++) {\n\n        //get characteristic\n        let characteristic = characteristics[i];\n\n        //search by UUID \n        switch (characteristic.uuid) {\n\n            case MUSE_CONTROL_ID:\n\n                //control is how to send message to the Muse, like 'start' and 'stop'\n                controlChar = characteristic;\n                controlActive = true; //ok to proceed with streaming\n                break;\n\n            //the EEG sensors\n            case MUSE_LEFT_EAR_ID:\n                bluetoothConnection.startNotifications(characteristic, didReceiveEegLeftEar);\n                break;\n\n            case MUSE_LEFT_FOREHEAD_ID:\n                bluetoothConnection.startNotifications(characteristic, didReceiveEegLeftForehead);\n                break;\n\n            case MUSE_RIGHT_EAR_ID:\n                bluetoothConnection.startNotifications(characteristic, didReceiveEegRightEar);\n                break;\n\n            case MUSE_RIGHT_FOREHEAD_ID:\n                bluetoothConnection.startNotifications(characteristic, didReceiveEegRightForehead);\n                break;\n\n            case MUSE_PPG_ID:\n                bluetoothConnection.startNotifications(characteristic, didReceivePpg);\n                break;\n\n            case MUSE_ACCELEROMETER_ID:\n                bluetoothConnection.startNotifications(characteristic, didReceiveAccel);\n                break;\n\n            case MUSE_GYROSCOPE_ID:\n                bluetoothConnection.startNotifications(characteristic, didReceiveGyro);\n                break;\n\n            case MUSE_BATTERY_ID:\n                bluetoothConnection.startNotifications(characteristic, didReceiveBattery);\n                break;\n\n            default:\n                //console.log(\"Unused characteristic:\", characteristic)\n                break;\n        }\n    }\n    return controlActive;\n}\n\nasync function startMuse() {\n\n    //to stream data, send this sequence to headset\n    //halt (a pause command)\n    //connection type (PPG or no PPG)\n    //start command\n    //resume command\n    //this sequence, in a row, starts the headset's streaming data\n\n    if (controlChar) {\n\n        await bluetoothConnection.sendCommand(controlChar, 'h'); //halt\n\n        if (usePPG) {\n\n            //use ppg, Muse 2\n            await bluetoothConnection.sendCommand(controlChar, 'p50');\n\n        } else {\n\n            //no ppg, Muse 1\n            await bluetoothConnection.sendCommand(controlChar, 'p21');\n        }\n\n        await bluetoothConnection.sendCommand(controlChar, 's'); //start\n        await bluetoothConnection.sendCommand(controlChar, 'd'); //resume\n    }\n}\n\nfunction onDisconnected() {\n    console.log('Device disconnected');\n    museDisconnected();\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4e2",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4e2"
      },
      {
        "name": "museListeners.js",
        "content": "//parsing methods\n//https://github.com/urish/muse-js/blob/4e864578c55dd7e26d85b429863f47ccabac54a0/src/lib/muse-parse.ts\n\n//streaming listeners   \nfunction didReceiveEegLeftEar(data) {\n    //processEEG(0, data);\n}\n\nfunction didReceiveEegLeftForehead(data) {\n    //processEEG(1, data);\n    processEEG(0, data);\n}\n\nfunction didReceiveEegRightEar(data) {\n    //processEEG(2, data);\n}\n\nfunction didReceiveEegRightForehead(data) {\n    //processEEG(3, data);\n    processEEG(1, data);\n}\n\nfunction didReceivePpg(data) {\n    processPPG(data); \n}\n\nfunction didReceiveAccel(data) {\n\n    //parse the samples with multiplier\n    let _samples = parseImuReading(data, 0.0000610352).samples;\n\n    //average out the samples\n    accel.x = (_samples[0].x + _samples[1].x + _samples[2].x) / 3;\n    accel.y = (_samples[0].y + _samples[1].y + _samples[2].y) / 3;\n    accel.z = (_samples[0].z + _samples[1].z + _samples[2].z) / 3;\n    //console.log(\"Accel:\", accel);\n}\n\nfunction didReceiveGyro(data) {\n\n    //parse the samples with multiplier\n    let _samples = parseImuReading(data, 0.0074768).samples;\n\n    //average out the samples\n    gyro.x = (_samples[0].x + _samples[1].x + _samples[2].x) / 3;\n    gyro.y = (_samples[0].y + _samples[1].y + _samples[2].y) / 3;\n    gyro.z = (_samples[0].z + _samples[1].z + _samples[2].z) / 3;\n    //console.log(\"Gyro:\", gyro);\n}\n\nfunction didReceiveBattery(data) {\n    batteryLevel = data.getUint16(2) / 512;\n    console.log(\"Battery level:\", batteryLevel, \"%\");\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4e5",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4e5"
      },
      {
        "name": "museParser.js",
        "content": "//PARSING FUNCTIONS\n//eeg samples\nfunction decodeUnsigned12BitData(samples) {\n    const samples12Bit = [];\n    for (let i = 0; i < samples.length; i++) {\n        if (i % 3 === 0) {\n            samples12Bit.push((samples[i] << 4) | (samples[i + 1] >> 4));\n        } else {\n            samples12Bit.push(((samples[i] & 0xf) << 8) | samples[i + 1]);\n            i++;\n        }\n    }\n    return samples12Bit;\n}\n\n//ppg samples\nfunction decodeUnsigned24BitData(samples) {\n    const samples24Bit = [];\n    for (let i = 0; i < samples.length; i = i + 3) {\n        samples24Bit.push((samples[i] << 16) | (samples[i + 1] << 8) | samples[i + 2]);\n    }\n    return samples24Bit;\n}\n//parses gyro and accel data\nfunction parseImuReading(data, scale) {\n    function sample(startIndex) {\n        return {\n            x: scale * data.getInt16(startIndex),\n            y: scale * data.getInt16(startIndex + 2),\n            z: scale * data.getInt16(startIndex + 4),\n        };\n    }\n    return {\n        sequenceId: data.getUint16(0),\n        samples: [sample(2), sample(8), sample(14)],\n    };\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4e8",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4e8"
      },
      {
        "name": "musePPG.js",
        "content": "let PPG_SAMPLES_MAX = 80;\nlet ppgBuffer = new MuseDataBuffer(PPG_SAMPLES_MAX);\nlet heartbeatTimestamps = []\nlet BEAT_DETECTION_THRESHOLD = 0.6 //0.996 //0.9982 //0.998\nlet BPM_SAMPLES_MAX = 10;\n\n\nfunction processPPG(data) {\n\n    //process data buffer into samples and save\n    let ppgSamples = decodeUnsigned24BitData(new Uint8Array(data.buffer).subarray(2));\n\n    //add decoded samples to the buffer\n    ppg.buffer = ppgBuffer.update(ppgSamples);\n    ppg.buffer = movingAverageSmooth(ppg.buffer, 10);\n\n    //calc the high and low value of the buffer\n    ppg.max = Math.max(...ppg.buffer);\n    ppg.min = Math.min(...ppg.buffer);\n\n    //grab most recent value in ppg array\n    ppg.amplitude = ppg.buffer[ppg.buffer.length - 1];\n\n    //what percentage is it of the max?\n    let ppgPercent = (ppg.amplitude-ppg.min) / (ppg.max-ppg.min);\n    \n    //if recent value is near the max value, it's a heartbeat\n    if (ppgPercent > BEAT_DETECTION_THRESHOLD) { //threshold for a beat detection\n\n        //if previously false...\n        if (ppg.heartbeat == false) {\n            \n            //record the timestamp of this heartbeat\n            heartbeatTimestamps.push(new Date().getTime());\n\n            //keep timestamps array from growing too long\n            if (heartbeatTimestamps.length > BPM_SAMPLES_MAX) { \n                let diff = heartbeatTimestamps.length - BPM_SAMPLES_MAX;\n                heartbeatTimestamps.splice(0, diff); \n            }\n\n            let durationsBetweenBeats = []\n\n            //if there are enough samples...\n            if (heartbeatTimestamps.length > 1) {\n\n                //loop through each timestamp\n                for (var i = heartbeatTimestamps.length-1; i > 1; i--) {\n\n                    //get this and the next timestamp\n                    let currTimestamp = heartbeatTimestamps[i];\n                    let prevTimestamp = heartbeatTimestamps[i - 1];\n                \n                    //calculate time between beats and save it\n                    let durationBetweenBeats = currTimestamp - prevTimestamp;\n                    durationsBetweenBeats.push(durationBetweenBeats);\n                }\n\n                //calc durations between the beats\n                let durationsTotal = 0;\n                for (var i = 0; i < durationsBetweenBeats.length; i++) {\n\n                    //add up the durations\n                    durationsTotal += durationsBetweenBeats[i];\n                }\n                //calc average in milliseconds\n                let durationAverage = durationsTotal / durationsBetweenBeats.length;\n                \n                //bpm = 60000 / ms duration of quarter note\n                ppg.bpm = Math.round(60000 / durationAverage);\n        \n            }\n        }\n\n        //when heart beat is occurring\n        ppg.heartbeat = true;\n\n    } else {\n        //else off\n        ppg.heartbeat = false;\n    }\n      \n}\n\nfunction movingAverageSmooth(arr, windowSize) {\n    if(windowSize <= 1) {\n      return arr.slice();\n    }\n    \n    const result = [];\n    for(let i = 0; i < arr.length; i++) {\n      let sum = 0;\n      let count = 0;\n      for(let j = -Math.floor(windowSize / 2); j <= Math.floor(windowSize / 2); j++) {\n        const index = i + j;\n        if(index >= 0 && index < arr.length) {\n          sum += arr[index];\n          count++;\n        }\n      }\n      result[i] = sum / count;\n    }\n    return result;\n  }",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4e7",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4e7"
      },
      {
        "name": "museSetup.js",
        "content": "//is it a Muse 1 (usePPG = false) or Muse 2 (usePPG = true)\nlet usePPG = true;\nlet connectButton;\n\nfunction setupMuse() {\n  //this handles the bluetooth connection between the Muse and the computer\n  bluetoothConnection = new webBLE();\n\n  //create the connect button \n  connectButton = createButton('Connect')\n  connectButton.mousePressed(connectButtonClicked);\n}\n\n//user clicks connect button\nfunction connectButtonClicked() {\n  connectToMuse();\n}\n\n//when muse connects, this function fires\nfunction museConnected(error, characteristics) {\n\n  if (error) {\n    console.log(error); //error connecting\n  } else {\n\n    //hide the connect button\n    connectButton.hide();\n\n    //prepare muse to stream data\n    let museIsReady = initMuseStreaming(characteristics);\n\n    //if muse is ready for streaming\n    if (museIsReady) {\n      startMuse();\n    }\n\n    //add disconnection script\n    bluetoothConnection.onDisconnected(onDisconnected);\n  }\n}\n\n//if muse disconnects\nfunction museDisconnected() {\n  console.log('Muse Disconnected');\n\n  //show the connect button\n  connectButton.show();\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4e9",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4e9"
      },
      {
        "name": "webBLE.js",
        "content": "// Copyright (c) 2018 p5ble\n//\n// This software is released under the MIT License.\n// https://opensource.org/licenses/MIT\n\n//import callCallback from './utils/callcallback';\n//import parseData from './utils/parseData';\n\n\nclass webBLE {\n    constructor() {\n      this.device = null;\n      this.server = null;\n      this.service = null;\n      this.characteristics = [];\n      this.handleNotifications = null;\n    }\n  \n    connect(serviceUuidOrOptions, callback) {\n      let options = {};\n      let serviceUuid;\n  \n      if (typeof serviceUuidOrOptions === 'string') {\n        serviceUuid = serviceUuidOrOptions.toLowerCase();\n        options = {\n          filters: [{\n            services: [serviceUuid],\n          }]\n        };\n      } else if (typeof serviceUuidOrOptions === 'object' && serviceUuidOrOptions.filters) {\n        // Options = {\n        //   filters: [{ namePrefix: \"name\" }, { services: [\"2A5A20B9-0000-4B9C-9C69-4975713E0FF2\"] }]\n        // }\n        const servicesArray = serviceUuidOrOptions.filters.find(f => f.services);\n        if (servicesArray && servicesArray.services && servicesArray.services[0]) {\n          \n          serviceUuid = servicesArray.services[0]; //.toLowerCase();\n          options.filters = serviceUuidOrOptions.filters.map((f) => {\n            if (f.services) { \n              const newF = {};\n              newF.services = f.services;\n              return newF;\n            }\n            return f;\n          });\n        } else {\n          console.error('Please pass an option object in this format: options = { filters: [{ services: [serviceUuid] }]} ');\n        }\n      } else {\n        console.error('Please pass in a serviceUuid string or option object, e.g. options = { filters: [{ services: [serviceUuid] }]} ');\n      }\n  \n      console.log('Requesting Bluetooth Device...');\n    \n      return callCallback(navigator.bluetooth.requestDevice(options)\n        .then((device) => {\n          this.device = device;\n          console.log(`BLE: Device found: ${device.name}`);\n          return device.gatt.connect();\n        })\n        .then((server) => {\n          this.server = server;\n          console.log('BLE: Getting service...');\n          return server.getPrimaryService(serviceUuid);\n        })\n        .then((service) => {\n          this.service = service;\n          console.log('BLE: Getting characteristics...');\n          return service.getCharacteristics();\n        })\n        .then((characteristics) => {\n          this.characteristics = characteristics;\n          console.log('BLE: Characteristics found');\n          return characteristics;\n        })\n        .catch((error) => {\n          console.error(`BLE: Error: ${error}`);\n        }), callback);\n    }\n  \n    async read(characteristic, dataTypeOrcallback, cb) {\n      let callback;\n      let dataType;\n      if (typeof dataTypeOrcallback === 'function') {\n        callback = dataTypeOrcallback;\n      } else if (typeof dataTypeOrcallback === 'string') {\n        dataType = dataTypeOrcallback;\n      }\n      if (typeof cb === 'function') {\n        callback = cb;\n      }\n  \n      if (!characteristic || !characteristic.uuid) console.error('The characteristic does not exist.');\n      const validChar = this.characteristics.find(char => char.uuid === characteristic.uuid);\n      if (!validChar) return console.error('The characteristic does not exist.');\n  \n      return callCallback(characteristic.readValue()\n        .then(value => parseData(value, dataType)), callback);\n    }\n\n    sendCommand(char, cmd) {\n\n      const encoded = new TextEncoder().encode(`X${cmd}\\n`);\n      encoded[0] = encoded.length - 1;\n\n      return char.writeValue(encoded); \n    }\n\n    encodeCommand(cmd) {\n      const encoded = new TextEncoder().encode(`X${cmd}\\n`);\n      encoded[0] = encoded.length - 1;\n      return encoded;\n    }\n\n\n    write(characteristic, inputValue) {\n\n      if (!characteristic || !characteristic.uuid) console.error('The characteristic does not exist.');\n      const validChar = this.characteristics.find(char => char.uuid === characteristic.uuid);\n      if (!validChar) return console.error('The characteristic does not exist.');\n  \n      let bufferToSend;\n      if (typeof inputValue === 'string') {\n        const encoder = new TextEncoder('utf-8');\n        bufferToSend = encoder.encode(inputValue);\n      } else bufferToSend = Uint8Array.of(inputValue);\n      console.log(`Writing ${inputValue} to Characteristic...`);\n      console.log('Returning', bufferToSend);\n      return characteristic.writeValue(bufferToSend);\n    }\n  \n    async startNotifications(characteristic, handleNotifications, dataType) {\n      if (!characteristic || !characteristic.uuid) console.error('The characteristic does not exist.');\n      const validChar = this.characteristics.find(char => char.uuid === characteristic.uuid);\n      if (!validChar) return console.error('The characteristic does not exist.');\n  \n      await characteristic.startNotifications();\n  \n      console.log('> Notifications started');\n  \n      //this runs with each update refresh from device\n      this.handleNotifications = (event) => {\n        // const { value } = event.target;\n        // const parsedData = parseData(value, dataType);\n        // handleNotifications(parsedData);\n        handleNotifications(event.target.value);\n      };\n  \n      return characteristic.addEventListener('characteristicvaluechanged', this.handleNotifications);\n    }\n  \n    async stopNotifications(characteristic) {\n      if (!characteristic || !characteristic.uuid) console.error('The characteristic does not exist.');\n      const validChar = this.characteristics.find(char => char.uuid === characteristic.uuid);\n      if (!validChar) return console.error('The characteristic does not exist.');\n  \n      try {\n        await characteristic.stopNotifications();\n  \n        if (this.handleNotifications) {\n          console.log('> Notifications stopped');\n          return characteristic.removeEventListener('characteristicvaluechanged', this.handleNotifications);\n        }\n        return console.log('> Notifications stopped');\n      } catch (error) {\n        return console.error(`Error: ${error}`);\n      }\n    }\n  \n    disconnect() {\n      if (!this.device) return;\n      console.log('Disconnecting from Bluetooth Device...');\n      if (this.device.gatt.connected) {\n        this.device.gatt.disconnect();\n      } else {\n        console.log('> Bluetooth Device is already disconnected');\n      }\n    }\n  \n    onDisconnected(handleDisconnected) {\n      console.log('Setting up disconnect listener...');\n      if (!this.device) return console.error('There is no device connected.');\n      return this.device.addEventListener('gattserverdisconnected', handleDisconnected);\n    }\n  \n    isConnected() {\n      if (!this.device) return false;\n      if (this.device.gatt.connected) {\n        return true;\n      }\n      return false;\n    }\n  }\n  \n  //module.exports = p5ble;\n  \n  //callcallback.js\n  function callCallback(promise, callback) {\n    if (callback) {\n      promise\n        .then((result) => {\n          callback(undefined, result);\n          return result;\n        })\n        .catch((error) => {\n          callback(error);\n          return error;\n        });\n    }\n    return promise;\n  }\n  \n  //parseData.js\n  function parseData(data, t, encoding) {\n    const type = t ? t.toLowerCase() : 'unit8';\n    let result;\n    let decoder;\n    switch (type) {\n      case 'unit8':\n        result = data.getUint8(0);\n        break;\n  \n      case 'uint16':\n        result = data.getUint16(0);\n        break;\n  \n      case 'uint32':\n        result = data.getUint32(0);\n        break;\n  \n      case 'int8':\n        result = data.getInt8(0);\n        break;\n  \n      case 'int16':\n        result = data.getInt16(0);\n        break;\n  \n      case 'int32':\n        result = data.getInt32(0);\n        break;\n  \n      case 'float32':\n        result = data.getFloat32(0, true); // littleEndian\n        break;\n  \n      case 'float32-bigEndian':\n        result = data.getFloat32(0); // BigEndian\n        break;\n  \n      case 'float64':\n        result = data.getFloat64(0, true); // littleEndian\n        break;\n  \n      case 'float64-bigEndian':\n        result = data.getFloat64(0); // BigEndian\n        break;\n  \n      case 'string':\n        // TODO: have the ability to choose different string encoding: like utf16\n        decoder = new TextDecoder(encoding || 'utf8');\n        result = decoder.decode(data);\n        break;\n  \n      case 'custom':\n        // let the user do the parsing\n        result = data;\n        break;\n  \n      default:\n        result = data.getUint8(0);\n        break;\n    }\n    return result;\n  }",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4eb",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4eb"
      },
      {
        "name": "muse.js",
        "content": "//Muse variables which P5 can access\nlet batteryLevel = 0;\nlet gyro = {\n  x: 0,\n  y: 0,\n  z: 0\n}\nlet accel = {\n  x: 0,\n  y: 0,\n  z: 0\n}\n\nlet ppg = {\n  bpm: 0,\n  heartbeat:false,\n  amplitude: 0,\n  buffer: [],\n  max:0,\n  min:0\n}\n\nlet eeg = {\n  delta: 0,\n  theta: 0,\n  alpha: 0,\n  beta: 0,\n  gamma: 0,\n  sensors: []\n}\n\nlet state = {\n  noise: 0,\n  muscle: 0,\n  focus: 0,\n  clear: 0,\n  meditation: 0,\n  dream: 0\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4e1",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4e1"
      },
      {
        "name": "JSON-data",
        "content": "",
        "children": [
          "675b292c60c918db1525d4ce",
          "675b292c60c918db1525d4cf",
          "675b292c60c918db1525d4d0",
          "675b292c60c918db1525d4d1",
          "675b292c60c918db1525d4d2",
          "675b292c60c918db1525d4d3",
          "675b292c60c918db1525d4d4",
          "675b292c60c918db1525d4d5",
          "675b292c60c918db1525d4d6"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4cd",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4cd"
      },
      {
        "name": "model",
        "content": "",
        "children": [
          "675b292c60c918db1525d4dc",
          "675b292c60c918db1525d4dd",
          "675b292c60c918db1525d4de"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4db",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4db"
      },
      {
        "name": "libraries",
        "content": "",
        "children": [
          "675b292c60c918db1525d4d9",
          "675b292c60c918db1525d4da"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4d8",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4d8"
      },
      {
        "name": "ml5.min.js",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/b85c76af-62f8-4e62-9d89-7d7e96346c92.js",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4d9",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4d9"
      },
      {
        "name": "p5.js",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/b1817c07-fe3a-43c5-ba17-6ec53ed070b7.js",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4da",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4da"
      },
      {
        "name": "model.json",
        "content": "{\"modelTopology\":{\"class_name\":\"Sequential\",\"config\":{\"name\":\"sequential_1\",\"layers\":[{\"class_name\":\"Dense\",\"config\":{\"units\":16,\"activation\":\"relu\",\"use_bias\":true,\"kernel_initializer\":{\"class_name\":\"VarianceScaling\",\"config\":{\"scale\":1,\"mode\":\"fan_avg\",\"distribution\":\"normal\",\"seed\":null}},\"bias_initializer\":{\"class_name\":\"Zeros\",\"config\":{}},\"kernel_regularizer\":null,\"bias_regularizer\":null,\"activity_regularizer\":null,\"kernel_constraint\":null,\"bias_constraint\":null,\"name\":\"dense_Dense1\",\"trainable\":true,\"batch_input_shape\":[null,48],\"dtype\":\"float32\"}},{\"class_name\":\"Dense\",\"config\":{\"units\":10,\"activation\":\"softmax\",\"use_bias\":true,\"kernel_initializer\":{\"class_name\":\"VarianceScaling\",\"config\":{\"scale\":1,\"mode\":\"fan_avg\",\"distribution\":\"normal\",\"seed\":null}},\"bias_initializer\":{\"class_name\":\"Zeros\",\"config\":{}},\"kernel_regularizer\":null,\"bias_regularizer\":null,\"activity_regularizer\":null,\"kernel_constraint\":null,\"bias_constraint\":null,\"name\":\"dense_Dense2\",\"trainable\":true}}]},\"keras_version\":\"tfjs-layers 1.7.4\",\"backend\":\"tensor_flow.js\"},\"weightsManifest\":[{\"paths\":[\"./model.weights.bin\"],\"weights\":[{\"name\":\"dense_Dense1/kernel\",\"shape\":[48,16],\"dtype\":\"float32\"},{\"name\":\"dense_Dense1/bias\",\"shape\":[16],\"dtype\":\"float32\"},{\"name\":\"dense_Dense2/kernel\",\"shape\":[16,10],\"dtype\":\"float32\"},{\"name\":\"dense_Dense2/bias\",\"shape\":[10],\"dtype\":\"float32\"}]}]}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4dc",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4dc"
      },
      {
        "name": "model_meta.json",
        "content": "{\"inputUnits\":[48],\"outputUnits\":10,\"inputs\":{\"0\":{\"dtype\":\"number\",\"min\":1700.81640625,\"max\":5647.0390625},\"1\":{\"dtype\":\"number\",\"min\":1.0201994263456444,\"max\":2249.8768946306177},\"2\":{\"dtype\":\"number\",\"min\":1.4835534256279903,\"max\":1739.4073605590206},\"3\":{\"dtype\":\"number\",\"min\":0.8392282497231014,\"max\":1557.1931287796015},\"4\":{\"dtype\":\"number\",\"min\":1.2802594619319034,\"max\":970.1937606539975},\"5\":{\"dtype\":\"number\",\"min\":0.5482489391167266,\"max\":833.8842816593531},\"6\":{\"dtype\":\"number\",\"min\":1.0190365062220805,\"max\":749.090569954072},\"7\":{\"dtype\":\"number\",\"min\":0.9131433072934765,\"max\":629.260365599245},\"8\":{\"dtype\":\"number\",\"min\":0.76302431820448,\"max\":612.4767315074466},\"9\":{\"dtype\":\"number\",\"min\":0.9111846732415796,\"max\":459.43098047017696},\"10\":{\"dtype\":\"number\",\"min\":0.9856047125950741,\"max\":395.0389763786033},\"11\":{\"dtype\":\"number\",\"min\":0.8624787116003999,\"max\":376.4448772384435},\"12\":{\"dtype\":\"number\",\"min\":0.5354364322401506,\"max\":291.2019904718128},\"13\":{\"dtype\":\"number\",\"min\":0.778847500871853,\"max\":304.79391660691465},\"14\":{\"dtype\":\"number\",\"min\":0.7247284535199932,\"max\":360.06074989703586},\"15\":{\"dtype\":\"number\",\"min\":0.5866207135526228,\"max\":232.73038549119713},\"16\":{\"dtype\":\"number\",\"min\":0.4996785456783457,\"max\":425.0964435625341},\"17\":{\"dtype\":\"number\",\"min\":0.5724652387971372,\"max\":258.6098795097553},\"18\":{\"dtype\":\"number\",\"min\":0.5528399348126813,\"max\":253.9061693239658},\"19\":{\"dtype\":\"number\",\"min\":0.7577654288723874,\"max\":215.77576007194088},\"20\":{\"dtype\":\"number\",\"min\":0.5340374890353193,\"max\":175.13325412427832},\"21\":{\"dtype\":\"number\",\"min\":0.6316928689225139,\"max\":182.22536426589528},\"22\":{\"dtype\":\"number\",\"min\":0.5175876681026752,\"max\":165.18871680026456},\"23\":{\"dtype\":\"number\",\"min\":0.36777754370788024,\"max\":195.3066570285317},\"24\":{\"dtype\":\"number\",\"min\":0.3648781389870991,\"max\":156.29041656468203},\"25\":{\"dtype\":\"number\",\"min\":0.527946943921116,\"max\":165.1509424997082},\"26\":{\"dtype\":\"number\",\"min\":0.42762727174818405,\"max\":148.58112598141764},\"27\":{\"dtype\":\"number\",\"min\":0.5497341006658278,\"max\":168.04900664234705},\"28\":{\"dtype\":\"number\",\"min\":0.4858502743946793,\"max\":237.83142408418882},\"29\":{\"dtype\":\"number\",\"min\":0.3745376321918566,\"max\":170.2169258258018},\"30\":{\"dtype\":\"number\",\"min\":0.3541937046951814,\"max\":157.27143896194107},\"31\":{\"dtype\":\"number\",\"min\":0.26505948694121717,\"max\":164.01131142415534},\"32\":{\"dtype\":\"number\",\"min\":0.47863812872497,\"max\":312.31920215027964},\"33\":{\"dtype\":\"number\",\"min\":0.4430576244694693,\"max\":143.31190522775256},\"34\":{\"dtype\":\"number\",\"min\":0.405917470030014,\"max\":130.08447124635134},\"35\":{\"dtype\":\"number\",\"min\":0.3893129804005432,\"max\":143.0075659847888},\"36\":{\"dtype\":\"number\",\"min\":0.3639211087675065,\"max\":125.78688724373683},\"37\":{\"dtype\":\"number\",\"min\":0.26564340990990265,\"max\":121.46924714271071},\"38\":{\"dtype\":\"number\",\"min\":0.35561396055319305,\"max\":141.5183437221521},\"39\":{\"dtype\":\"number\",\"min\":0.3464103326423811,\"max\":158.8879227281618},\"40\":{\"dtype\":\"number\",\"min\":0.3958210047928797,\"max\":168.9703085441693},\"41\":{\"dtype\":\"number\",\"min\":0.35075127494648434,\"max\":174.07299567196048},\"42\":{\"dtype\":\"number\",\"min\":0.3710127128954821,\"max\":147.40730342340788},\"43\":{\"dtype\":\"number\",\"min\":0.45764892604742075,\"max\":221.52697240296783},\"44\":{\"dtype\":\"number\",\"min\":0.28229567147488505,\"max\":248.78441840193506},\"45\":{\"dtype\":\"number\",\"min\":0.4689058497718777,\"max\":224.17649406490116},\"46\":{\"dtype\":\"number\",\"min\":0.4115161559264394,\"max\":222.3170938960444},\"47\":{\"dtype\":\"number\",\"min\":0.3465020877598043,\"max\":246.37093305853497}},\"outputs\":{\"0\":{\"dtype\":\"string\",\"min\":0,\"max\":1,\"uniqueValues\":[\"c\",\"d\",\"e\",\"f\",\"b\",\"j\",\"l\",\"m\",\"n\",\"o\"],\"legend\":{\"c\":[1,0,0,0,0,0,0,0,0,0],\"d\":[0,1,0,0,0,0,0,0,0,0],\"e\":[0,0,1,0,0,0,0,0,0,0],\"f\":[0,0,0,1,0,0,0,0,0,0],\"b\":[0,0,0,0,1,0,0,0,0,0],\"j\":[0,0,0,0,0,1,0,0,0,0],\"l\":[0,0,0,0,0,0,1,0,0,0],\"m\":[0,0,0,0,0,0,0,1,0,0],\"n\":[0,0,0,0,0,0,0,0,1,0],\"o\":[0,0,0,0,0,0,0,0,0,1]}}},\"isNormalized\":true}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4de",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4de"
      },
      {
        "name": "model.weights.bin",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/00e6fc2a-2c1b-4318-992d-03d8aed92283.bin",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4dd",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4dd"
      },
      {
        "name": "utils-json.js",
        "content": "//utils for json files\n\n// Function to fetch a JSON file and parse its content\nconst fetchAndParseJSON = async (filePath) => {\n    try {\n        const response = await fetch(filePath);\n        if (!response.ok) {\n            throw new Error(`Error fetching ${filePath}: ${response.status} ${response.statusText}`);\n        }\n        const jsonData = await response.json();\n        return jsonData.data || []; // Return the \"data\" array or an empty array\n    } catch (error) {\n        console.error(error);\n        return [];\n    }\n};\n\n// Function to load and combine multiple JSON files\n//add callback function to this\n\nfunction loadAndCombineJSONFiles(jsonFilePaths, callback) {\n\n    // Array to hold all the fetch promises\n    const jsonFetchPromises = jsonFilePaths.map(filePath => fetchAndParseJSON(filePath));\n\n    // Wait for all promises to resolve using Promise.all\n    Promise.all(jsonFetchPromises)\n        .then(dataArrays => {\n\n            // Combine the arrays from all \"data\" objects into a single array\n            const combinedDataArray = [].concat(...dataArrays);\n\n            // Create the final combined JSON object\n            const _combinedJSON = { data: combinedDataArray };\n\n            //call the callback function with the combinedJSON\n            callback(_combinedJSON);\n\n        })\n        .catch(error => console.error('Error loading or combining JSON files:', error));\n\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4ea",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4ea"
      },
      {
        "name": "museML.js",
        "content": "let neuralNetwork;\n\n//how many data points are in the JSON?\n//hz bins\n//cut off everything above 50 to avoid 50 hz wall outlet noise in EU\nlet INPUTS_TOTAL = 48;\n\n//how many outputted classifications are in the JSON?\nlet brainwaveDataSets = [\n  \"JSON-data/c-clear-mind.json\",\n  \"JSON-data/d-dream-theta.json\",\n  \"JSON-data/e-eye-movement.json\",\n  \"JSON-data/f-resting-focus.json\",\n  \"JSON-data/b-blink.json\",\n  \"JSON-data/j-jaw-clench.json\",\n  \"JSON-data/l-loose-connection.json\",\n  \"JSON-data/m-muscle-tension.json\",\n  \"JSON-data/n-noise-disconnection.json\",\n  \"JSON-data/o-overstimulation.json\",\n];\n\n//how many times does the model get analyzed?\n//this can be reduced to the number where the loss drops and stays low in the Training Performance chart (which is visible when debug is TRUE)\nlet EPOCHS = 105;\n\n//classification (specific outputs with %)\n//or regression (a percentage fade between specific points)\nlet MODEL_TYPE = \"classification\"; //or \"regression\"\n\nfunction setupMuseML() {\n  //setup NN\n  let options = {\n    inputs: INPUTS_TOTAL,\n    outputs: brainwaveDataSets.length,\n    task: MODEL_TYPE,\n    debug: true,\n  };\n  neuralNetwork = ml5.neuralNetwork(options);\n\n  //note: only run loadAndCombineJSONFiles or loadTrainingModel\n  //running back at the same time can produce an error if there are differences between them\n\n  //TO TRAIN MODEL\n  //load in data that has already been recorded\n  //do this if you want to add more data to the existing data\n  // loadAndCombineJSONFiles(\n  //   brainwaveDataSets,\n  //   combinedJSONFilesLoaded\n  // );\n\n  //or\n\n  //TO ANALYZE LIVE DATA FROM TRAINED MODEL\n  //load this when testing live data against the ML model\n  loadTrainingModel();\n}\n\n//LOAD JSON DATA OF MENTAL STATES\nfunction combinedJSONFilesLoaded(combinedJSON) {\n  // Use the combinedJSON variable for further processing\n  console.log(\"Combined JSON data loaded:\", combinedJSON.data);\n\n  //loop through loaded JSON and add inputs and outputs\n  for (const item of combinedJSON.data) {\n    neuralNetwork.addData(item.xs, item.ys);\n  }\n\n  //when you want to create a train model...\n  trainModel();\n}\n\n//TRAINS NN ON JSON DATA (TRAINING)\nfunction trainModel() {\n  console.log(\"start training model\");\n\n  //convert all data to be between 0.0 and 1.0\n  neuralNetwork.normalizeData();\n\n  //train the neural network\n  neuralNetwork.train(\n    {\n      epochs: EPOCHS,\n    },\n    trainingComplete\n  );\n}\n\nfunction trainingComplete() {\n  console.log(\"training complete\");\n\n  //when happy with loss value\n  //and num of epochs tests\n  //and ready to download model\n  neuralNetwork.save();\n}\n\n//MODEL TO CLASSIFY INCOMING EEG DATA (POST TRAINING)\nfunction loadTrainingModel() {\n  const modelInfo = {\n    model: \"model/model.json\",\n    metadata: \"model/model_meta.json\",\n    weights: \"model/model.weights.bin\",\n  };\n\n  neuralNetwork.load(modelInfo, trainingModelLoaded);\n}\n\nfunction trainingModelLoaded() {\n  console.log(\"Training model is loaded\");\n\n  //start interval for how frequent the live EEG data is examined\n  setInterval(classifyLiveEEG, 50);\n}\n\nfunction classifyLiveEEG() {\n  //only classify if live data is coming from the headset\n  if (eegSpectrum[0] > 0) {\n    let hzBins = eegSpectrum.slice(0, 48);\n    neuralNetwork.classify(hzBins, stateDetected);\n  }\n}\n\n//minimum confidence\nlet minConf = 0.3;\n\nfunction stateDetected(error, results) {\n  if (error) {\n    console.log(\"stateDetected error:\", error);\n    return;\n  } else {\n    //populate global vars\n    //noise values\n    let _noise = 0;\n    let _loose = 0;\n    let _muscle = 0;\n    let _jaw = 0;\n    let _blink = 0;\n\n    //both noise and focus\n    let _eye = 0;\n\n    //brain states\n    let _clear = 0;\n    let _focus = 0;\n    let _dream = 0;\n\n    //loop through results\n    for (let i = 0; i < results.length; i++) {\n      let result = results[i];\n      let label = result.label;\n      let confidence = result.confidence.toFixed(4);\n\n      //populate vars if they have signifant value\n\n      switch (label) {\n        case \"n\":\n          _noise = confidence;\n          break;\n        case \"l\":\n          _loose = confidence;\n          break;\n        case \"m\":\n          _muscle = confidence;\n          break;\n        case \"b\":\n          _blink = confidence;\n          break;\n        case \"e\":\n          _eye = confidence;\n          break;\n        case \"j\":\n          _jaw = confidence;\n          break;\n        case \"f\":\n          _focus = confidence;\n          break;\n        case \"c\":\n          _clear = confidence;\n          break;\n        case \"d\":\n          _dream = confidence;\n          break;\n        default:\n        //console.log(`Unknown ${label}.`);\n      }\n    }\n\n    //concat some values\n\n    //noise\n    if (_noise < _loose) {\n      _noise = _loose;\n    }\n    state.noise = _noise;\n\n    //muscle tension\n    if (_muscle < _jaw) {\n      _muscle = _jaw;\n    }\n    if (_muscle < _blink) {\n      _muscle = _blink;\n    }\n\n    state.muscle = _muscle;\n\n    if (_focus < _eye) {\n      _focus = _eye;\n    }\n\n    state.focus = _focus;\n    state.clear = _clear;\n    state.dream = _dream;\n\n    //calculate alpha ratio\n    let alphaRatio = eeg.alpha / eeg.delta;\n\n    //map alphaRatio from 0.5 to 0.6 to generate meditation state\n    state.meditation = map(alphaRatio, 0.45, 0.65, 0, 1);\n  }\n\n  //print results\n  /*if (error) {\n        console.log(\"stateDetected error:\", error);\n        return;\n    } else {\n        let topResult = results[0];\n        let label = topResult.label;\n        let confidence = topResult.confidence.toFixed(4);\n\n        //check for noise states first\n        //noise, loose, muscle tension, jaw clench, blink\n        if (label == \"n\" && confidence > minConf) {\n            console.log(\"X X X X noise:\", confidence);\n        } else if (label == \"l\" && confidence > minConf) {\n            console.log(\"X X X X loose:\", confidence);\n        } else if (label == \"m\" || label == \"b\") {\n            if (confidence > minConf) {\n                console.log(\"X X X X muscle tension:\", confidence);\n            }\n        } else if (label == \"j\" && confidence > minConf) {\n            console.log(\"X X X X jaw clench:\", confidence);\n        } else if (label == \"e\") {\n            console.log(\"X X X X eye movement:\", confidence);\n        } else {\n            //if the headset is one and the noise states are not detected\n            //these are the mental states\n            // console.log(\" \")\n\n            if (\n                eeg.alpha > eeg.delta &&\n                eeg.alpha > eeg.theta &&\n                eeg.alpha > eeg.beta &&\n                eeg.alpha > eeg.gamma\n            ) {\n                console.log(\"/ / / / alpha:\", eeg.alpha);\n            } else if (label == \"f\" && confidence > minConf) {\n                console.log(\"+ + + + resting focus:\", confidence)\n            } else if (label == \"c\" && confidence > minConf) {\n                console.log(\"* * * * clear:\", confidence)\n            } else if (label == \"t\") {\n                console.log(\"~ ~ ~ ~ theta:\", confidence);\n            } else if (label == \"o\" && confidence > minConf) {\n                console.log(\"/ / / / overstimulation:\", confidence)\n            } else {\n                let printStr = \"\"\n                for (const result of results) {\n                    printStr += result.label + \" \";\n                }\n                console.log(printStr)\n            }\n        }\n    }*/\n}\n\n//KEY COMMANDS\n//used to trigger a snapshot for the JSON data\nfunction keyPressed() {\n  if (key == \"S\") {\n    neuralNetwork.saveData();\n  } else {\n    let hzBins = eegSpectrum.slice(0, 48);\n\n    let target = [key];\n    console.log(\"Store EEG for\", key);\n\n    neuralNetwork.addData(hzBins, target);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4e6",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4e6"
      },
      {
        "name": "d-dream-theta.json",
        "content": "{\n    \"data\": [\n        {\n            \"xs\": {\n                \"0\": 3955.361328125,\n                \"1\": 19.37874686266418,\n                \"2\": 12.44138385928246,\n                \"3\": 8.676276789253762,\n                \"4\": 5.915059703553853,\n                \"5\": 3.130746117692813,\n                \"6\": 3.105526512817696,\n                \"7\": 3.1673759882071884,\n                \"8\": 5.134281182539054,\n                \"9\": 4.450868080341206,\n                \"10\": 9.07277748299358,\n                \"11\": 3.1105520887451346,\n                \"12\": 2.1949257157876696,\n                \"13\": 2.714903771980748,\n                \"14\": 1.138804652851832,\n                \"15\": 2.0482798126461788,\n                \"16\": 1.4494327945035155,\n                \"17\": 2.3617945674115015,\n                \"18\": 1.616166415811349,\n                \"19\": 3.3750839710569043,\n                \"20\": 1.8677936689148344,\n                \"21\": 2.487491247683646,\n                \"22\": 1.1170781460677541,\n                \"23\": 2.90563377183728,\n                \"24\": 2.198786229745666,\n                \"25\": 1.7373577722540476,\n                \"26\": 1.3266773314256042,\n                \"27\": 1.6193486589977226,\n                \"28\": 1.3130922370537061,\n                \"29\": 1.924710890706523,\n                \"30\": 1.6196873673056817,\n                \"31\": 2.629384716705546,\n                \"32\": 1.685662612649414,\n                \"33\": 2.0397251447426683,\n                \"34\": 1.6448165657654488,\n                \"35\": 1.1473660576623421,\n                \"36\": 1.1986754546800746,\n                \"37\": 1.477006965196738,\n                \"38\": 1.5160283745108432,\n                \"39\": 1.3937112325366867,\n                \"40\": 1.3653630607502227,\n                \"41\": 1.521090521584776,\n                \"42\": 1.1652347269809469,\n                \"43\": 1.6350770445220726,\n                \"44\": 1.2535739674592694,\n                \"45\": 1.2254044141577483,\n                \"46\": 1.9584933265402609,\n                \"47\": 2.2666094730835695\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3958.6484375,\n                \"1\": 16.229385627622207,\n                \"2\": 8.451703262204562,\n                \"3\": 6.043429610470797,\n                \"4\": 5.616996363772515,\n                \"5\": 4.4313683487479425,\n                \"6\": 7.066368440701271,\n                \"7\": 3.0942636559649075,\n                \"8\": 6.558502035975685,\n                \"9\": 3.216349674138343,\n                \"10\": 5.116333182552847,\n                \"11\": 2.593388798139935,\n                \"12\": 4.716552203620204,\n                \"13\": 1.6847200675144842,\n                \"14\": 2.743062185536986,\n                \"15\": 1.8134957138445542,\n                \"16\": 2.017183652586159,\n                \"17\": 1.9342391008161994,\n                \"18\": 1.9968652978545731,\n                \"19\": 2.0247127913369964,\n                \"20\": 2.4035095438821745,\n                \"21\": 1.591347434312472,\n                \"22\": 3.8011142037193313,\n                \"23\": 2.0033583204570364,\n                \"24\": 1.6924451918218884,\n                \"25\": 2.607766553201097,\n                \"26\": 2.348229144084156,\n                \"27\": 1.36896964484507,\n                \"28\": 1.802495032670447,\n                \"29\": 2.347064626601787,\n                \"30\": 1.4844863505331602,\n                \"31\": 1.8870803325703545,\n                \"32\": 2.059201979042341,\n                \"33\": 0.8841965039899065,\n                \"34\": 1.6683802544359345,\n                \"35\": 2.905562794166876,\n                \"36\": 1.465105047319101,\n                \"37\": 2.0819383407296694,\n                \"38\": 1.9554247492149444,\n                \"39\": 1.312190961508175,\n                \"40\": 1.6475548327515188,\n                \"41\": 1.9460873004916222,\n                \"42\": 1.2445330774502885,\n                \"43\": 1.7742247158045883,\n                \"44\": 1.2583474110661494,\n                \"45\": 1.4503740649371768,\n                \"46\": 2.2607819048638023,\n                \"47\": 1.9803710488959632\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3949.19140625,\n                \"1\": 8.724590417134147,\n                \"2\": 3.2542261827005388,\n                \"3\": 4.022236803182498,\n                \"4\": 3.9328925600687166,\n                \"5\": 3.3281806957864846,\n                \"6\": 7.2898005293557935,\n                \"7\": 4.155900299971721,\n                \"8\": 4.605186088974911,\n                \"9\": 8.18132923964242,\n                \"10\": 3.8480600986991087,\n                \"11\": 7.458847546126106,\n                \"12\": 1.9707147032318268,\n                \"13\": 1.5333510621464586,\n                \"14\": 2.445079604910284,\n                \"15\": 4.088647263907047,\n                \"16\": 2.7654216975391974,\n                \"17\": 2.076988753358474,\n                \"18\": 4.582183028765055,\n                \"19\": 2.055419248085269,\n                \"20\": 2.3701294849809966,\n                \"21\": 1.9150611714433607,\n                \"22\": 2.269799627244941,\n                \"23\": 3.1337872616521314,\n                \"24\": 2.5241326290167727,\n                \"25\": 1.7049719069796723,\n                \"26\": 2.3485990162622654,\n                \"27\": 1.744809819421443,\n                \"28\": 1.5582060672617912,\n                \"29\": 2.294127551205965,\n                \"30\": 1.8006397224041821,\n                \"31\": 1.8091450755566774,\n                \"32\": 1.2523468985942563,\n                \"33\": 1.5950837499765376,\n                \"34\": 1.46495170828543,\n                \"35\": 1.7256372499219723,\n                \"36\": 2.446363566637544,\n                \"37\": 2.2700144753463363,\n                \"38\": 2.4954953083952436,\n                \"39\": 1.7479151946784528,\n                \"40\": 1.8459327577520004,\n                \"41\": 1.3955968686243412,\n                \"42\": 1.0869485259333072,\n                \"43\": 1.9981104912669432,\n                \"44\": 0.8730590443078081,\n                \"45\": 1.9901307858093977,\n                \"46\": 1.5091884062623173,\n                \"47\": 1.9507852625691169\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3950.166015625,\n                \"1\": 12.239701280755476,\n                \"2\": 10.473808928760135,\n                \"3\": 8.003221033468556,\n                \"4\": 6.315844123025042,\n                \"5\": 3.6384419056784965,\n                \"6\": 4.208869130028017,\n                \"7\": 4.355591309608222,\n                \"8\": 2.3527185831541906,\n                \"9\": 2.331704869107633,\n                \"10\": 1.7483698641090633,\n                \"11\": 2.6104248377362547,\n                \"12\": 2.3557876789716246,\n                \"13\": 2.24395638084619,\n                \"14\": 1.4643020260436204,\n                \"15\": 1.9058869099104565,\n                \"16\": 2.264983869895905,\n                \"17\": 2.6835860190159675,\n                \"18\": 2.1000193229149837,\n                \"19\": 1.8840487954295193,\n                \"20\": 2.3139966132781304,\n                \"21\": 2.0333083184167493,\n                \"22\": 2.5589120025847283,\n                \"23\": 1.5990231377696986,\n                \"24\": 1.9768463875125104,\n                \"25\": 2.886430729481777,\n                \"26\": 1.829907161510984,\n                \"27\": 1.9336739719972742,\n                \"28\": 1.9691489997919664,\n                \"29\": 2.124858674478484,\n                \"30\": 1.1131683928827902,\n                \"31\": 1.1952218671314834,\n                \"32\": 1.6126114905506985,\n                \"33\": 1.8191943226495635,\n                \"34\": 1.4304812099422042,\n                \"35\": 0.6191431815956366,\n                \"36\": 2.654512551890659,\n                \"37\": 2.0912322807496966,\n                \"38\": 1.9093441814115906,\n                \"39\": 1.3388012482121567,\n                \"40\": 1.2668103441576162,\n                \"41\": 1.1811936176025002,\n                \"42\": 1.8269625512699013,\n                \"43\": 1.2626237471088138,\n                \"44\": 1.0550741349505404,\n                \"45\": 1.403596238970146,\n                \"46\": 1.5409752563859496,\n                \"47\": 1.448061203792073\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3947.380859375,\n                \"1\": 5.537373981868738,\n                \"2\": 5.575790473765965,\n                \"3\": 5.1775791855118785,\n                \"4\": 5.9422154074331885,\n                \"5\": 2.605358422624756,\n                \"6\": 4.379603803514388,\n                \"7\": 4.570304610015385,\n                \"8\": 3.341110661155989,\n                \"9\": 4.218084131087659,\n                \"10\": 5.176549944805849,\n                \"11\": 4.108444941309102,\n                \"12\": 1.6557774531095308,\n                \"13\": 1.8306086761465103,\n                \"14\": 1.7086706975461132,\n                \"15\": 2.2553839042129873,\n                \"16\": 2.944602383331729,\n                \"17\": 2.148341469573041,\n                \"18\": 4.357721723504347,\n                \"19\": 3.6509521082012393,\n                \"20\": 2.118331775933945,\n                \"21\": 2.9946679990512424,\n                \"22\": 1.1628750800402363,\n                \"23\": 1.9971343363350875,\n                \"24\": 0.944560854559539,\n                \"25\": 1.0202321743234388,\n                \"26\": 1.8266161897767708,\n                \"27\": 1.1572372805842899,\n                \"28\": 2.0956832030995485,\n                \"29\": 4.5414092390246035,\n                \"30\": 1.8183973293018774,\n                \"31\": 2.1021894031275217,\n                \"32\": 2.2005172362916254,\n                \"33\": 1.8590071252452458,\n                \"34\": 1.4694956431751045,\n                \"35\": 2.1921244308382066,\n                \"36\": 2.3493496341123765,\n                \"37\": 0.8958569415543756,\n                \"38\": 1.037689440985811,\n                \"39\": 1.133989068809829,\n                \"40\": 1.8190593704232811,\n                \"41\": 1.5427450371686813,\n                \"42\": 1.394941505541387,\n                \"43\": 0.9822927505544082,\n                \"44\": 1.7332982404493937,\n                \"45\": 0.7414984978017588,\n                \"46\": 0.8958701374900622,\n                \"47\": 1.7669228570653235\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3930.828125,\n                \"1\": 9.310547822402473,\n                \"2\": 4.528790157215027,\n                \"3\": 4.146192616652378,\n                \"4\": 6.109941334953205,\n                \"5\": 4.241980057654835,\n                \"6\": 2.7948254853423684,\n                \"7\": 4.045499742734633,\n                \"8\": 3.2739714860195175,\n                \"9\": 3.0127234537718808,\n                \"10\": 2.337080082067465,\n                \"11\": 2.3755980279351276,\n                \"12\": 2.612060527373801,\n                \"13\": 2.6796604932537504,\n                \"14\": 2.7171086456071483,\n                \"15\": 1.5344238804437462,\n                \"16\": 3.030237190939251,\n                \"17\": 1.902549760639282,\n                \"18\": 1.9542788707565137,\n                \"19\": 1.0924153703911152,\n                \"20\": 2.5950486552201273,\n                \"21\": 2.5119089401666646,\n                \"22\": 1.9374160622955192,\n                \"23\": 2.823106606840903,\n                \"24\": 1.902581724291908,\n                \"25\": 1.4832236508787262,\n                \"26\": 1.8529839283768181,\n                \"27\": 2.861658818012275,\n                \"28\": 3.473331280032694,\n                \"29\": 1.7741997167015575,\n                \"30\": 1.4169199834721513,\n                \"31\": 2.391278590300698,\n                \"32\": 1.289974725521625,\n                \"33\": 1.5415931657420694,\n                \"34\": 1.7179820143977529,\n                \"35\": 1.8847536326302583,\n                \"36\": 2.065575265485471,\n                \"37\": 1.2062438703464127,\n                \"38\": 0.9516799538937921,\n                \"39\": 1.821805766794378,\n                \"40\": 1.9649646154283733,\n                \"41\": 1.1374627071016847,\n                \"42\": 2.4267624618351,\n                \"43\": 1.1597317627094825,\n                \"44\": 1.1090524904852552,\n                \"45\": 2.1012724307045776,\n                \"46\": 1.5416084447765825,\n                \"47\": 1.9378768003300795\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3935.2109375,\n                \"1\": 19.94238045368425,\n                \"2\": 4.532447703174168,\n                \"3\": 6.950426107240936,\n                \"4\": 4.896776299923718,\n                \"5\": 5.2157686248419,\n                \"6\": 4.399058172565673,\n                \"7\": 2.437135806065144,\n                \"8\": 2.9141481348994653,\n                \"9\": 4.878717070304632,\n                \"10\": 6.0487953086066435,\n                \"11\": 2.867162767860365,\n                \"12\": 3.4210259510438163,\n                \"13\": 2.902614216722825,\n                \"14\": 1.8531055835167805,\n                \"15\": 2.9011715501423287,\n                \"16\": 1.9218653941302533,\n                \"17\": 1.6661897776252241,\n                \"18\": 2.345320228547406,\n                \"19\": 2.0127987726479457,\n                \"20\": 1.2522036399554657,\n                \"21\": 1.8188849817907031,\n                \"22\": 2.689362051897891,\n                \"23\": 1.5770276175048148,\n                \"24\": 1.98104098287509,\n                \"25\": 1.2741480462367174,\n                \"26\": 1.8217969608757993,\n                \"27\": 1.8603827552794203,\n                \"28\": 1.5852131556438396,\n                \"29\": 2.7007299914618716,\n                \"30\": 1.4772669936762,\n                \"31\": 1.0522788921067456,\n                \"32\": 1.1249436831451847,\n                \"33\": 2.650790526894074,\n                \"34\": 1.5391833274373141,\n                \"35\": 1.5636314925369605,\n                \"36\": 1.275724696911627,\n                \"37\": 1.5604409621488387,\n                \"38\": 1.4104100550917769,\n                \"39\": 1.8210072671771316,\n                \"40\": 1.2397832932270112,\n                \"41\": 1.8379940678520879,\n                \"42\": 1.942515798828432,\n                \"43\": 1.3086041781159234,\n                \"44\": 0.7636135853860663,\n                \"45\": 1.1976129159502222,\n                \"46\": 1.4715433066255386,\n                \"47\": 1.9428011767066589\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3950.34765625,\n                \"1\": 6.781178637621014,\n                \"2\": 9.957304240014642,\n                \"3\": 6.516231935381561,\n                \"4\": 6.992137024332685,\n                \"5\": 4.233609565522129,\n                \"6\": 5.7286623514816295,\n                \"7\": 4.493892448009934,\n                \"8\": 3.4458792174553965,\n                \"9\": 2.734364717873087,\n                \"10\": 1.1905710636469942,\n                \"11\": 3.419737677935279,\n                \"12\": 1.4807848385933227,\n                \"13\": 3.483581630516389,\n                \"14\": 1.5165893013785967,\n                \"15\": 2.7927770093723328,\n                \"16\": 2.680897705781592,\n                \"17\": 2.0459469315225363,\n                \"18\": 2.253379904061565,\n                \"19\": 2.142787618337656,\n                \"20\": 2.8609065480089075,\n                \"21\": 2.2795285442326367,\n                \"22\": 1.9352190999042715,\n                \"23\": 1.1229273702897098,\n                \"24\": 2.6539661381796043,\n                \"25\": 2.35078974602325,\n                \"26\": 1.75439385011656,\n                \"27\": 2.8746988466013628,\n                \"28\": 1.6168989724616065,\n                \"29\": 2.1888663675709275,\n                \"30\": 2.8693368162634565,\n                \"31\": 1.7451825652261994,\n                \"32\": 2.0811963962946707,\n                \"33\": 1.2558544991672715,\n                \"34\": 2.051604484422615,\n                \"35\": 1.5387928770288897,\n                \"36\": 1.8453592411687108,\n                \"37\": 1.1318246016359947,\n                \"38\": 2.2533060282363295,\n                \"39\": 1.530197623494071,\n                \"40\": 1.8477502191943347,\n                \"41\": 1.2236933673942623,\n                \"42\": 1.4600012573706322,\n                \"43\": 0.8636723652487885,\n                \"44\": 1.7728980675204287,\n                \"45\": 1.5664170479233774,\n                \"46\": 0.630455445647482,\n                \"47\": 1.505904932543202\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3953.84375,\n                \"1\": 13.475888259819195,\n                \"2\": 5.255095706785952,\n                \"3\": 6.48234360661306,\n                \"4\": 8.592183362001142,\n                \"5\": 4.564358562393577,\n                \"6\": 3.8571053303467373,\n                \"7\": 3.383610160087356,\n                \"8\": 2.0504249239672845,\n                \"9\": 4.460334237544647,\n                \"10\": 2.904857076339762,\n                \"11\": 3.834594536432548,\n                \"12\": 2.849039960681453,\n                \"13\": 3.0919425550965487,\n                \"14\": 2.5539929584259924,\n                \"15\": 2.3894732708418074,\n                \"16\": 2.306156401246737,\n                \"17\": 1.9283363254102983,\n                \"18\": 1.299327515640821,\n                \"19\": 1.4449556718958736,\n                \"20\": 1.9179173922672128,\n                \"21\": 2.5708897306822633,\n                \"22\": 3.446871566438031,\n                \"23\": 2.2012780975197357,\n                \"24\": 2.8462204838734517,\n                \"25\": 1.9370714682299726,\n                \"26\": 2.3501430549166655,\n                \"27\": 1.1169888533093557,\n                \"28\": 3.1020499668471873,\n                \"29\": 1.2779406350000102,\n                \"30\": 2.278769927494098,\n                \"31\": 1.4690669887093841,\n                \"32\": 1.029374881511125,\n                \"33\": 0.7366865017031138,\n                \"34\": 1.1617417993903687,\n                \"35\": 2.2180545367082756,\n                \"36\": 1.937335653599181,\n                \"37\": 1.5265423894015615,\n                \"38\": 2.3995605001163165,\n                \"39\": 2.3102378115204125,\n                \"40\": 1.0354194197824729,\n                \"41\": 1.8462492038316725,\n                \"42\": 1.6908620167554602,\n                \"43\": 1.1575910591080876,\n                \"44\": 1.9655352813749463,\n                \"45\": 1.5256117332150172,\n                \"46\": 2.1389505294490174,\n                \"47\": 1.2798521511097374\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3929.595703125,\n                \"1\": 8.22929459713683,\n                \"2\": 5.302260845720303,\n                \"3\": 4.475347377606799,\n                \"4\": 5.038480451487264,\n                \"5\": 4.452687303977033,\n                \"6\": 3.215237655948879,\n                \"7\": 3.3658929330934604,\n                \"8\": 3.023020529230877,\n                \"9\": 1.9978235193334664,\n                \"10\": 2.083791018446876,\n                \"11\": 1.505253925955579,\n                \"12\": 3.3782001668583534,\n                \"13\": 2.0673784096394363,\n                \"14\": 2.2531952876598837,\n                \"15\": 1.7887875065309395,\n                \"16\": 1.939084260904215,\n                \"17\": 2.2693100047342623,\n                \"18\": 2.279724087377133,\n                \"19\": 1.56758585825005,\n                \"20\": 2.2893167153444716,\n                \"21\": 2.6328384294714615,\n                \"22\": 1.9068799894358355,\n                \"23\": 3.127636260630413,\n                \"24\": 2.625443192937773,\n                \"25\": 1.9015807448832498,\n                \"26\": 1.5184734581337986,\n                \"27\": 1.1461047225077166,\n                \"28\": 3.1925078427568883,\n                \"29\": 2.090855030067706,\n                \"30\": 1.6653074305107554,\n                \"31\": 2.1058745980470506,\n                \"32\": 2.793638582495025,\n                \"33\": 2.3729958614104487,\n                \"34\": 1.4064684804277956,\n                \"35\": 1.8908908564981413,\n                \"36\": 0.7833434429402634,\n                \"37\": 1.6005354565472678,\n                \"38\": 1.0035340473403505,\n                \"39\": 1.4756362501723648,\n                \"40\": 1.5179014442872576,\n                \"41\": 1.7390476872246474,\n                \"42\": 1.4527892738885821,\n                \"43\": 1.7935134970972455,\n                \"44\": 1.6022419357422888,\n                \"45\": 2.0684378097577003,\n                \"46\": 0.928299441876021,\n                \"47\": 1.3418298455769029\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3948.0546875,\n                \"1\": 7.21473851507753,\n                \"2\": 8.950520567706267,\n                \"3\": 4.410879885382731,\n                \"4\": 4.94388702668106,\n                \"5\": 3.7839729805240014,\n                \"6\": 4.5902538122046685,\n                \"7\": 2.7947045152586356,\n                \"8\": 3.6438619375006303,\n                \"9\": 3.1825214505686272,\n                \"10\": 4.02937113711258,\n                \"11\": 1.8657500717930873,\n                \"12\": 2.3659765709242877,\n                \"13\": 3.220311430547107,\n                \"14\": 1.9678747474989722,\n                \"15\": 1.3428257939468153,\n                \"16\": 2.686828888711073,\n                \"17\": 2.312338265652257,\n                \"18\": 3.341321156914924,\n                \"19\": 1.798508738746249,\n                \"20\": 2.2900649767395644,\n                \"21\": 2.1312170212281316,\n                \"22\": 2.0704542057761723,\n                \"23\": 1.8465455315668529,\n                \"24\": 2.1091661461598292,\n                \"25\": 1.474565981614509,\n                \"26\": 3.328132801984552,\n                \"27\": 2.362748297150017,\n                \"28\": 2.914066233668031,\n                \"29\": 1.5792928299019664,\n                \"30\": 2.2056769582047004,\n                \"31\": 1.6085519371846853,\n                \"32\": 1.7937287973300329,\n                \"33\": 2.1159249443237567,\n                \"34\": 1.1522089967561087,\n                \"35\": 1.4641068574669969,\n                \"36\": 1.1701734217397535,\n                \"37\": 2.061647712825336,\n                \"38\": 1.5233359856902282,\n                \"39\": 1.9199892403121308,\n                \"40\": 1.7375780257892752,\n                \"41\": 1.4946044923562656,\n                \"42\": 2.4116514596600434,\n                \"43\": 2.3084915495787826,\n                \"44\": 1.6262855665062925,\n                \"45\": 1.528682211692111,\n                \"46\": 2.148044840932989,\n                \"47\": 1.6841663321084035\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3949.46484375,\n                \"1\": 8.648433110879456,\n                \"2\": 8.238232240414254,\n                \"3\": 3.3275301360116774,\n                \"4\": 10.754928415261006,\n                \"5\": 6.257361175990672,\n                \"6\": 4.331908141040149,\n                \"7\": 1.7991067628899713,\n                \"8\": 2.9376848606711228,\n                \"9\": 2.6683946335386617,\n                \"10\": 2.296754168031687,\n                \"11\": 3.9682468914742746,\n                \"12\": 3.006233734203219,\n                \"13\": 3.098037872488595,\n                \"14\": 1.9591635554200022,\n                \"15\": 2.1261752192143017,\n                \"16\": 1.8335564901401242,\n                \"17\": 2.746795497159412,\n                \"18\": 3.403633576763196,\n                \"19\": 3.200597169003629,\n                \"20\": 1.1351368484001858,\n                \"21\": 2.89354121632434,\n                \"22\": 2.90004491252406,\n                \"23\": 1.8051502362822331,\n                \"24\": 2.594187810404682,\n                \"25\": 2.2140031731323018,\n                \"26\": 2.0825775256014962,\n                \"27\": 1.0275770724403634,\n                \"28\": 2.823483062997745,\n                \"29\": 1.576720797801641,\n                \"30\": 1.6237906803061157,\n                \"31\": 1.278558321255968,\n                \"32\": 1.965706029954967,\n                \"33\": 1.427652800999512,\n                \"34\": 1.3722295301101506,\n                \"35\": 1.9284039297754045,\n                \"36\": 1.904374651320342,\n                \"37\": 0.9617368056738063,\n                \"38\": 1.0628031707706362,\n                \"39\": 1.9184851844237403,\n                \"40\": 1.2336564644749948,\n                \"41\": 2.1690466828456074,\n                \"42\": 1.6472169306866145,\n                \"43\": 2.0844128589452966,\n                \"44\": 2.3622337040974974,\n                \"45\": 2.311902469239529,\n                \"46\": 1.969371598242069,\n                \"47\": 0.724780820575446\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3942.154296875,\n                \"1\": 8.138535434315301,\n                \"2\": 6.018480758028913,\n                \"3\": 5.833417240250175,\n                \"4\": 7.989293839692687,\n                \"5\": 3.3660187920326368,\n                \"6\": 5.2118841828670375,\n                \"7\": 3.7723109747510195,\n                \"8\": 3.8051283436840304,\n                \"9\": 1.3455588603706028,\n                \"10\": 1.3726390350995519,\n                \"11\": 3.3776896897532103,\n                \"12\": 2.784433355470343,\n                \"13\": 1.4461025061907948,\n                \"14\": 3.922002001717823,\n                \"15\": 1.11536620720381,\n                \"16\": 2.1235753426047395,\n                \"17\": 2.173971085150206,\n                \"18\": 2.2264719781759004,\n                \"19\": 1.79356329292074,\n                \"20\": 1.8805161422303849,\n                \"21\": 1.8346021375222556,\n                \"22\": 2.4517748536641735,\n                \"23\": 2.8165652668416996,\n                \"24\": 1.9048664458950937,\n                \"25\": 3.597641009209208,\n                \"26\": 2.124470363019095,\n                \"27\": 0.644861909079858,\n                \"28\": 1.7387739752323255,\n                \"29\": 1.400705376014626,\n                \"30\": 3.2839363104835844,\n                \"31\": 2.543818507165458,\n                \"32\": 1.9032363663350937,\n                \"33\": 1.4400877890891928,\n                \"34\": 1.636306520615388,\n                \"35\": 1.4394487842296342,\n                \"36\": 1.995137336758294,\n                \"37\": 1.145170758959833,\n                \"38\": 2.1104301649850234,\n                \"39\": 1.6767419137325141,\n                \"40\": 2.1220528016236786,\n                \"41\": 2.143423974737909,\n                \"42\": 2.4290944925422058,\n                \"43\": 1.1632110715718729,\n                \"44\": 1.5126539472792766,\n                \"45\": 1.9395356559012555,\n                \"46\": 1.1077432335388617,\n                \"47\": 1.4174938757634508\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3943.615234375,\n                \"1\": 11.261629123644688,\n                \"2\": 3.8254565486992274,\n                \"3\": 6.156992899114936,\n                \"4\": 4.566328400875674,\n                \"5\": 3.032553693220436,\n                \"6\": 2.6415481898030144,\n                \"7\": 2.975512426783968,\n                \"8\": 2.8476564475181636,\n                \"9\": 6.628254228719962,\n                \"10\": 3.6738910071779953,\n                \"11\": 2.39702128295911,\n                \"12\": 3.5931604597639133,\n                \"13\": 1.967692302502949,\n                \"14\": 2.745542029350237,\n                \"15\": 1.7749252012993648,\n                \"16\": 1.8898943589767023,\n                \"17\": 3.7425940687738226,\n                \"18\": 3.1479304056886206,\n                \"19\": 3.671346857060642,\n                \"20\": 2.041146385265498,\n                \"21\": 1.7938905043677424,\n                \"22\": 2.082771333655559,\n                \"23\": 1.6113696728629212,\n                \"24\": 1.3457115834640143,\n                \"25\": 2.210169524663049,\n                \"26\": 1.786520687967358,\n                \"27\": 1.1695712446497661,\n                \"28\": 1.3711197299109532,\n                \"29\": 1.965639796646072,\n                \"30\": 1.3653304198434784,\n                \"31\": 1.7712728862908094,\n                \"32\": 2.5233324285704923,\n                \"33\": 2.4542355969151193,\n                \"34\": 2.92994877116773,\n                \"35\": 0.7115057983189688,\n                \"36\": 1.9716938958144172,\n                \"37\": 1.5424596755871076,\n                \"38\": 1.2193889355482797,\n                \"39\": 1.1451217304404566,\n                \"40\": 2.2072095526310567,\n                \"41\": 1.2669397495664751,\n                \"42\": 1.7431988208736164,\n                \"43\": 1.6094867952346046,\n                \"44\": 1.871877484954802,\n                \"45\": 1.7747261600585984,\n                \"46\": 1.303509128507995,\n                \"47\": 2.2011871193773893\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3948.837890625,\n                \"1\": 9.419513041587866,\n                \"2\": 4.115243570645481,\n                \"3\": 7.107888982759693,\n                \"4\": 4.97097213352897,\n                \"5\": 3.777758448505659,\n                \"6\": 4.1863942869772,\n                \"7\": 4.5099676734132,\n                \"8\": 3.2969061397066617,\n                \"9\": 3.06445136370771,\n                \"10\": 3.628211343781625,\n                \"11\": 3.04564767825467,\n                \"12\": 1.959247077181078,\n                \"13\": 2.368686966712416,\n                \"14\": 1.8008487370882924,\n                \"15\": 4.444077243210413,\n                \"16\": 2.0996681526781367,\n                \"17\": 2.3453678709053936,\n                \"18\": 2.84228215284522,\n                \"19\": 2.2595147910475735,\n                \"20\": 2.5372153852641786,\n                \"21\": 2.456913123200836,\n                \"22\": 1.9945874391853227,\n                \"23\": 3.6012310877182836,\n                \"24\": 2.045817893193835,\n                \"25\": 2.5784645643367576,\n                \"26\": 1.8142762520567126,\n                \"27\": 1.0957227834305892,\n                \"28\": 2.162627084521942,\n                \"29\": 1.0606023011106926,\n                \"30\": 1.8778171017244498,\n                \"31\": 1.801823577710663,\n                \"32\": 2.2453824222694996,\n                \"33\": 2.689675606167631,\n                \"34\": 1.4038186032660644,\n                \"35\": 2.3624886460758607,\n                \"36\": 0.9709380280953115,\n                \"37\": 1.3667121325322218,\n                \"38\": 1.3867806584722333,\n                \"39\": 1.629773382855984,\n                \"40\": 1.6757859505002821,\n                \"41\": 1.9231350492702246,\n                \"42\": 1.2784519772864247,\n                \"43\": 1.3877188641132936,\n                \"44\": 1.8497596970921923,\n                \"45\": 2.1967766359168484,\n                \"46\": 1.239088780920079,\n                \"47\": 2.131478340458954\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3943.162109375,\n                \"1\": 16.34341962783977,\n                \"2\": 6.768414990640515,\n                \"3\": 2.9213808882939967,\n                \"4\": 5.10169864834283,\n                \"5\": 3.567876809658429,\n                \"6\": 2.454742554507526,\n                \"7\": 3.104026728993497,\n                \"8\": 2.288345198476293,\n                \"9\": 4.608616942810927,\n                \"10\": 5.168528400522126,\n                \"11\": 2.0259811734785207,\n                \"12\": 3.0062839529440413,\n                \"13\": 2.104091069322047,\n                \"14\": 1.9599437667045005,\n                \"15\": 3.3956777882787152,\n                \"16\": 2.4665945112659458,\n                \"17\": 3.352585507074846,\n                \"18\": 2.480763856308062,\n                \"19\": 2.0689749674474505,\n                \"20\": 2.3383451715719885,\n                \"21\": 1.5635932705621793,\n                \"22\": 1.8479044180643138,\n                \"23\": 2.1521426766024034,\n                \"24\": 2.252476311829864,\n                \"25\": 2.701931936729925,\n                \"26\": 2.0439271930492486,\n                \"27\": 1.8628236079759026,\n                \"28\": 2.0815216484200687,\n                \"29\": 1.6525261991176459,\n                \"30\": 1.391058742380517,\n                \"31\": 2.562523923132148,\n                \"32\": 1.2497190064329917,\n                \"33\": 2.2132254785304895,\n                \"34\": 1.1785432276071544,\n                \"35\": 2.4219065615728734,\n                \"36\": 2.473131215102469,\n                \"37\": 1.6200311000168197,\n                \"38\": 1.1429300489277292,\n                \"39\": 1.2522246308681164,\n                \"40\": 2.1219212846591446,\n                \"41\": 1.962039466826863,\n                \"42\": 1.3361024180860812,\n                \"43\": 1.748681619580317,\n                \"44\": 1.636108807665598,\n                \"45\": 3.184419475982167,\n                \"46\": 2.0355194084036876,\n                \"47\": 3.2136322569829963\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3947.115234375,\n                \"1\": 8.879460966816378,\n                \"2\": 5.771411563199928,\n                \"3\": 4.969753659108693,\n                \"4\": 3.040483955382759,\n                \"5\": 7.406382075811877,\n                \"6\": 2.6303412699500273,\n                \"7\": 3.4537829184315,\n                \"8\": 1.5433468522769642,\n                \"9\": 2.736136278305516,\n                \"10\": 3.665365612599526,\n                \"11\": 1.8917580767559568,\n                \"12\": 2.610298249560688,\n                \"13\": 2.3369810053266336,\n                \"14\": 2.530393157371589,\n                \"15\": 1.5317648180604233,\n                \"16\": 2.8511175998897547,\n                \"17\": 2.2021516309062785,\n                \"18\": 3.2126317927404546,\n                \"19\": 2.5331160949854845,\n                \"20\": 1.9941168096176154,\n                \"21\": 4.069960179594785,\n                \"22\": 1.6592638955111882,\n                \"23\": 2.70460607247989,\n                \"24\": 3.4178967916171907,\n                \"25\": 2.8632313974827017,\n                \"26\": 1.8239218493986704,\n                \"27\": 2.2758332860730466,\n                \"28\": 1.5683350577837825,\n                \"29\": 2.4168645868544067,\n                \"30\": 2.3823736586051107,\n                \"31\": 1.7516303106135718,\n                \"32\": 2.8861969562797847,\n                \"33\": 2.096859639285037,\n                \"34\": 3.757059750616695,\n                \"35\": 3.9045275473030046,\n                \"36\": 2.124792261393695,\n                \"37\": 3.9602346161166997,\n                \"38\": 2.811652653576815,\n                \"39\": 2.34555028906919,\n                \"40\": 3.4535696344038724,\n                \"41\": 3.8500330637214666,\n                \"42\": 4.252661795952383,\n                \"43\": 3.0291162991606018,\n                \"44\": 4.107752579981412,\n                \"45\": 3.5796672995505086,\n                \"46\": 3.15270516809822,\n                \"47\": 4.391741907518441\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3944.94921875,\n                \"1\": 9.49704751139015,\n                \"2\": 6.880454693389558,\n                \"3\": 5.233520942015728,\n                \"4\": 4.422571269197473,\n                \"5\": 3.2474510769812577,\n                \"6\": 3.7151447077759334,\n                \"7\": 3.5805554542194886,\n                \"8\": 2.1407184348672774,\n                \"9\": 3.175580512919524,\n                \"10\": 3.813294209211909,\n                \"11\": 2.4211589749657856,\n                \"12\": 2.3235967794093524,\n                \"13\": 2.4091982404581254,\n                \"14\": 2.4908327536452735,\n                \"15\": 3.0413877994381813,\n                \"16\": 1.4315590891246814,\n                \"17\": 1.5786872222840262,\n                \"18\": 1.3570913705034218,\n                \"19\": 1.7058331881728876,\n                \"20\": 3.9016045031872935,\n                \"21\": 1.8022350166597416,\n                \"22\": 1.758627592439813,\n                \"23\": 3.2167222602478778,\n                \"24\": 1.5084553380016172,\n                \"25\": 1.9455148394134603,\n                \"26\": 2.101135555777951,\n                \"27\": 2.2202898267877806,\n                \"28\": 1.9161255232381333,\n                \"29\": 3.3327818486142373,\n                \"30\": 2.7635005976189237,\n                \"31\": 1.7813010419901816,\n                \"32\": 1.6777152843124077,\n                \"33\": 2.865782272046723,\n                \"34\": 2.2278345554990557,\n                \"35\": 1.3472482900025144,\n                \"36\": 1.2687692231305794,\n                \"37\": 1.531301836554805,\n                \"38\": 2.4360543610376477,\n                \"39\": 2.4237199292411664,\n                \"40\": 1.2353532696503013,\n                \"41\": 1.811177790530393,\n                \"42\": 2.4658600080288884,\n                \"43\": 1.7278564428326195,\n                \"44\": 1.7918958991463318,\n                \"45\": 2.7051674031229354,\n                \"46\": 2.7232160526306517,\n                \"47\": 1.572760119773526\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3935.130859375,\n                \"1\": 12.010675470377112,\n                \"2\": 9.146856498575556,\n                \"3\": 7.05659358492498,\n                \"4\": 2.1356157787131664,\n                \"5\": 3.576638357417837,\n                \"6\": 3.334398724596963,\n                \"7\": 5.481941858414547,\n                \"8\": 3.1151904738328913,\n                \"9\": 1.2200179695393647,\n                \"10\": 3.0513452717572407,\n                \"11\": 2.7611593754358794,\n                \"12\": 2.1415925273444087,\n                \"13\": 2.972850522090642,\n                \"14\": 3.1459766247758565,\n                \"15\": 1.7651465050482549,\n                \"16\": 1.7914653026333585,\n                \"17\": 1.8704464480867702,\n                \"18\": 1.4940904870999376,\n                \"19\": 1.8386914680452269,\n                \"20\": 1.5365056053536301,\n                \"21\": 1.724976327563612,\n                \"22\": 1.4076843404661776,\n                \"23\": 1.6186814157174183,\n                \"24\": 2.265805269840909,\n                \"25\": 1.8108830198565526,\n                \"26\": 2.5032890445976443,\n                \"27\": 3.2567285835544535,\n                \"28\": 2.0301674496871662,\n                \"29\": 2.7042902310055275,\n                \"30\": 1.8571967958974531,\n                \"31\": 1.4177325548272055,\n                \"32\": 1.4812351892218656,\n                \"33\": 1.2091677740465858,\n                \"34\": 0.6891710977535214,\n                \"35\": 1.1268072985946906,\n                \"36\": 1.4838136935265132,\n                \"37\": 1.0947237399923018,\n                \"38\": 2.215821802087301,\n                \"39\": 2.141347407875281,\n                \"40\": 1.0259332507404773,\n                \"41\": 1.5970141319372426,\n                \"42\": 1.4394024493843167,\n                \"43\": 1.7857712955262315,\n                \"44\": 1.6864645008909849,\n                \"45\": 1.9651072741879916,\n                \"46\": 1.391753143226767,\n                \"47\": 1.3699093573878884\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3950.154296875,\n                \"1\": 5.2731828925286885,\n                \"2\": 5.331798950800506,\n                \"3\": 3.6114246212111767,\n                \"4\": 6.3127701836773005,\n                \"5\": 2.820016810486461,\n                \"6\": 4.74557284042028,\n                \"7\": 2.2159502875969315,\n                \"8\": 5.9422844116162885,\n                \"9\": 3.6348018504167063,\n                \"10\": 2.1781891750182014,\n                \"11\": 3.5268851553985683,\n                \"12\": 1.976478197271737,\n                \"13\": 3.0225070446772486,\n                \"14\": 3.0951805431054016,\n                \"15\": 1.8345953230029082,\n                \"16\": 1.8888647344656775,\n                \"17\": 1.5411469361258663,\n                \"18\": 2.832878817800086,\n                \"19\": 2.4545502659214415,\n                \"20\": 0.9206312857449314,\n                \"21\": 1.8524038744732023,\n                \"22\": 1.3623286484705561,\n                \"23\": 2.4543001607455555,\n                \"24\": 2.682719916284979,\n                \"25\": 1.9499090379276076,\n                \"26\": 1.9766951602655736,\n                \"27\": 0.9448304415132951,\n                \"28\": 1.6654789908489258,\n                \"29\": 1.8124658627599455,\n                \"30\": 1.4655822391136024,\n                \"31\": 1.7647315702747102,\n                \"32\": 1.6370102830884425,\n                \"33\": 1.3853601111607716,\n                \"34\": 1.9513941264328827,\n                \"35\": 2.7092512961457573,\n                \"36\": 1.602226689952302,\n                \"37\": 1.5340053921381167,\n                \"38\": 2.872324160905683,\n                \"39\": 1.9329750457521981,\n                \"40\": 1.4834396921764905,\n                \"41\": 1.3334608154532253,\n                \"42\": 1.7584246160570574,\n                \"43\": 2.5504677687211954,\n                \"44\": 0.9593332229663584,\n                \"45\": 1.8264503211317777,\n                \"46\": 1.51160677395642,\n                \"47\": 1.3409809482624269\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3946.09765625,\n                \"1\": 4.831319830187603,\n                \"2\": 5.929614212454301,\n                \"3\": 4.5208261483312295,\n                \"4\": 2.9368641872526986,\n                \"5\": 5.987357159302064,\n                \"6\": 5.825805485517479,\n                \"7\": 3.282406658879867,\n                \"8\": 3.6388290297893398,\n                \"9\": 3.1344335651671185,\n                \"10\": 2.3670394616501,\n                \"11\": 4.505149088150283,\n                \"12\": 3.802602703282275,\n                \"13\": 2.4458530337858018,\n                \"14\": 2.3434956471828596,\n                \"15\": 2.8628642986440105,\n                \"16\": 2.7937694399225332,\n                \"17\": 2.3292575890164247,\n                \"18\": 2.219382969145145,\n                \"19\": 2.353926975278459,\n                \"20\": 2.8500790277235404,\n                \"21\": 2.309286747189029,\n                \"22\": 1.51523489538807,\n                \"23\": 2.5411972430737593,\n                \"24\": 1.7619103822038444,\n                \"25\": 2.899934424963735,\n                \"26\": 2.8989769907174923,\n                \"27\": 2.4848424452924833,\n                \"28\": 2.590551211289169,\n                \"29\": 1.771806588243485,\n                \"30\": 2.000646186864359,\n                \"31\": 2.0560692341319675,\n                \"32\": 2.175924534891305,\n                \"33\": 0.6265967083115258,\n                \"34\": 1.9533049114993708,\n                \"35\": 1.479116657172605,\n                \"36\": 1.783860835132833,\n                \"37\": 1.5321966577864012,\n                \"38\": 1.192474072410284,\n                \"39\": 2.9889160944056052,\n                \"40\": 1.9981256072988105,\n                \"41\": 3.2527430803664688,\n                \"42\": 1.9569052862464682,\n                \"43\": 2.3672320912848326,\n                \"44\": 1.7117902918495305,\n                \"45\": 2.2913618985442046,\n                \"46\": 2.394908363998051,\n                \"47\": 2.4682558398185783\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3931.765625,\n                \"1\": 8.153812719714416,\n                \"2\": 1.4835534256279903,\n                \"3\": 3.201084629223203,\n                \"4\": 2.426937805870004,\n                \"5\": 4.008685038989327,\n                \"6\": 3.016681061500409,\n                \"7\": 4.220037988368814,\n                \"8\": 1.5961519209296045,\n                \"9\": 3.6789523167735303,\n                \"10\": 3.0274791455092123,\n                \"11\": 2.176654171639833,\n                \"12\": 3.7580813097653167,\n                \"13\": 2.2604882502124486,\n                \"14\": 1.5590966628767169,\n                \"15\": 1.8186324923390722,\n                \"16\": 2.186482359516866,\n                \"17\": 3.1241413389080432,\n                \"18\": 1.7227877052441296,\n                \"19\": 2.636471490672048,\n                \"20\": 1.4927105114911654,\n                \"21\": 2.448375518548643,\n                \"22\": 2.087449387244665,\n                \"23\": 1.3740743406424576,\n                \"24\": 1.6205850198718723,\n                \"25\": 2.2460961303309563,\n                \"26\": 1.4796224393319972,\n                \"27\": 2.362242518363152,\n                \"28\": 3.2751764733410704,\n                \"29\": 2.043857902206337,\n                \"30\": 1.6461020733571654,\n                \"31\": 2.125254867633764,\n                \"32\": 1.3194978666837751,\n                \"33\": 1.5381625521844744,\n                \"34\": 2.313125146942938,\n                \"35\": 2.1155468528793633,\n                \"36\": 1.4059729943353432,\n                \"37\": 1.976728414775301,\n                \"38\": 2.0497842179563204,\n                \"39\": 1.6982089884509177,\n                \"40\": 2.106982405064343,\n                \"41\": 2.176363572297685,\n                \"42\": 3.630348022056247,\n                \"43\": 1.3097290614227421,\n                \"44\": 1.6258369109647315,\n                \"45\": 1.468297279559363,\n                \"46\": 2.0920702368000352,\n                \"47\": 1.4710384966506882\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3936.234375,\n                \"1\": 5.779717044477678,\n                \"2\": 6.702241123188494,\n                \"3\": 4.590819796865716,\n                \"4\": 4.925664709751609,\n                \"5\": 4.144087739194098,\n                \"6\": 4.462071561273728,\n                \"7\": 3.218120897997914,\n                \"8\": 3.7516065562805845,\n                \"9\": 2.2669567260606347,\n                \"10\": 3.6613509929448833,\n                \"11\": 2.288900479716694,\n                \"12\": 2.9741330997832667,\n                \"13\": 2.585354801515832,\n                \"14\": 2.3649101962977737,\n                \"15\": 3.552465272320381,\n                \"16\": 2.688576162223329,\n                \"17\": 1.547630580304499,\n                \"18\": 3.7010726084085963,\n                \"19\": 1.862771579839016,\n                \"20\": 2.1846828777804466,\n                \"21\": 2.4537440046506234,\n                \"22\": 2.1098271057962017,\n                \"23\": 2.2586815345800577,\n                \"24\": 3.0328209011737646,\n                \"25\": 3.2848871176067527,\n                \"26\": 2.4181584255781527,\n                \"27\": 1.3094922912029114,\n                \"28\": 2.266466473095223,\n                \"29\": 1.492096626200138,\n                \"30\": 1.5858980447681548,\n                \"31\": 1.8222586576217261,\n                \"32\": 2.219024372706386,\n                \"33\": 1.8965345518019263,\n                \"34\": 2.1352196279740845,\n                \"35\": 1.1524358315133363,\n                \"36\": 2.2932528062776187,\n                \"37\": 2.9803466882549268,\n                \"38\": 1.1921251876453227,\n                \"39\": 2.588055106123217,\n                \"40\": 3.0573067389392943,\n                \"41\": 2.1685339531962424,\n                \"42\": 1.9598170907763337,\n                \"43\": 1.056906860638301,\n                \"44\": 2.4517396427944025,\n                \"45\": 2.321973233592002,\n                \"46\": 1.2157166690065255,\n                \"47\": 1.6582823032323804\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3951.53125,\n                \"1\": 8.8233469599828,\n                \"2\": 5.303034582513114,\n                \"3\": 3.719675217534087,\n                \"4\": 4.497296881376656,\n                \"5\": 5.183677609788154,\n                \"6\": 4.641578003294118,\n                \"7\": 3.6353645771688434,\n                \"8\": 3.7569488021391892,\n                \"9\": 3.396979236780636,\n                \"10\": 2.3293390391733038,\n                \"11\": 2.40434577281421,\n                \"12\": 2.913689575599371,\n                \"13\": 1.1905979806624276,\n                \"14\": 1.8495951219956273,\n                \"15\": 1.3316111618731492,\n                \"16\": 1.4873631933606315,\n                \"17\": 2.3047980980221765,\n                \"18\": 2.4041665943612602,\n                \"19\": 1.8338527840050634,\n                \"20\": 1.7622425029211384,\n                \"21\": 2.068688149675676,\n                \"22\": 2.454035004397511,\n                \"23\": 2.5988854297402266,\n                \"24\": 2.8765956028082513,\n                \"25\": 1.7649209303661357,\n                \"26\": 2.3806575089786683,\n                \"27\": 2.00481871040651,\n                \"28\": 1.8670085368650686,\n                \"29\": 2.50096670208453,\n                \"30\": 1.7852807868725802,\n                \"31\": 1.933874194113789,\n                \"32\": 1.9549879641363788,\n                \"33\": 1.345243599761793,\n                \"34\": 1.1749269529266522,\n                \"35\": 1.833468576296919,\n                \"36\": 2.355732239901883,\n                \"37\": 2.1105948386357793,\n                \"38\": 2.0191799325004256,\n                \"39\": 2.1841702097718247,\n                \"40\": 1.7350890860372028,\n                \"41\": 1.8274171845461469,\n                \"42\": 1.472265833365978,\n                \"43\": 1.1210348170408275,\n                \"44\": 1.3778526514674723,\n                \"45\": 2.0378724073312857,\n                \"46\": 2.4467330962177325,\n                \"47\": 1.769812731168443\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3941.796875,\n                \"1\": 12.124424901074324,\n                \"2\": 7.568059066025771,\n                \"3\": 6.28242209566344,\n                \"4\": 4.60892468860381,\n                \"5\": 5.762585044489963,\n                \"6\": 3.1422967906249513,\n                \"7\": 3.062901109196999,\n                \"8\": 2.7639529556841884,\n                \"9\": 2.3234435939120806,\n                \"10\": 2.659036659246917,\n                \"11\": 2.2970337777692276,\n                \"12\": 2.283046053656564,\n                \"13\": 3.310326918957639,\n                \"14\": 3.5459206763866393,\n                \"15\": 1.2963172381885146,\n                \"16\": 2.5819260032353184,\n                \"17\": 1.9797863837439686,\n                \"18\": 2.8220438596466493,\n                \"19\": 1.675579668420314,\n                \"20\": 3.4471903095861443,\n                \"21\": 2.0392709664183726,\n                \"22\": 1.6461364742265077,\n                \"23\": 1.8178332714850445,\n                \"24\": 2.234857849142791,\n                \"25\": 1.3505177036336553,\n                \"26\": 1.3670796030239543,\n                \"27\": 1.6077817104696912,\n                \"28\": 1.8467321339620988,\n                \"29\": 2.7445318105255687,\n                \"30\": 1.6229099718201159,\n                \"31\": 1.8815070071628908,\n                \"32\": 2.634819856588883,\n                \"33\": 2.086889709995274,\n                \"34\": 2.776651125391913,\n                \"35\": 2.3321433603701496,\n                \"36\": 0.7268094914292518,\n                \"37\": 1.3592908602330307,\n                \"38\": 1.5760385609732506,\n                \"39\": 2.1789885132499043,\n                \"40\": 1.0916406553031033,\n                \"41\": 1.6959707009850553,\n                \"42\": 2.2427351072687034,\n                \"43\": 1.8722318384175831,\n                \"44\": 1.2565953352266275,\n                \"45\": 1.7095580645911908,\n                \"46\": 1.2896458274453366,\n                \"47\": 2.042278133610416\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3931.337890625,\n                \"1\": 5.481775769392678,\n                \"2\": 4.898284127851284,\n                \"3\": 5.549378658790603,\n                \"4\": 4.455726337412172,\n                \"5\": 4.525871909059173,\n                \"6\": 3.6999133352291347,\n                \"7\": 4.395554804343536,\n                \"8\": 2.1529564225126516,\n                \"9\": 1.6315508771690714,\n                \"10\": 3.364055057654761,\n                \"11\": 2.5535919502419273,\n                \"12\": 1.6804380169852422,\n                \"13\": 2.3542806680891326,\n                \"14\": 2.150329256732142,\n                \"15\": 2.1639396452245268,\n                \"16\": 2.810062920453249,\n                \"17\": 2.5132964761716146,\n                \"18\": 2.5416129416968096,\n                \"19\": 2.58155832764103,\n                \"20\": 1.6318083425850725,\n                \"21\": 3.5634573084380894,\n                \"22\": 3.2760692212980045,\n                \"23\": 1.7440846302721082,\n                \"24\": 3.293926332573544,\n                \"25\": 2.519790817593689,\n                \"26\": 2.65418641568872,\n                \"27\": 2.4561668118681848,\n                \"28\": 2.170848428854036,\n                \"29\": 1.640594401525109,\n                \"30\": 2.488246600484529,\n                \"31\": 2.1699769783087204,\n                \"32\": 2.887205459108107,\n                \"33\": 1.7191471413954282,\n                \"34\": 2.6246655199081506,\n                \"35\": 1.641411553291153,\n                \"36\": 1.885157487725741,\n                \"37\": 2.1642145098621897,\n                \"38\": 2.041430342589882,\n                \"39\": 2.1680161320385487,\n                \"40\": 1.4632910294793673,\n                \"41\": 2.021696280266708,\n                \"42\": 1.7157314708443363,\n                \"43\": 1.2119054945951988,\n                \"44\": 2.0955835204486086,\n                \"45\": 1.676843808960575,\n                \"46\": 1.2516106614831912,\n                \"47\": 0.9809615134227354\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3955.6875,\n                \"1\": 9.774517754032418,\n                \"2\": 4.173771791779855,\n                \"3\": 5.734649398355232,\n                \"4\": 3.383775585294546,\n                \"5\": 2.8724986281471914,\n                \"6\": 2.593032124270753,\n                \"7\": 3.0611170677477766,\n                \"8\": 2.300461753962024,\n                \"9\": 3.4204995714156685,\n                \"10\": 3.2524032413330675,\n                \"11\": 3.751857906579413,\n                \"12\": 2.3812112796277787,\n                \"13\": 1.8264133297391016,\n                \"14\": 2.3795620575557193,\n                \"15\": 2.5630345459487733,\n                \"16\": 2.070771410542359,\n                \"17\": 1.7675716296815909,\n                \"18\": 2.115290630956104,\n                \"19\": 1.3321162687190298,\n                \"20\": 3.1357720132678035,\n                \"21\": 2.8228291656473625,\n                \"22\": 1.5193806525853661,\n                \"23\": 2.312864136612849,\n                \"24\": 2.7162779514777218,\n                \"25\": 2.3458910882509354,\n                \"26\": 1.9323384506080785,\n                \"27\": 2.001224301463017,\n                \"28\": 2.6007847912480866,\n                \"29\": 2.3239891897261815,\n                \"30\": 2.048325066435314,\n                \"31\": 1.8860847140822994,\n                \"32\": 1.7443552465159111,\n                \"33\": 1.7143802605893643,\n                \"34\": 1.8167064908472725,\n                \"35\": 1.6577970562293691,\n                \"36\": 2.556218898773999,\n                \"37\": 1.2555364329125385,\n                \"38\": 1.8429528273569018,\n                \"39\": 2.3511566861517696,\n                \"40\": 1.0041813165940114,\n                \"41\": 1.7285440039483926,\n                \"42\": 1.6970800519227134,\n                \"43\": 1.456671949573103,\n                \"44\": 2.068748409372663,\n                \"45\": 1.6288409567505089,\n                \"46\": 2.7492301028889985,\n                \"47\": 1.6957274490352954\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3947.8203125,\n                \"1\": 4.920232440931891,\n                \"2\": 3.171887640610195,\n                \"3\": 5.453590554257471,\n                \"4\": 4.854928125070496,\n                \"5\": 3.7879767304824807,\n                \"6\": 3.6359005660878094,\n                \"7\": 4.266443428619043,\n                \"8\": 4.437574261317471,\n                \"9\": 4.141382478400471,\n                \"10\": 2.6383201098749542,\n                \"11\": 6.06983162030204,\n                \"12\": 4.427235228263761,\n                \"13\": 4.068348557406434,\n                \"14\": 2.278967016764383,\n                \"15\": 2.05258683144509,\n                \"16\": 2.4605131107668288,\n                \"17\": 3.8353061009097957,\n                \"18\": 2.0548014161704256,\n                \"19\": 2.8183507232392624,\n                \"20\": 2.4480475436585976,\n                \"21\": 2.7975660825580917,\n                \"22\": 1.5003621014058934,\n                \"23\": 1.3308605998245424,\n                \"24\": 1.4720528876446086,\n                \"25\": 2.320460831038713,\n                \"26\": 1.588478116476782,\n                \"27\": 2.81495608871064,\n                \"28\": 2.3075254985413096,\n                \"29\": 1.9933770330490415,\n                \"30\": 1.8596216167636248,\n                \"31\": 1.4701443973855812,\n                \"32\": 2.0340265980863075,\n                \"33\": 1.915676316170639,\n                \"34\": 1.8682661972788646,\n                \"35\": 2.0462372343245554,\n                \"36\": 2.198019170935952,\n                \"37\": 2.39470939133924,\n                \"38\": 2.2879103087724095,\n                \"39\": 1.0070351979013559,\n                \"40\": 1.2029338041361632,\n                \"41\": 1.557671082170415,\n                \"42\": 2.3496438505571966,\n                \"43\": 1.8730126173838375,\n                \"44\": 1.173758994487378,\n                \"45\": 0.9658245923519524,\n                \"46\": 0.9702779633249611,\n                \"47\": 1.7744522416633923\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3942.453125,\n                \"1\": 7.869133178523647,\n                \"2\": 3.5121796308705293,\n                \"3\": 8.402106698224966,\n                \"4\": 3.1953609728253114,\n                \"5\": 2.3757415436040086,\n                \"6\": 2.3390940984803286,\n                \"7\": 2.7468864397108828,\n                \"8\": 4.106563793939627,\n                \"9\": 3.4728788658444483,\n                \"10\": 3.110435283103346,\n                \"11\": 3.2593115388833507,\n                \"12\": 1.3867420078443495,\n                \"13\": 1.7215538912850337,\n                \"14\": 1.314122590449991,\n                \"15\": 2.7606915346687946,\n                \"16\": 1.7673342809643524,\n                \"17\": 2.4725564450213993,\n                \"18\": 2.1471479844267156,\n                \"19\": 2.3980650179269256,\n                \"20\": 2.849992210603764,\n                \"21\": 2.2201359335502016,\n                \"22\": 1.2846352250540725,\n                \"23\": 1.8248650069643007,\n                \"24\": 2.334334751383607,\n                \"25\": 2.6449313963299277,\n                \"26\": 2.1733937196901567,\n                \"27\": 2.1649414891379672,\n                \"28\": 1.5608399914973188,\n                \"29\": 0.6663623375907952,\n                \"30\": 3.0174047359240515,\n                \"31\": 2.305410217103182,\n                \"32\": 2.2700981454052473,\n                \"33\": 1.7731540325863413,\n                \"34\": 1.0188484252201868,\n                \"35\": 1.6475003658918077,\n                \"36\": 1.199265315508166,\n                \"37\": 1.0954614824657491,\n                \"38\": 1.9187531706255165,\n                \"39\": 1.3196762690829333,\n                \"40\": 1.938934971030759,\n                \"41\": 1.8903717673328861,\n                \"42\": 2.1184394194178346,\n                \"43\": 1.2254695674977576,\n                \"44\": 1.9380043330019876,\n                \"45\": 1.8337907551345292,\n                \"46\": 0.9262642871360329,\n                \"47\": 1.8330400982157342\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        },\n        {\n            \"xs\": {\n                \"0\": 3940.025390625,\n                \"1\": 7.0921988786351395,\n                \"2\": 4.741059853113435,\n                \"3\": 2.651401526073936,\n                \"4\": 4.722105928690997,\n                \"5\": 5.804210866178709,\n                \"6\": 3.6121374876001973,\n                \"7\": 4.467481702292671,\n                \"8\": 2.640335135119251,\n                \"9\": 5.695816715074837,\n                \"10\": 3.8492068842557208,\n                \"11\": 2.477411973829165,\n                \"12\": 3.0938247676294615,\n                \"13\": 1.4751941469883754,\n                \"14\": 2.302028802460777,\n                \"15\": 2.4862543073578287,\n                \"16\": 1.2914949932493882,\n                \"17\": 2.313729083842393,\n                \"18\": 1.2211856329733508,\n                \"19\": 1.511037299313536,\n                \"20\": 2.2419963124387876,\n                \"21\": 2.9891495408231625,\n                \"22\": 2.703854905537964,\n                \"23\": 2.265251262632247,\n                \"24\": 2.522613308503667,\n                \"25\": 1.934910212042062,\n                \"26\": 2.5327376553350867,\n                \"27\": 2.2446974285101344,\n                \"28\": 1.9416383846074723,\n                \"29\": 2.5189844636840855,\n                \"30\": 2.864438639332241,\n                \"31\": 1.85611839496603,\n                \"32\": 2.787379702285944,\n                \"33\": 2.6759785050529543,\n                \"34\": 1.3960428015790978,\n                \"35\": 2.608248525065802,\n                \"36\": 2.1037208212217613,\n                \"37\": 1.603747014556636,\n                \"38\": 2.3382204308452015,\n                \"39\": 2.003871393476381,\n                \"40\": 2.2678549707356455,\n                \"41\": 2.995000303532458,\n                \"42\": 2.1774346574481416,\n                \"43\": 1.4095826396932765,\n                \"44\": 2.1044527242249824,\n                \"45\": 2.0959797143564125,\n                \"46\": 1.7146470316551146,\n                \"47\": 1.3233571451587363\n            },\n            \"ys\": {\n                \"0\": \"d\"\n            }\n        }\n    ]\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4d0",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4d0"
      },
      {
        "name": "l-loose-connection.json",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/b159c197-0eab-458c-9309-d8ece616e3e4.json",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4d3",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4d3"
      },
      {
        "name": "n-noise-disconnection.json",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/2a17bac4-5067-4cd2-94ed-dae797e5540a.json",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4d5",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4d5"
      },
      {
        "name": "b-blink.json",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/f4187476-109b-4377-93dd-19ba124705c3.json",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4ce",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4ce"
      },
      {
        "name": "c-clear-mind.json",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/c0cb8c0f-8261-4ba5-b8ea-2e7d7e984863.json",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4cf",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4cf"
      },
      {
        "name": "e-eye-movement.json",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/3b06a265-aa71-4784-b527-5df4f0edbff3.json",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4d1",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4d1"
      },
      {
        "name": "f-resting-focus.json",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/995e7176-2d56-4b40-aa0c-b71f0db1055c.json",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4d2",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4d2"
      },
      {
        "name": "o-overstimulation.json",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/681e1a86-6608-446f-8eee-84dba98abbc3.json",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4d6",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4d6"
      },
      {
        "name": "m-muscle-tension.json",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/dd2b024f-96d2-40d6-a01d-851cdb87fd11.json",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4d4",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4d4"
      },
      {
        "name": "DEEPEST2.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/a34170d3-1ea8-4323-8b74-c354ec0a464e.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4cb",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4cb"
      },
      {
        "name": "DEEPEST3.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/493feee6-2bbd-4f68-8461-f607129eb3b0.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675b292c60c918db1525d4cc",
        "createdAt": "2024-12-12T18:19:27.729Z",
        "updatedAt": "2024-12-12T18:19:27.729Z",
        "id": "675b292c60c918db1525d4cc"
      }
    ],
    "createdAt": "2024-12-12T18:19:25.366Z",
    "updatedAt": "2024-12-12T18:19:27.729Z",
    "id": "eRTFrZhJq"
  },
  {
    "_id": "eDbr3VwBv",
    "name": "neonClock",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "670704108d48564571fbfec5",
          "670704108d48564571fbfec4",
          "670704108d48564571fbfec6"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "670704108d48564571fbfec7",
        "createdAt": "2024-10-10T17:06:21.615Z",
        "updatedAt": "2024-10-10T17:06:21.615Z",
        "id": "670704108d48564571fbfec7"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n  // createCanvas(800, 600);\n  rectMode(CENTER);\n}\n\nfunction draw() {\n  gradientBG(0, 0, width, height);\n  drawClock(210, 180);\n  // drawClock(400, 400);\n}\n\nfunction drawClock(xpos, ypos) {\n  // draw clock box\n  strokeWeight(1);\n  stroke(\"#1B9E2C\");\n  fill(\"#091357\");\n  for (i = 0; i < 25; i++) {\n    rect(xpos - i, ypos + i, 350, 150, 10);\n  }\n  stroke(\"#B3097A\");\n  strokeWeight(4);\n  fill(\"#D10043\");\n  for (j = 1; j < 2; j++) {\n    rect(xpos - 185 + 50 * j, ypos + 24, 80, 75, 10);\n    rect(xpos - 75 + 50 * j, ypos + 24, 80, 75, 10);\n    rect(xpos + 35 + 50 * j, ypos + 24, 80, 75, 10);\n  }\n  // Sets up clock counter with formatting\n  stroke(\"#00AAA1\");\n  fill(\"#091357\");\n  textAlign(CENTER, CENTER);\n  textSize(60);\n  if (hour() < 10) {\n    text(\"0\" + hour(), xpos - 135, ypos + 27);\n  } else {\n    text(hour(), xpos - 135, ypos + 27);\n  }\n  if (minute() < 10) {\n    text(\"0\" + minute(), xpos - 25, ypos + 27);\n  } else {\n    text(minute(), xpos - 25, ypos + 27);\n  }\n  if (second() < 10) {\n    text(\"0\" + second(), xpos + 85, ypos + 27);\n  } else {\n    text(second(), xpos + 85, ypos + 27);\n  }\n}\n\nfunction gradientBG(x, y, w, h) {\n  let day1 = color(255, 87, 69);\n  let day2 = color(194, 37, 196);\n  let night2 = color(13, 8, 41);\n  let night1 = color(194, 37, 196);\n  noFill();\n  // daylight hours\n  if (hour() >= 5 && hour() <= 18) {\n    for (let i = y; i <= y + h; i++) {\n      let inter = map(i, y, y + h, 0, 1);\n      let c = lerpColor(day1, day2, inter);\n      stroke(c);\n      line(x, i, x + w, i);\n    }\n  } // nighttime hours\n  else {\n    for (let i = y; i <= y + h; i++) {\n      let inter = map(i, y, y + h, 0, 1);\n      let c = lerpColor(night1, night2, inter);\n      stroke(c);\n      line(x, i, x + w, i);\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "670704108d48564571fbfec4",
        "createdAt": "2024-10-10T17:06:21.615Z",
        "updatedAt": "2024-10-10T17:06:21.615Z",
        "id": "670704108d48564571fbfec4"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "670704108d48564571fbfec5",
        "createdAt": "2024-10-10T17:06:21.615Z",
        "updatedAt": "2024-10-10T17:06:21.615Z",
        "id": "670704108d48564571fbfec5"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "670704108d48564571fbfec6",
        "createdAt": "2024-10-10T17:06:21.615Z",
        "updatedAt": "2024-10-10T17:06:21.615Z",
        "id": "670704108d48564571fbfec6"
      }
    ],
    "updatedAt": "2024-10-10T17:06:21.615Z",
    "createdAt": "2024-10-09T22:30:45.893Z",
    "id": "eDbr3VwBv"
  },
  {
    "_id": "Rh74znItA",
    "name": "NOPE",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67420e0556567f0dfbdb1cc7",
          "67420e0556567f0dfbdb1cc8",
          "67420e0556567f0dfbdb1cc9"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67420e0556567f0dfbdb1cc6",
        "createdAt": "2024-11-23T19:42:11.430Z",
        "updatedAt": "2024-11-23T19:42:11.430Z",
        "id": "67420e0556567f0dfbdb1cc6"
      },
      {
        "name": "sketch.js",
        "content": "// ------------------- Variables -------------------\n\n// Sound and FFT analysis\nlet song;\nlet fft;\nlet amp, mappedAmp;\n\n// Serial communication variables\nlet num;\nlet light = 0,\n  lightA = 0,\n  lightB = 0,\n  lightC = 0;\nlet rippleA = 0,\n  rippleB = 0,\n  rippleC = 0;\n\n// Frame rate and visual effects\nlet FR = 60; // Frame rate (10 to 60)\nlet blur = 3; // (0 to 10)\nlet BGbutton = 0;\n\n// Grain and transparency\nlet grain;\nlet alpha = 0.0; // Transparency (0-10)\n\nlet rot1 = 0,\n  rot2 = 0;\n\n// Background colors (HSB mode)\nlet hue1 = 0,\n  sat1 = 0,\n  br1 = 0; // Hue, Saturation, Brightness\n\n// Effect colors (HSB mode)\nlet hue2 = 0,\n  sat2 = 100,\n  br2 = 100; // Hue, Saturation, Brightness\nlet hue2A, hue2B, hue2C; // Variants of hue2 for effects\n\n// Ball and ripple properties\nlet bballs = [];\nlet drop = [];\nlet X1 = 0,\n  Y1 = 0,\n  X2 = 0,\n  Y2 = 0,\n  X3 = 0,\n  Y3 = 0;\nlet circleSize1 = 0,\n  circleSize2 = 0,\n  circleSize3 = 0;\nlet opacity1 = 255,\n  opacity2 = 255,\n  opacity3 = 255;\n\n// Line animation coordinates\nlet xCoord1 = 0,\n  yCoord1 = 0,\n  xCoord2 = 0,\n  yCoord2 = 0;\n\n// ------------------- Preload Function -------------------\nfunction preload() {\n  song = loadSound(\"beach.mp3\"); // Load the sound file\n}\n\n// variable to hold an instance of the p5.webserial library:\nconst serial = new p5.WebSerial();\n\n// HTML button object:\nlet portButton;\nlet inData = []; // for incoming serial data\nlet inString = [];\nlet outByte = 0; // for outgoing data\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  createFilmGrain(0, 0, windowWidth, windowHeight, 500, 3);\n\n  // Initialize variables and modes\n  xCoord2 = 0;\n  yCoord2 = windowHeight / 2;\n  colorMode(HSB, 360, 100, 100, 100);\n  num = windowWidth * 5;\n\n  // Start the song and FFT analysis\n  song.loop();\n  fft = new p5.FFT();\n  fft.setInput(song);\n\n  // Initialize drops and balls\n  for (let i = 0; i < 200; i++) drop[i] = new Drop();\n  for (let i = 0; i <= num; i++) {\n    bballs.push(\n      new Ball(\n        i / 2,\n        random(5, 25),\n        random(20, 50),\n        random(0.3, 0.5),\n        random(100, 200)\n      )\n    );\n  }\n  // check to see if serial is available:\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n  // if serial is available, add connect/disconnect listeners:\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n  // check for any ports that are available:\n  serial.getPorts();\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n}\n\n// ------------------- Draw Function -------------------\nfunction draw() {\n  fft.analyze();\n  // Get amplitude energy from FFT\n  amp = fft.getEnergy(10, 1050);\n\n  // Map amp value to the range 0-100\n  mappedAmp = map(amp, 0, 255, 0, 100);\n\n  frameRate(FR);\n\n  // Set the background color\n  background(0);\n  hue1 = map(rot1, 0, 23, 0, 360);\n  hue2 = map(rot2, 0, 23, 0, 360);\n  // Generate hue variants for effects\n  hue2A = random((hue2 + 0) % 360, (hue2 + 50) % 360);\n  hue2B = random((hue2 + 120) % 360, (hue2 + 190) % 360);\n  hue2C = random((hue2 + 240) % 360, (hue2 + 350) % 360);\n\n  // Draw light effects\n  myLight(200, 100, 230);\n  myLightA(hue2A, sat2, br2);\n  myLightB(hue2B, sat2, br2);\n  myLightC(hue2C, sat2, br2);\n\n  // Update and show drops\n  for (let i = 0; i < 200; i++) {\n    drop[i].show();\n    drop[i].update();\n  }\n\n  // Draw bouncing balls\n  for (let i = 0; i < num; i++) bballs[i].draw();\n\n  // Draw ripple effects\n  myRipple1(hue2A, sat2, br2);\n  myRipple2(hue2B, sat2, br2);\n  myRipple3(hue2C, sat2, br2);\n\n  // Apply post-processing effects\n  filter(BLUR, blur);\n  if (BGbutton === 1) filter(INVERT);\n\n  // Display grain effect\n  updateGrain();\n  displayGrain();\n}\n\n// ------------------- Key Pressed Functions -------------------\nfunction keyPressed() {\n  // Toggle song play/pause with space\n  if (key === \" \" && song.isPlaying()) song.pause();\n  else if (key === \" \") song.loop();\n  // Reset song with left arrow\n  else if (keyCode === LEFT_ARROW) {\n    song.stop();\n    song.loop();\n  }\n\n  // Trigger ripple effects\n  else if (rippleA === 0 && key === \"a\") setRipple1();\n  else if (rippleB === 0 && key === \"s\") setRipple2();\n  else if (rippleC === 0 && key === \"d\") setRipple3();\n  // Toggle lights\n  else if (keyCode === ENTER && light === 0) light = 1;\n  else if (key === \"z\" && lightA === 0) lightA = 1;\n  else if (key === \"x\" && lightB === 0) lightB = 1;\n  else if (key === \"c\" && lightC === 0) lightC = 1;\n}\n\nfunction keyReleased() {\n  if (keyCode === ENTER && light === 1) light = 0;\n  else if (key === \"z\" && lightA === 1) lightA = 0;\n  else if (key === \"x\" && lightB === 1) lightB = 0;\n  else if (key === \"c\" && lightC === 1) lightC = 0;\n}\n\n// ------------------- Mouse Interaction Functions -------------------\nfunction mousePressed() {\n  if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {\n    fullscreen(!fullscreen());\n  }\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n  createFilmGrain(0, 0, windowWidth, windowHeight, 100, 3);\n\n  fft = new p5.FFT();\n  fft.setInput(song);\n  for (let i = 0; i < 200; i++) drop[i] = new Drop();\n}\n\n// ------------------- Utility Functions -------------------\n\nfunction myLight(H, S, B) {\n  for (var i = 0; i < 300; i++) {\n    xCoord1 = xCoord2;\n    yCoord1 = yCoord2;\n    xCoord2 = xCoord1 + int(random(-20, 20));\n    yCoord2 = yCoord1 + int(random(-10, 20));\n    if (light === 1) {\n      stroke(H, S, B);\n    } else {\n      noStroke();\n    }\n    strokeWeight(random(3, 5));\n    strokeJoin(MITER);\n    line(xCoord1, yCoord1, xCoord2, yCoord2);\n\n    if (\n      (xCoord2 > windowWidth) |\n      (xCoord2 < 0) |\n      (yCoord2 > windowHeight) |\n      (yCoord2 < 0)\n    ) {\n      xCoord2 = int(random(0, windowWidth));\n      yCoord2 = 0;\n    }\n  }\n}\nfunction myLightA(H, S, B) {\n  for (var i = 0; i < 300; i++) {\n    xCoord1 = xCoord2;\n    yCoord1 = yCoord2;\n    xCoord2 = xCoord1 + int(random(-20, 20));\n    yCoord2 = yCoord1 + int(random(-10, 20));\n    strokeWeight(random(3, 5));\n    strokeJoin(MITER);\n    line(xCoord1, yCoord1, xCoord2, yCoord2);\n\n    if (\n      (xCoord2 > windowWidth) |\n      (xCoord2 < 0) |\n      (yCoord2 > windowHeight) |\n      (yCoord2 < 0)\n    ) {\n      if (lightA === 1) {\n        strokeWeight(10);\n        stroke(H, S, B);\n      } else {\n        noStroke();\n      }\n      xCoord2 = int(random(0, windowWidth));\n      yCoord2 = 0;\n    }\n  }\n}\n\nfunction myLightB(H, S, B) {\n  for (var i = 0; i < 300; i++) {\n    xCoord1 = xCoord2;\n    yCoord1 = yCoord2;\n    xCoord2 = xCoord1 + int(random(-20, 20));\n    yCoord2 = yCoord1 + int(random(-10, 20));\n    strokeWeight(random(3, 5));\n    strokeJoin(MITER);\n    line(xCoord1, yCoord1, xCoord2, yCoord2);\n\n    if (\n      (xCoord2 > windowWidth) |\n      (xCoord2 < 0) |\n      (yCoord2 > windowHeight) |\n      (yCoord2 < 0)\n    ) {\n      if (lightB === 1) {\n        strokeWeight(10);\n        stroke(H, S, B);\n      } else {\n        noStroke();\n      }\n      xCoord2 = int(random(0, windowWidth));\n      yCoord2 = 0;\n    }\n  }\n}\n\nfunction myLightC(H, S, B) {\n  for (var i = 0; i < 300; i++) {\n    xCoord1 = xCoord2;\n    yCoord1 = yCoord2;\n    xCoord2 = xCoord1 + int(random(-20, 20));\n    yCoord2 = yCoord1 + int(random(-10, 20));\n    strokeWeight(random(3, 5));\n    strokeJoin(MITER);\n    line(xCoord1, yCoord1, xCoord2, yCoord2);\n\n    if (\n      (xCoord2 > windowWidth) |\n      (xCoord2 < 0) |\n      (yCoord2 > windowHeight) |\n      (yCoord2 < 0)\n    ) {\n      if (lightC === 1) {\n        strokeWeight(10);\n        stroke(H, S, B);\n      } else {\n        noStroke();\n      }\n      xCoord2 = int(random(0, windowWidth));\n      yCoord2 = 0;\n    }\n  }\n}\n\n// Set properties for Ripple1\nfunction setRipple1() {\n  X1 = random(0, windowWidth);\n  Y1 = random(windowHeight / 5, windowHeight);\n  circleSize1 = 0;\n  opacity1 = 255;\n}\n\n// Set properties for Ripple2\nfunction setRipple2() {\n  X2 = random(0, windowWidth);\n  Y2 = random(windowHeight / 5, windowHeight);\n  circleSize2 = 0;\n  opacity2 = 255;\n}\n\n// Set properties for Ripple3\nfunction setRipple3() {\n  X3 = random(0, windowWidth);\n  Y3 = random(windowHeight / 5, windowHeight);\n  circleSize3 = 0;\n  opacity3 = 255;\n}\n\nfunction myRipple1(H, S, B) {\n  circleSize1 += 10;\n  opacity1 -= 3;\n  noFill();\n  strokeWeight(10);\n  stroke(H, S, B, opacity1);\n  circle(X1, Y1, circleSize1);\n  circle(X1, Y1, circleSize1 * 0.75);\n  circle(X1, Y1, circleSize1 * 0.5);\n}\n\nfunction myRipple2(H, S, B) {\n  circleSize2 += 10;\n  opacity2 -= 3;\n  noFill();\n  strokeWeight(10);\n  stroke(H, S, B, opacity2);\n  circle(X2, Y2, circleSize2);\n  circle(X2, Y2, circleSize2 * 0.75);\n  circle(X2, Y2, circleSize2 * 0.5);\n}\nfunction myRipple3(H, S, B) {\n  circleSize3 += 10;\n  opacity3 -= 3;\n  noFill();\n  strokeWeight(10);\n  stroke(H, S, B, opacity3);\n  circle(X3, Y3, circleSize3);\n  circle(X3, Y3, circleSize3 * 0.75);\n  circle(X3, Y3, circleSize3 * 0.5);\n}\n\n// Update and display the grain effect\nfunction updateGrain() {\n  grain.update();\n}\n\nfunction displayGrain() {\n  grain.display();\n}\n\n// Create a film grain effect\nfunction createFilmGrain(x, y, w, h, patternSize, sampleSize) {\n  grain = new FilmGrainEffect(x, y, w, h, patternSize, sampleSize, alpha * 0.1);\n}\n\n// ------------------- Classes -------------------\n\n// Drop class (animated falling shapes)\nfunction Drop() {\n  this.x = random(0, windowWidth);\n  this.y = random(0, -windowHeight);\n\n  this.show = function () {\n    stroke(hue2B, sat2, 100);\n    strokeWeight(0.5);\n    fill(hue2B, sat2, 100);\n    ellipse(this.x, this.y, random(5, 10), random(5, 10));\n  };\n\n  this.update = function () {\n    this.speed = amp / 5;\n    this.gravity = 1.05;\n    this.y += this.speed * this.gravity;\n\n    if (this.y > windowHeight) {\n      this.y = random(0, -windowHeight);\n      this.gravity = 0;\n    }\n  };\n}\n\n// Ball class (bouncing balls)\nclass Ball {\n  constructor(xpos, ypos, w, dy, limit) {\n    this.xpos = xpos;\n    this.ypos = ypos;\n    this.w = w;\n    this.dy = dy;\n    this.color = random((hue2 + 240) % 360, (hue2 + 350) % 360);\n    this.limit = limit;\n  }\n\n  draw() {\n    this.move(this.dy);\n    noStroke();\n    fill(this.color, 100, mappedAmp, 10);\n    circle(this.xpos, this.ypos, this.w);\n  }\n\n  move() {\n    if (this.ypos + this.w / 2 >= this.limit || this.ypos - this.w / 2 <= -20) {\n      this.dy = -this.dy;\n    }\n    this.ypos += this.dy;\n  }\n}\n\n// ------------------- Serial Stuff -------------------\n// if there's no port selected,\n// make a port select button appear:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n\n// make the port selector window appear:\nfunction choosePort() {\n  if (portButton) portButton.show();\n  serial.requestPort();\n}\n\n// open the selected port, and make the port\n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  serial.open().then(initiateSerial);\n\n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n\n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n\n// read any incoming data:\nfunction serialEvent() {\n  // read from port until new line:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  if (inString != null) {\n    let list = split(trim(inString), \",\");\n    if (list.length > 15) {\n      // conver list items to floats:\n      rot1 = float(list[0]);\n      BGbutton = float(list[1]);\n      sat1 = float(list[2]);\n      br1 = float(list[3]);\n      rot2 = float(list[4]);\n      sat2 = float(list[5]);\n      br2 = float(list[6]);\n      FR = float(list[7]);\n      blur = float(list[8]);\n      alpha = float(list[9]);\n      rippleA = float(list[10]);\n      rippleB = float(list[11]);\n      rippleC = float(list[12]);\n      lightA = float(list[13]);\n      lightB = float(list[14]);\n      lightC = float(list[15]);\n\n      console.log(\n        rot1 +\n          \",\" +\n          BGbutton +\n          \",\" +\n          sat1 +\n          \",\" +\n          br1 +\n          \",\" +\n          rot2 +\n          \",\" +\n          sat2 +\n          \",\" +\n          br2 +\n          \",\" +\n          FR +\n          \",\" +\n          blur +\n          \",\" +\n          alpha +\n          \",\" +\n          rippleA +\n          \",\" +\n          rippleB +\n          \",\" +\n          rippleC +\n          \",\" +\n          lightA +\n          \",\" +\n          lightB +\n          \",\" +\n          lightC\n      );\n      // send a byte to the microcontroller to get new data:\n      serial.write(\"x\");\n    }\n  }\n}\n\n// try to connect if a new serial port\n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n\n// if a port is disconnected:\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n\nfunction closePort() {\n  serial.close();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67420e0556567f0dfbdb1cc8",
        "createdAt": "2024-11-23T19:42:11.430Z",
        "updatedAt": "2024-11-23T19:42:11.430Z",
        "id": "67420e0556567f0dfbdb1cc8"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n      \n<script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67420e0556567f0dfbdb1cc7",
        "createdAt": "2024-11-23T19:42:11.430Z",
        "updatedAt": "2024-11-23T19:42:11.430Z",
        "id": "67420e0556567f0dfbdb1cc7"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67420e0556567f0dfbdb1cc9",
        "createdAt": "2024-11-23T19:42:11.430Z",
        "updatedAt": "2024-11-23T19:42:11.430Z",
        "id": "67420e0556567f0dfbdb1cc9"
      }
    ],
    "createdAt": "2024-11-23T17:16:53.535Z",
    "updatedAt": "2024-11-23T19:42:11.430Z",
    "id": "Rh74znItA"
  },
  {
    "_id": "-IPt1J5Hy",
    "name": "NYT-edit",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "671a5e524c7539334e6f0ef1",
          "671a5e384c7539334e6f0eee",
          "671a5e384c7539334e6f0eed",
          "671a5e384c7539334e6f0eef"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "671a5e384c7539334e6f0ef0",
        "createdAt": "2024-10-24T15:13:26.093Z",
        "updatedAt": "2024-10-24T15:13:26.093Z",
        "id": "671a5e384c7539334e6f0ef0"
      },
      {
        "name": "sketch.js",
        "content": "let myInput;\n\nfunction setup() {\n  createCanvas(500, 100);\n  myInput = createInput();\n  myInput.position(180, 400);\n}\n\nfunction draw() {\n  background(\"red\");\n  let msg = myInput.value();\n  fill(\"white\");\n  textAlign(CENTER);\n  text(msg, 250, 55);\n}\n\nfunction keyPressed() {\n  if (keyCode === ENTER) {\n    myInput.value(\"\");\n  }\n}\n\nconst newspaperSpinning = [\n  { transform: \"rotate(0) scale(0.5)\" },\n  { transform: \"rotate(360deg) scale(1)\" },\n];\n\nconst newspaperTiming = {\n  duration: 2000,\n  iterations: 1,\n};\n\nconst newspaper = document.querySelector(\".newspaper\");\n\nnewspaper.addEventListener(\"click\", () => {\n  newspaper.animate(newspaperSpinning, newspaperTiming);\n});\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "671a5e384c7539334e6f0eed",
        "createdAt": "2024-10-24T15:13:26.093Z",
        "updatedAt": "2024-10-24T15:13:26.093Z",
        "id": "671a5e384c7539334e6f0eed"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n      <img class=\"newspaper\" src=\"NYT.png\">\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "671a5e384c7539334e6f0eee",
        "createdAt": "2024-10-24T15:13:26.093Z",
        "updatedAt": "2024-10-24T15:13:26.093Z",
        "id": "671a5e384c7539334e6f0eee"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n\nimg {\n  width:500px;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "671a5e384c7539334e6f0eef",
        "createdAt": "2024-10-24T15:13:26.093Z",
        "updatedAt": "2024-10-24T15:13:26.093Z",
        "id": "671a5e384c7539334e6f0eef"
      },
      {
        "name": "NYT.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/606b10d0-3e8a-4ac2-9d42-9ac96273d217.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "671a5e524c7539334e6f0ef1",
        "createdAt": "2024-10-24T15:13:26.093Z",
        "updatedAt": "2024-10-24T15:13:26.093Z",
        "id": "671a5e524c7539334e6f0ef1"
      }
    ],
    "updatedAt": "2024-10-24T15:13:26.093Z",
    "createdAt": "2024-10-24T14:54:11.795Z",
    "id": "-IPt1J5Hy"
  },
  {
    "_id": "rulDb2o5z",
    "name": "Omi / Sana Week 3 Pair Programming copy copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67aa1e79c8ffe337be4f96c1",
          "67aa1e79c8ffe337be4f96c2",
          "67aa1e79c8ffe337be4f96c3"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67aa1e79c8ffe337be4f96c0",
        "createdAt": "2025-02-10T15:42:53.028Z",
        "updatedAt": "2025-02-10T15:42:53.028Z",
        "id": "67aa1e79c8ffe337be4f96c0"
      },
      {
        "name": "sketch.js",
        "content": "/*\nPart 1\n1. Do some debugging. Unscramble the code to create what you see on the screen. One thing at a time. Start with what you recognize.\n\n2. (Extra) Add color in some way\n*/\n\nlet total = 30;\n\nlet seed = 1000\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  noStroke();\n\n  background(255);\n\n  //strokeWeight(2);\n}\n\nfunction draw() {\n  // randomSeed (seed)\n  let columnWidth;\n  columnWidth = width / total;\n\n  for (let counter = 0; counter < total; counter++) {\n    let x = counter * columnWidth;\n    let y = height / 4;\n    let colHeight = height / 3;\n    fill(random (255), 0 + (counter*10), 100);\n    rect(x, y, columnWidth, colHeight, counter);\n    \n    frameRate (12)\n  }\n}\n// function mousePressed (){\n// seed = random (1000)\n// }\n\n\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67aa1e79c8ffe337be4f96c2",
        "createdAt": "2025-02-10T15:42:53.028Z",
        "updatedAt": "2025-02-10T15:42:53.028Z",
        "id": "67aa1e79c8ffe337be4f96c2"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67aa1e79c8ffe337be4f96c1",
        "createdAt": "2025-02-10T15:42:53.028Z",
        "updatedAt": "2025-02-10T15:42:53.028Z",
        "id": "67aa1e79c8ffe337be4f96c1"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67aa1e79c8ffe337be4f96c3",
        "createdAt": "2025-02-10T15:42:53.028Z",
        "updatedAt": "2025-02-10T15:42:53.028Z",
        "id": "67aa1e79c8ffe337be4f96c3"
      }
    ],
    "createdAt": "2025-02-10T15:42:49.094Z",
    "updatedAt": "2025-02-10T15:42:53.028Z",
    "id": "rulDb2o5z"
  },
  {
    "_id": "Oe6l-DG-t",
    "name": "p5 play sprite animation copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "673640814a791c2c007ae70e",
          "673640814a791c2c007ae70f",
          "673640814a791c2c007ae710",
          "673640814a791c2c007ae711"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "673640814a791c2c007ae70d",
        "createdAt": "2024-11-18T22:35:10.268Z",
        "updatedAt": "2024-11-18T22:35:10.268Z",
        "id": "673640814a791c2c007ae70d"
      },
      {
        "name": "sketch.js",
        "content": "let invader1;\nlet floor;\n\nfunction preload() {\n  invader1=createSprite(50,50,32,32);\n  invader1.spriteSheet='invaderBlue.png';\n  // invader1.addAni({frameDelay:20,frames:4});\n}\n\nfunction createFloor() {\n  floor = createSprite(width/2,height-20,400,20);\n  floor.collider=\"static\";\n}\nfunction setup() {\n  createCanvas(400, 400);\n  createFloor();\n  world.gravity.y=1;\n}\n\nfunction draw() {\n  clear();\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "673640814a791c2c007ae710",
        "createdAt": "2024-11-18T22:35:10.268Z",
        "updatedAt": "2024-11-18T22:35:10.268Z",
        "id": "673640814a791c2c007ae710"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n        <script src=\"https://p5play.org/v3/planck.min.js\"></script>\n<script src=\"https://p5play.org/v3/p5play.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673640814a791c2c007ae70e",
        "createdAt": "2024-11-18T22:35:10.268Z",
        "updatedAt": "2024-11-18T22:35:10.268Z",
        "id": "673640814a791c2c007ae70e"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673640814a791c2c007ae711",
        "createdAt": "2024-11-18T22:35:10.268Z",
        "updatedAt": "2024-11-18T22:35:10.268Z",
        "id": "673640814a791c2c007ae711"
      },
      {
        "name": "invaderBlue.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/6b10a94c-0eb6-42f5-8bed-bffc3849782c.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673640814a791c2c007ae70f",
        "createdAt": "2024-11-18T22:35:10.268Z",
        "updatedAt": "2024-11-18T22:35:10.268Z",
        "id": "673640814a791c2c007ae70f"
      }
    ],
    "createdAt": "2024-11-14T18:25:06.204Z",
    "updatedAt": "2024-11-18T22:35:10.268Z",
    "id": "Oe6l-DG-t"
  },
  {
    "_id": "D3gI_nTnO",
    "name": "p5-pcomp",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "670d92015385c23eaf0c2eb0",
          "670d92015385c23eaf0c2eb1",
          "670d92015385c23eaf0c2eb2"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "670d92015385c23eaf0c2eaf",
        "createdAt": "2024-10-21T21:10:07.566Z",
        "updatedAt": "2024-10-21T21:10:07.566Z",
        "id": "670d92015385c23eaf0c2eaf"
      },
      {
        "name": "sketch.js",
        "content": "// variable to hold an instance of the p5.webserial library:\nconst serial = new p5.WebSerial();\nlet pot1 = 0;\nlet pot2 = 0;\nlet pot3 = 0;\nlet button1 = 0;\nlet button2 = 0;\n\n// HTML button object:\nlet portButton;\nlet inData = []; // for incoming serial data\nlet inString = [];\nlet outByte = 0; // for outgoing data\n\nfunction setup() {\n  createCanvas(700, 700); // make the canvas\n  angleMode(DEGREES);\n  rectMode(CENTER);\n  // check to see if serial is available:\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n  // if serial is available, add connect/disconnect listeners:\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n  // check for any ports that are available:\n  serial.getPorts();\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n}\n\n// function draw() {\n\n//  background(pot1);\n// fill(pot2);\n//   rect(100,100,100-(20*button),100)\n// }\n\n// if there's no port selected,\n// make a port select button appear:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n\n// make the port selector window appear:\nfunction choosePort() {\n  if (portButton) portButton.show();\n  serial.requestPort();\n}\n\n// open the selected port, and make the port\n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  serial.open().then(initiateSerial);\n\n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n\n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n// // read any incoming data as a string\n// // (assumes a newline at the end of it):\n// function serialEvent() {\n//   inData = Number(serial.read());\n//   console.log(inData);\n// }\n\n// read any incoming data:\nfunction serialEvent() {\n  // read from port until new line:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  if (inString != null) {\n    let list = split(trim(inString), \",\");\n    if (list.length > 4) {\n      // conver list items to floats:\n      pot1 = float(list[0]);\n      pot2 = float(list[1]);\n      pot3 = float(list[2]);\n      button1 = float(list[3]);\n      button2 = float(list[4]);\n      console.log(\n        pot1 + \",\" + pot2 + \",\" + pot3 + \",\" + button1 + \",\" + button2\n      );\n      // send a byte to the microcontroller to get new data:\n      serial.write(\"x\");\n    }\n  }\n}\n\n// try to connect if a new serial port\n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n\n// if a port is disconnected:\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n\nfunction closePort() {\n  serial.close();\n}\n\nfunction draw() {\n  background(0);\n  ripple(button1, button2, pot3, pot2, pot1);\n}\n\nfunction ripple(frequency, myspeed, num, ramp1, ramp2) {\n  let margin = 10;\n\n  let mysize = (width - margin * 2) / num;\n\n  for (let i = 0; i < num; i++) {\n    for (let j = 0; j < num; j++) {\n      let x = margin + mysize / 2 + i * mysize;\n      let y = margin + mysize / 2 + j * mysize;\n\n      f =\n        sin(\n          -frameCount * myspeed + dist(width / 2, width / 2, x, y) * frequency\n        ) *\n          myspeed +\n        cos(-frameCount * myspeed);\n\n      if ((i + j) % 2 == 0) {\n        noFill();\n        strokeWeight(2);\n        stroke(dist(width / 2, width / 2, x, y) / 2, ramp1, j * 5);\n        rect(x, y, (f * mysize) / 3);\n        stroke(dist(width / 2, width / 2, x, y), 20, j);\n        circle(x, y, (f * mysize) / 5);\n      } else if ((i + j) % 2 == 1) {\n        noFill();\n        strokeWeight(2);\n        stroke(dist(width / 2, width / 2, x, y) / 4, j, ramp2);\n        rect(x, y, (f * mysize) / 4);\n        stroke(dist(width / 2, width / 2, x, y), 20, j);\n        circle(x, y, (f * mysize) / 2);\n      }\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "670d92015385c23eaf0c2eb1",
        "createdAt": "2024-10-21T21:10:07.566Z",
        "updatedAt": "2024-10-21T21:10:07.566Z",
        "id": "670d92015385c23eaf0c2eb1"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n      \n<script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "670d92015385c23eaf0c2eb0",
        "createdAt": "2024-10-21T21:10:07.566Z",
        "updatedAt": "2024-10-21T21:10:07.566Z",
        "id": "670d92015385c23eaf0c2eb0"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "670d92015385c23eaf0c2eb2",
        "createdAt": "2024-10-21T21:10:07.566Z",
        "updatedAt": "2024-10-21T21:10:07.566Z",
        "id": "670d92015385c23eaf0c2eb2"
      }
    ],
    "createdAt": "2024-10-14T21:49:53.348Z",
    "updatedAt": "2024-10-21T21:10:07.566Z",
    "id": "D3gI_nTnO"
  },
  {
    "_id": "pcHKhtm20",
    "name": "p5-pcomp copy copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6720ed2c8925965786021f62",
          "6720ed2c8925965786021f63",
          "6720ed2c8925965786021f64"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6720ed2c8925965786021f61",
        "createdAt": "2024-10-21T21:47:00.317Z",
        "updatedAt": "2024-10-21T21:47:00.317Z",
        "id": "6720ed2c8925965786021f61"
      },
      {
        "name": "sketch.js",
        "content": "// variable to hold an instance of the p5.webserial library:\nconst serial = new p5.WebSerial();\nlet pot1 = 0;\nlet pot2 = 0;\nlet pot3 = 0;\nlet button1 = 0;\nlet button2 = 0;\n\n// HTML button object:\nlet portButton;\nlet inData = []; // for incoming serial data\nlet inString = [];\nlet outByte = 0; // for outgoing data\n\nfunction setup() {\n  createCanvas(700, 700); // make the canvas\n  angleMode(DEGREES);\n  rectMode(CENTER);\n  // check to see if serial is available:\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n  // if serial is available, add connect/disconnect listeners:\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n  // check for any ports that are available:\n  serial.getPorts();\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n}\n\n// function draw() {\n\n//  background(pot1);\n// fill(pot2);\n//   rect(100,100,100-(20*button),100)\n// }\n\n// if there's no port selected,\n// make a port select button appear:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n\n// make the port selector window appear:\nfunction choosePort() {\n  if (portButton) portButton.show();\n  serial.requestPort();\n}\n\n// open the selected port, and make the port\n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  serial.open().then(initiateSerial);\n\n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n\n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n\n// read any incoming data:\nfunction serialEvent() {\n  // read from port until new line:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  if (inString != null) {\n    let list = split(trim(inString), \",\");\n    if (list.length > 4) {\n      // conver list items to floats:\n      pot1 = float(list[0]);\n      pot2 = float(list[1]);\n      pot3 = float(list[2]);\n      button1 = float(list[3]);\n      button2 = float(list[4]);\n      console.log(\n        pot1 + \",\" + pot2 + \",\" + pot3 + \",\" + button1 + \",\" + button2\n      );\n      // send a byte to the microcontroller to get new data:\n      serial.write(\"x\");\n    }\n  }\n}\n\n// try to connect if a new serial port\n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n\n// if a port is disconnected:\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n\nfunction closePort() {\n  serial.close();\n}\n\nfunction draw() {\n  background(0);\n  ripple(button2, button1, pot3, pot2, pot1);\n}\n\nfunction ripple(frequency, myspeed, num, ramp1, ramp2) {\n  let margin = 10;\n\n  let mysize = (width - margin * 2) / num;\n\n  for (let i = 0; i < num; i++) {\n    for (let j = 0; j < num; j++) {\n      let x = margin + mysize / 2 + i * mysize;\n      let y = margin + mysize / 2 + j * mysize;\n\n      f =\n        sin(\n          -frameCount * myspeed + dist(width / 2, width / 2, x, y) * frequency\n        ) *\n          myspeed +\n        cos(-frameCount * myspeed);\n\n      if ((i + j) % 2 == 0) {\n        noFill();\n        strokeWeight(2);\n        stroke(dist(width / 2, width / 2, x, y) / 2, ramp1, j * 5);\n        rect(x, y, (f * mysize) / 3);\n        stroke(dist(width / 2, width / 2, x, y), 20, j);\n        circle(x, y, (f * mysize) / 5);\n      } else if ((i + j) % 2 == 1) {\n        noFill();\n        strokeWeight(2);\n        stroke(dist(width / 2, width / 2, x, y) / 4, j, ramp2);\n        rect(x, y, (f * mysize) / 4);\n        stroke(dist(width / 2, width / 2, x, y), 20, j);\n        circle(x, y, (f * mysize) / 2);\n      }\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6720ed2c8925965786021f63",
        "createdAt": "2024-10-21T21:47:00.317Z",
        "updatedAt": "2024-10-21T21:47:00.317Z",
        "id": "6720ed2c8925965786021f63"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n      \n<script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6720ed2c8925965786021f62",
        "createdAt": "2024-10-21T21:47:00.317Z",
        "updatedAt": "2024-10-21T21:47:00.317Z",
        "id": "6720ed2c8925965786021f62"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6720ed2c8925965786021f64",
        "createdAt": "2024-10-21T21:47:00.317Z",
        "updatedAt": "2024-10-21T21:47:00.317Z",
        "id": "6720ed2c8925965786021f64"
      }
    ],
    "createdAt": "2024-10-29T14:11:56.895Z",
    "updatedAt": "2024-10-29T14:11:56.895Z",
    "id": "pcHKhtm20"
  },
  {
    "_id": "ZzfNRmyfu",
    "name": "p5play",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67363555a5a26df7ceb74096",
          "67363555a5a26df7ceb74095",
          "67363cb866cb0d019afafdda",
          "67363555a5a26df7ceb74097"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67363555a5a26df7ceb74098",
        "createdAt": "2024-11-18T22:35:39.599Z",
        "updatedAt": "2024-11-18T22:35:39.599Z",
        "id": "67363555a5a26df7ceb74098"
      },
      {
        "name": "sketch.js",
        "content": "let floor;\nlet img1;\n\nlet mySkulls;\n\nlet skullNum = 2;\n\nfunction preload() {\n  img1 = loadImage(\"skullsprite.png\");\n}\nfunction setup() {\n  createCanvas(400, 400);\n\n  mySkulls = new Group();\n  for (let i = 0; i < skullNum; i++) {\n    let s = new mySkulls.Sprite(\n      random(width),\n      random(height),\n      img1.width,\n      img1.height\n    );\n    s.image = \"skullsprite.png\";\n  }\n  \n  world.gravity.y = 4;\n  // set a diameter of 30 creates a circle\n\n  // invader1=createSprite(100,100,img1.width,img1.height);\n  mySkulls.image = \"skullsprite.png\";\n  invader2 = createSprite(100, 100);\n  floor = createSprite(width / 2, height, width, 40);\n  floor.collider = \"static\"\n}\n\nfunction draw() {\n  clear();\n  background(0, 0, 200);\n  // invader2.x++;\n  invader2.rotation = frameCount;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67363555a5a26df7ceb74095",
        "createdAt": "2024-11-18T22:35:39.599Z",
        "updatedAt": "2024-11-18T22:35:39.599Z",
        "id": "67363555a5a26df7ceb74095"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <script src=\"https://p5play.org/v3/planck.min.js\"></script>\n<script src=\"https://p5play.org/v3/p5play.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67363555a5a26df7ceb74096",
        "createdAt": "2024-11-18T22:35:39.599Z",
        "updatedAt": "2024-11-18T22:35:39.599Z",
        "id": "67363555a5a26df7ceb74096"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67363555a5a26df7ceb74097",
        "createdAt": "2024-11-18T22:35:39.599Z",
        "updatedAt": "2024-11-18T22:35:39.599Z",
        "id": "67363555a5a26df7ceb74097"
      },
      {
        "name": "skullsprite.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/6ce82c8a-1d87-4949-ac85-28e9988ac66c.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67363cb866cb0d019afafdda",
        "createdAt": "2024-11-18T22:35:39.599Z",
        "updatedAt": "2024-11-18T22:35:39.599Z",
        "id": "67363cb866cb0d019afafdda"
      }
    ],
    "updatedAt": "2024-11-18T22:35:39.599Z",
    "createdAt": "2024-11-14T17:40:13.454Z",
    "id": "ZzfNRmyfu"
  },
  {
    "_id": "Z9vQYbzqv",
    "name": "p5play copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "673bc153d837b46d8fc40eca",
          "673bc153d837b46d8fc40ecb",
          "673bc153d837b46d8fc40ecc",
          "673bc153d837b46d8fc40ecd"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "673bc153d837b46d8fc40ec9",
        "createdAt": "2024-11-19T14:49:54.807Z",
        "updatedAt": "2024-11-19T14:49:54.807Z",
        "id": "673bc153d837b46d8fc40ec9"
      },
      {
        "name": "sketch.js",
        "content": "let img1;\n\nlet p1, p2;\nlet gravity = 0.5; // Gravity pulls the sprite down\nlet jumpPower = -10; // Initial velocity for jump\nlet isOnGround = true; // Tracks if the sprite is on the ground\n\nfunction preload() {\n  img1 = loadImage(\"skullsprite.png\");\n}\n\nfunction setup() {\n  createCanvas(600, 400);\n\n  // Create the sprite\n  p1 = createSprite(width / 4, height / 2);\n  p1.image = \"skullsprite.png\";\n  p2 = createSprite((3 * width) / 4, height / 2);\n  p2.image = \"skullsprite.png\";\n\n  // Add a \"ground\" sprite\n  ground = createSprite(width / 2, height, width, 10);\n  ground.collider = \"static\"; // Ground won't move when collided\n  wall1 = createSprite(0, height / 2, 10, height);\n  wall1.collider = \"static\";\n  wall2 = createSprite(width, height / 2, 10, height);\n  wall2.collider = \"static\";\n  ceiling = createSprite(width / 2, 0, width, 10);\n  ceiling.collider = \"static\";\n}\n\nfunction draw() {\n  background(200);\n\n  // Apply gravity to the sprite\n  p2.velocity.y += gravity;\n\n  // Left movement\n  if (keyIsDown(LEFT_ARROW)) {\n    p2.velocity.x = -5;\n  }\n  // Right movement\n  else if (keyIsDown(RIGHT_ARROW)) {\n    p2.velocity.x = 5;\n  }\n  // Stop horizontal movement when no key is pressed\n  else {\n    p2.velocity.x = 0;\n  }\n\n  // Jump (only if on the ground)\n  if (keyIsDown(UP_ARROW)) {\n    p2.velocity.y = jumpPower;\n    // isOnGround = false; // Prevent repeated jumping in the air\n  }\n\n  // Check collision with the ground\n  p2.collide(ground, () => {\n    p2.velocity.y = 0;\n    // isOnGround = true; // Reset jump ability\n  });\n\n  p1.velocity.y += gravity;\n\n  // Left movement\n  if (keyIsDown(65)) {\n    p1.velocity.x = -5;\n  }\n  // Right movement\n  else if (keyIsDown(68)) {\n    p1.velocity.x = 5;\n  }\n  // Stop horizontal movement when no key is pressed\n  else {\n    p1.velocity.x = 0;\n  }\n\n  // Jump (only if on the ground)\n  if (keyIsDown(87)) {\n    p1.velocity.y = jumpPower;\n    // isOnGround = false; // Prevent repeated jumping in the air\n  }\n\n  // Check collision with the ground\n  p1.collide(ground, () => {\n    p1.velocity.y = 0;\n    // isOnGround = true; // Reset jump ability\n  });\n\n\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "673bc153d837b46d8fc40ecb",
        "createdAt": "2024-11-19T14:49:54.807Z",
        "updatedAt": "2024-11-19T14:49:54.807Z",
        "id": "673bc153d837b46d8fc40ecb"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <script src=\"https://p5play.org/v3/planck.min.js\"></script>\n<script src=\"https://p5play.org/v3/p5play.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673bc153d837b46d8fc40eca",
        "createdAt": "2024-11-19T14:49:54.807Z",
        "updatedAt": "2024-11-19T14:49:54.807Z",
        "id": "673bc153d837b46d8fc40eca"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673bc153d837b46d8fc40ecd",
        "createdAt": "2024-11-19T14:49:54.807Z",
        "updatedAt": "2024-11-19T14:49:54.807Z",
        "id": "673bc153d837b46d8fc40ecd"
      },
      {
        "name": "skullsprite.png",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/7c069112-638a-48cf-b90b-e0c77f3f6c62.png",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673bc153d837b46d8fc40ecc",
        "createdAt": "2024-11-19T14:49:54.807Z",
        "updatedAt": "2024-11-19T14:49:54.807Z",
        "id": "673bc153d837b46d8fc40ecc"
      }
    ],
    "createdAt": "2024-11-18T22:36:04.448Z",
    "updatedAt": "2024-11-19T14:49:54.807Z",
    "id": "Z9vQYbzqv"
  },
  {
    "_id": "4mGfqYalI",
    "name": "patternMaker",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66fc3cca96eb82dceeceddd3",
          "66fc3cca96eb82dceeceddd4",
          "66fc3cca96eb82dceeceddd5"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66fc3cca96eb82dceeceddd2",
        "createdAt": "2024-10-17T17:26:06.641Z",
        "updatedAt": "2024-10-17T17:26:06.641Z",
        "id": "66fc3cca96eb82dceeceddd2"
      },
      {
        "name": "sketch.js",
        "content": "// patternMaker\n\nfunction setup() {\n  createCanvas(400, 400);\n\n  // create a button so you can save the pattern\n  button = createButton(\"save pattern :)\");\n  button.position(10, height + 10);\n  button.mousePressed(saveDrawing);\n}\n\nfunction draw() {\n  // generate a random color palette and random angle\n  let angles = [0, PI, PI / 2, (3 * PI) / 2];\n  let cA = [\n    \"#D74102\",\n    \"#290431\",\n    \"#DF1233\",\n    \"red\",\n    \"#CA2C09\",\n    \"#1F1155\",\n    \"#4D57DD\",\n    \"#640124\",\n    \"#A90E0C\",\n    \"#002464\",\n    \"#78BADB\",\n    \"#F13450\",\n    \"#EB712E\",\n    \"#640124\",\n    \"#002464\",\n    \"#12A7F1\",\n  ];\n\n  background(random(cA)); // change the background in every frame to a random color\n\n  // adjust the speed of the framerate\n  frameRate(1);\n\n  drawPattern(\n    random(cA),\n    random(cA),\n    random(cA),\n    random(cA),\n    random(angles),\n    random(angles),\n    random(angles),\n    random(angles)\n  );\n}\n\n// function to create grid pattern\n\nfunction drawPattern(color1, color2, color3, color4, ang1, ang2, ang3, ang4) {\n  // change the grid size; increase the number for more cells\n  let num = 10;\n  // determine the size of grid by adjusting the width & height of the squares to be a ratio of the canvas dimensions and desired number of cells\n  let W = width / num;\n  let H = height / num;\n\n  // this nested forloop creates a grid of rotating squares\n  for (let j = 0; j <= height / H; j++) {\n    let ypos = j * H; // y direction\n    for (let i = 0; i <= width / W; i++) {\n      let xpos = W * i; // x direction\n\n      // the orientation and style of the squares will repeat after four iterations, so there must be four versions of the design created using if statements and a modulus\n\n      if ((i + j) % 3 == 0) {\n        // random orientation 1\n\n        // there are a few designs in each square\n        push();\n        // move the rotation origin so this shape appears within the square\n        translate(xpos + W / 2, ypos + H / 2);\n        rotate((3 * PI) / 2);\n        noStroke();\n        fill(color1); // fill random color one\n        ellipse(0, 0, W, H); // the base circle\n        pop();\n\n        push();\n        translate(xpos, ypos);\n        rotate(ang1); // rotate random angle 1\n        fill(color2);\n        stroke(255);\n        arc(0, 0, W, H, 0, PI / 2);\n        ellipse((2 * W) / 3, (2 * H) / 3, W / 2, H / 2);\n        pop();\n      } else if ((i + j) % 3 == 1) {\n        // random orientation 2\n        push();\n        translate(xpos + W / 2, ypos + H / 2);\n        rotate((3 * PI) / 2);\n        noStroke();\n        fill(color2);\n        ellipse(0, 0, W, H);\n        pop();\n\n        push();\n        translate(xpos, ypos);\n        rotate(ang2);\n        fill(color4);\n        stroke(255);\n        arc(0, 0, W, H, 0, PI / 2);\n        ellipse((2 * W) / 3, (2 * H) / 3, W / 2, H / 2);\n        pop();\n      } else if ((i + j) % 3 == 2) {\n        // random orientation 3\n\n        push();\n        translate(xpos + W / 2, ypos + H / 2);\n        rotate((3 * PI) / 2);\n        noStroke();\n        fill(color4);\n        ellipse(0, 0, W, H);\n        pop();\n\n        push();\n        translate(xpos, ypos);\n        rotate(ang3);\n        fill(color1);\n        stroke(255);\n        arc(0, 0, W, H, 0, PI / 2);\n        ellipse((2 * W) / 3, (2 * H) / 3, W / 2, H / 2);\n        pop();\n      } else if ((i + j) % 4 == 3) {\n        // random orientation 4\n\n        push();\n        translate(xpos + W / 2, ypos + H / 2);\n        rotate((3 * PI) / 2);\n        noStroke();\n        fill(color4);\n        ellipse(0, 0, W, H);\n        pop();\n\n        push();\n        translate(xpos, ypos);\n        rotate(ang4);\n        fill(color2);\n        stroke(255);\n        arc(0, 0, W, H, 0, PI / 2);\n        ellipse((2 * W) / 3, (2 * H) / 3, W / 2, H / 2);\n        pop();\n      }\n    }\n  }\n}\n\n// function to create & save a specific path name\n\nfunction saveDrawing() {\n  save(\"pattern.png\");\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66fc3cca96eb82dceeceddd4",
        "createdAt": "2024-10-17T17:26:06.641Z",
        "updatedAt": "2024-10-17T17:26:06.641Z",
        "id": "66fc3cca96eb82dceeceddd4"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fc3cca96eb82dceeceddd3",
        "createdAt": "2024-10-17T17:26:06.641Z",
        "updatedAt": "2024-10-17T17:26:06.641Z",
        "id": "66fc3cca96eb82dceeceddd3"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fc3cca96eb82dceeceddd5",
        "createdAt": "2024-10-17T17:26:06.641Z",
        "updatedAt": "2024-10-17T17:26:06.641Z",
        "id": "66fc3cca96eb82dceeceddd5"
      }
    ],
    "createdAt": "2024-10-01T18:17:46.403Z",
    "updatedAt": "2024-10-17T17:26:06.641Z",
    "id": "4mGfqYalI"
  },
  {
    "_id": "LK4tmiHdg",
    "name": "patternMaker-BASIC",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67107ce0c67296b93ff71e5d",
          "67107ce0c67296b93ff71e5e",
          "67107ce0c67296b93ff71e5f"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67107ce0c67296b93ff71e5c",
        "createdAt": "2024-10-17T14:40:26.915Z",
        "updatedAt": "2024-10-17T14:40:26.915Z",
        "id": "67107ce0c67296b93ff71e5c"
      },
      {
        "name": "sketch.js",
        "content": "// patternMaker - Basic\n\n// change the grid size; increase the number for more cells\nlet num = 10;\n// change the framerate; increase the number to go faster\nlet f = 1;\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(0);\n  // adjust the speed of the framerate\n  frameRate(f);\n\n  // determine the size of grid by adjusting the width of the squares to be a ratio of the canvas dimensions and desired number of cells\n  let W = width / num;\n  let H = height / num;\n\n  // create an angle array, which randomly updates with the framerate\n  let angle = random([0, PI, PI / 2, (3 * PI) / 2]);\n\n  // this nested forloop creates a grid of rotating squares\n  for (let j = 0; j <= height / H; j++) {\n    let ypos = j * H; // y direction\n    for (let i = 0; i <= width / W; i++) {\n      let xpos = W * i; // x direction\n\n      push();\n      translate(xpos, ypos); // rotate within the bounds of the square\n      rotate(angle); // rotate random angle 1\n      fill(255);\n      stroke(255);\n      arc(0, 0, W, H, 0, PI / 2);\n      ellipse((2 * W) / 3, (2 * H) / 3, W / 2, H / 2);\n      pop();\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67107ce0c67296b93ff71e5e",
        "createdAt": "2024-10-17T14:40:26.915Z",
        "updatedAt": "2024-10-17T14:40:26.915Z",
        "id": "67107ce0c67296b93ff71e5e"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67107ce0c67296b93ff71e5d",
        "createdAt": "2024-10-17T14:40:26.915Z",
        "updatedAt": "2024-10-17T14:40:26.915Z",
        "id": "67107ce0c67296b93ff71e5d"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67107ce0c67296b93ff71e5f",
        "createdAt": "2024-10-17T14:40:26.915Z",
        "updatedAt": "2024-10-17T14:40:26.915Z",
        "id": "67107ce0c67296b93ff71e5f"
      }
    ],
    "createdAt": "2024-10-17T02:56:32.761Z",
    "updatedAt": "2024-10-17T14:40:26.915Z",
    "id": "LK4tmiHdg"
  },
  {
    "_id": "QlAGfCUIF",
    "name": "patternMaker-FAIL",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67106bf0a12fc7212465d51c",
          "67106bf0a12fc7212465d51d",
          "67106bf0a12fc7212465d51e"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67106bf0a12fc7212465d51b",
        "createdAt": "2024-10-17T16:54:34.203Z",
        "updatedAt": "2024-10-17T16:54:34.203Z",
        "id": "67106bf0a12fc7212465d51b"
      },
      {
        "name": "sketch.js",
        "content": "// change grid size, bigger number means more cells\nlet squares = [];\n// change frame rate, bigger number is faster\nlet f = 1;\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  let angle = [0, PI, PI / 2, (3 * PI) / 2];\n  let cA = [\n    \"#D74102\",\n    \"#290431\",\n    \"#DF1233\",\n    \"red\",\n    \"#CA2C09\",\n    \"#1F1155\",\n    \"#4D57DD\",\n    \"#640124\",\n    \"#A90E0C\",\n    \"#002464\",\n    \"#78BADB\",\n    \"#F13450\",\n    \"#EB712E\",\n    \"#640124\",\n    \"#002464\",\n    \"#12A7F1\",\n  ];\n  \n  background(0);\n\n  frameRate(f);\n\n  for (let i = 0; i <= 20; i++) {\n    squares.push(new Square(random(angle), random(angle), random(angle), random(angle), random(cA), random(cA), random(cA), random(cA)));\n  }\n\n  for (let i = 0; i < squares.length; i++) {\n    squares[i].draw();\n  }\n}\n\nclass Square {\n  constructor(angle1, angle2, angle3, angle4, color1, color2, color3, color4) {\n    this.angle1 = angle1;\n    this.color1 = color1;\n    this.color2 = color2;\n    this.angle2 = angle2;\n    this.color3 = color3;\n    this.color4 = color4;\n    this.angle3 = angle3;\n    this.angle4 = angle4;\n  }\n\n  draw() {\n    for (let j = 0; j <= 20; j++) {\n      let ypos = j * 20;\n      for (let i = 0; i <= 20; i++) {\n        let xpos = 20 * i;\n\n        if ((i + j) % 3 == 0) {\n          push();\n          translate(xpos + 10, ypos + 10);\n          rotate((3 * PI) / 2);\n          noStroke();\n          fill(this.color1);\n          ellipse(0, 0, 20, 20);\n          pop();\n          push();\n          translate(xpos, ypos);\n          rotate(this.angle1);\n          fill(this.color2);\n          stroke(255);\n          arc(0, 0, 20, 20, 0, PI / 2);\n          ellipse((2 * 20) / 3, (2 * 20) / 3, 20 / 2, 20 / 2);\n          pop();\n        } else if ((i + j) % 3 == 1) {\n          push();\n          translate(xpos + 10, ypos + 10);\n          rotate((3 * PI) / 2);\n          noStroke();\n          fill(this.color2);\n          ellipse(0, 0, 20, 20);\n          pop();\n          push();\n          translate(xpos, ypos);\n          rotate(this.angle2);\n          fill(this.color3);\n          stroke(255);\n          arc(0, 0, 20, 20, 0, PI / 2);\n          ellipse((2 * 20) / 3, (2 * 20) / 3, 20 / 2, 20 / 2);\n          pop();\n        } else if ((i + j) % 3 == 2) {\n          push();\n          translate(xpos + 10, ypos + 10);\n          rotate((3 * PI) / 2);\n          noStroke();\n          fill(this.color3);\n          ellipse(0, 0, 20, 20);\n          pop();\n          push();\n          translate(xpos, ypos);\n          rotate(this.angle3);\n          fill(this.color4);\n          stroke(255);\n          arc(0, 0, 20, 20, 0, PI / 2);\n          ellipse((2 * 20) / 3, (2 * 20) / 3, 20 / 2, 20 / 2);\n          pop();\n        } else if ((i + j) % 3 == 3) {\n          push();\n          translate(xpos + 10, ypos + 10);\n          rotate((3 * PI) / 2);\n          noStroke();\n          fill(this.color4);\n          ellipse(0, 0, 20, 20);\n          pop();\n          push();\n          translate(xpos, ypos);\n          rotate(this.angle4);\n          fill(this.color1);\n          stroke(255);\n          arc(0, 0, 20, 20, 0, PI / 2);\n          ellipse((2 * 20) / 3, (2 * 20) / 3, 20 / 2, 20 / 2);\n          pop();\n        }\n      }\n    }\n  }\n}\n\n// function saveDrawing() {\n//   save(\"pattern.png\");\n// }\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67106bf0a12fc7212465d51d",
        "createdAt": "2024-10-17T16:54:34.203Z",
        "updatedAt": "2024-10-17T16:54:34.203Z",
        "id": "67106bf0a12fc7212465d51d"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67106bf0a12fc7212465d51c",
        "createdAt": "2024-10-17T16:54:34.203Z",
        "updatedAt": "2024-10-17T16:54:34.203Z",
        "id": "67106bf0a12fc7212465d51c"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67106bf0a12fc7212465d51e",
        "createdAt": "2024-10-17T16:54:34.203Z",
        "updatedAt": "2024-10-17T16:54:34.203Z",
        "id": "67106bf0a12fc7212465d51e"
      }
    ],
    "createdAt": "2024-10-17T01:44:16.511Z",
    "updatedAt": "2024-10-17T16:54:34.203Z",
    "id": "QlAGfCUIF"
  },
  {
    "_id": "X-CGyNDAJ",
    "name": "PCOMP-function",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6711247c5dc64c52bb138259",
          "6711247c5dc64c52bb138258",
          "6711247c5dc64c52bb13825a"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6711247c5dc64c52bb13825b",
        "createdAt": "2024-10-21T15:06:46.205Z",
        "updatedAt": "2024-10-21T15:06:46.205Z",
        "id": "6711247c5dc64c52bb13825b"
      },
      {
        "name": "sketch.js",
        "content": "// inspired by Sky's Ripple Wave\n\nfunction setup() {\n  createCanvas(700, 700);\n  angleMode(DEGREES);\n  rectMode(CENTER);\n}\n\nfunction draw() {\n  background(0);\n  ripple(1, 5, 50, 200, 255);\n}\n\nfunction ripple(frequency, myspeed, num, ramp1, ramp2) {\n  let margin = 10;\n\n  let mysize = (width - margin * 2) / num;\n\n  for (let i = 0; i < num; i++) {\n    for (let j = 0; j < num; j++) {\n      let x = margin + mysize / 2 + i * mysize;\n      let y = margin + mysize / 2 + j * mysize;\n\n      f =\n        sin(\n          -frameCount * myspeed + dist(width / 2, width / 2, x, y) * frequency\n        ) *\n          myspeed +\n        cos(-frameCount * myspeed);\n\n      if ((i + j) % 2 == 0) {\n        noFill();\n        strokeWeight(2);\n        stroke(dist(width / 2, width / 2, x, y) / 2, ramp1, j * 5);\n        rect(x, y, (f * mysize) / 3);\n        stroke(dist(width / 2, width / 2, x, y), 20, j);\n        circle(x, y, (f * mysize) / 5);\n      } else if ((i + j) % 2 == 1) {\n        noFill();\n        strokeWeight(2);\n        stroke(dist(width / 2, width / 2, x, y) / 4, j, ramp2);\n        rect(x, y, (f * mysize) / 4);\n        stroke(dist(width / 2, width / 2, x, y), 20, j);\n        circle(x, y, (f * mysize) / 2);\n      }\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6711247c5dc64c52bb138258",
        "createdAt": "2024-10-21T15:06:46.205Z",
        "updatedAt": "2024-10-21T15:06:46.205Z",
        "id": "6711247c5dc64c52bb138258"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6711247c5dc64c52bb138259",
        "createdAt": "2024-10-21T15:06:46.205Z",
        "updatedAt": "2024-10-21T15:06:46.205Z",
        "id": "6711247c5dc64c52bb138259"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6711247c5dc64c52bb13825a",
        "createdAt": "2024-10-21T15:06:46.205Z",
        "updatedAt": "2024-10-21T15:06:46.205Z",
        "id": "6711247c5dc64c52bb13825a"
      }
    ],
    "updatedAt": "2024-10-21T15:06:46.205Z",
    "createdAt": "2024-10-17T15:01:53.163Z",
    "id": "X-CGyNDAJ"
  },
  {
    "_id": "vaRr07Pb8",
    "name": "pcomp-p5",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "670c2fcd6e2fff6e9ab9823a",
          "670c2fcd6e2fff6e9ab98239",
          "670c2fcd6e2fff6e9ab9823b"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "670c2fcd6e2fff6e9ab9823c",
        "createdAt": "2024-10-14T21:42:27.310Z",
        "updatedAt": "2024-10-14T21:42:27.310Z",
        "id": "670c2fcd6e2fff6e9ab9823c"
      },
      {
        "name": "sketch.js",
        "content": "palette = [\n  (31, 41, 82),\n  (192, 3, 51),\n  (3, 2, 6),\n  (89, 24, 79),\n  (255, 87, 75),\n  (120, 186, 219),\n];\n\nfunction setup() {\n  createCanvas(400, 400);\n\n  describe('A gray cloudy pattern that changes.');\n}\n\nfunction draw() {\n  // Set the noise level and scale.\n  let noiseLevel = 255;\n  let noiseScale = 0.015;\n\n  // Iterate from top to bottom.\n  for (let y = 0; y < 100; y += 1) {\n    // Iterate from left to right.\n    for (let x = 0; x < width; x += 1) {\n      // Scale the input coordinates.\n      let nx = noiseScale * x;\n      let ny = noiseScale * y;\n      let nt = noiseScale * frameCount;\n\n      // Compute the noise value.\n      let c = noiseLevel * noise(nx, ny, nt);\n\n      // Draw the point.\n      stroke(c);\n      point(x, y);\n    }\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "670c2fcd6e2fff6e9ab98239",
        "createdAt": "2024-10-14T21:42:27.310Z",
        "updatedAt": "2024-10-14T21:42:27.310Z",
        "id": "670c2fcd6e2fff6e9ab98239"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "670c2fcd6e2fff6e9ab9823a",
        "createdAt": "2024-10-14T21:42:27.310Z",
        "updatedAt": "2024-10-14T21:42:27.310Z",
        "id": "670c2fcd6e2fff6e9ab9823a"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "670c2fcd6e2fff6e9ab9823b",
        "createdAt": "2024-10-14T21:42:27.310Z",
        "updatedAt": "2024-10-14T21:42:27.310Z",
        "id": "670c2fcd6e2fff6e9ab9823b"
      }
    ],
    "updatedAt": "2024-10-14T21:42:27.310Z",
    "createdAt": "2024-10-13T20:43:16.284Z",
    "id": "vaRr07Pb8"
  },
  {
    "_id": "YhhvwKSGt",
    "name": "perlin noise cloud copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67313eefcb82033ccaf798c8",
          "67313eefcb82033ccaf798c9",
          "67313eefcb82033ccaf798ca"
        ],
        "fileType": "folder",
        "_id": "67313eefcb82033ccaf798c7",
        "createdAt": "2024-11-10T23:17:05.955Z",
        "updatedAt": "2024-11-10T23:17:05.955Z",
        "id": "67313eefcb82033ccaf798c7"
      },
      {
        "name": "sketch.js",
        "content": "// 2D Noise\n// The Coding Train / Daniel Shiffman\n// https://thecodingtrain.com/learning/noise/0.5-2d-noise.html\n// https://youtu.be/ikwNrFvnL3g\n// https://editor.p5js.org/codingtrain/sketches/2_hBcOBrF\n\n// This example has been updated to use es6 syntax. To learn more about es6 visit: https://thecodingtrain.com/Tutorials/16-javascript-es6\n\nlet inc = 0.01;\nlet inc2 = 0.00020;\nlet zoff = 0;\n\nfunction setup() {\n  createCanvas(400, 400);\n  pixelDensity(1);\n}\n\nfunction draw() {\n  myClouds(30);\n//   noiseDetail(30);\n//   let yoff = 0;\n//   loadPixels();\n//   for (let y = 0; y < height; y++) {\n//     let xoff = 0;\n//     for (let x = 0; x < width; x++) {\n//       let index = (x + y * width) * 4;\n//       // let r = random(255);\n//       let r = noise(xoff, yoff, zoff) * 255;\n//       pixels[index + 0] = 0;\n//       pixels[index + 1] = r;\n//       pixels[index + 2] = r;\n//       pixels[index + 3] = 255;\n\n//       xoff += inc;\n//     }\n//     zoff += inc2;\n\n//     yoff += inc;\n\n//   }\n\n//   updatePixels();\n  //noLoop();\n}\n\nfunction myClouds(detail){\n\n   noiseDetail(detail);\n  let yoff = 0;\n  loadPixels();\n  for (let y = 0; y < height; y++) {\n    let xoff = 0;\n    for (let x = 0; x < width; x++) {\n      let index = (x + y * width) * 4;\n      // let r = random(255);\n      let r = noise(xoff, yoff, zoff) * 255;\n      pixels[index + 0] = 0;\n      pixels[index + 1] = r;\n      pixels[index + 2] = r;\n      pixels[index + 3] = 255;\n\n      xoff += inc;\n    }\n    zoff += inc2;\n\n    yoff += inc;\n\n  }\n\n  updatePixels();\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67313eefcb82033ccaf798c9",
        "createdAt": "2024-11-10T23:17:05.955Z",
        "updatedAt": "2024-11-10T23:17:05.955Z",
        "id": "67313eefcb82033ccaf798c9"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.2.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.2.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "67313eefcb82033ccaf798c8",
        "createdAt": "2024-11-10T23:17:05.955Z",
        "updatedAt": "2024-11-10T23:17:05.955Z",
        "id": "67313eefcb82033ccaf798c8"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "67313eefcb82033ccaf798ca",
        "createdAt": "2024-11-10T23:17:05.955Z",
        "updatedAt": "2024-11-10T23:17:05.955Z",
        "id": "67313eefcb82033ccaf798ca"
      }
    ],
    "createdAt": "2024-11-10T23:17:03.620Z",
    "updatedAt": "2024-11-10T23:17:05.955Z",
    "id": "YhhvwKSGt"
  },
  {
    "_id": "hxl55zo8-",
    "name": "PIXELS",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "671a90625e0719d86328dd05",
          "671a90625e0719d86328dd06",
          "671a90625e0719d86328dd07"
        ],
        "fileType": "folder",
        "_id": "671a90625e0719d86328dd04",
        "createdAt": "2024-10-24T18:34:14.359Z",
        "updatedAt": "2024-10-24T18:34:14.359Z",
        "id": "671a90625e0719d86328dd04"
      },
      {
        "name": "sketch.js",
        "content": "let pw=100;\nlet ph=100;\n\nlet cw,ch;\n\nlet video;\n\nfunction setup() {\n  createCanvas(600, 600);\n  cw=width/pw;\n  ch=height/ph;\n  video=createCapture(VIDEO);\n  video.hide();\n  pixelDensity(1);\n}\n\nfunction draw() {\n  background(220);\n  let cImage=video.get();\n  let wr=floor(cImage.width/pw);\n  let hr=floor(cImage.width/ph);\n  noStroke();\n  rectMode(CENTER);\n  cImage.loadPixels();\n  for (j=0; j<ph; j++) {\n    for (i=0; i<pw; i++) {\n      let imageI=i*wr;\n      let imageJ=j*hr;\n      let r=cImage.pixels[(imageI+imageJ*cImage.width)*4];\n      let g=cImage.pixels[(imageI+imageJ*cImage.width)*4+1];\n      let b=cImage.pixels[(imageI+imageJ*cImage.width)*4+2];\n      fill(r,g,b);\n      if (r>70) {\n      rect(i*cw,j*ch,cw,ch);\n      } else {\n        fill(150,50,100)\n       \n      ellipse(i*cw,j*ch,cw,ch);}\n      \n    }\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "671a90625e0719d86328dd06",
        "createdAt": "2024-10-24T18:34:14.359Z",
        "updatedAt": "2024-10-24T18:34:14.359Z",
        "id": "671a90625e0719d86328dd06"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "671a90625e0719d86328dd05",
        "createdAt": "2024-10-24T18:34:14.359Z",
        "updatedAt": "2024-10-24T18:34:14.359Z",
        "id": "671a90625e0719d86328dd05"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "671a90625e0719d86328dd07",
        "createdAt": "2024-10-24T18:34:14.359Z",
        "updatedAt": "2024-10-24T18:34:14.359Z",
        "id": "671a90625e0719d86328dd07"
      }
    ],
    "createdAt": "2024-10-24T18:22:26.657Z",
    "updatedAt": "2024-10-24T18:34:14.359Z",
    "id": "hxl55zo8-"
  },
  {
    "_id": "9Ur5FIIma",
    "name": "PIXELSproject",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6728f1864c7b86f2444f2318",
          "6728f1864c7b86f2444f2319",
          "6728f1864c7b86f2444f231a"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6728f1864c7b86f2444f2317",
        "createdAt": "2024-11-05T18:31:24.869Z",
        "updatedAt": "2024-11-05T18:31:24.869Z",
        "id": "6728f1864c7b86f2444f2317"
      },
      {
        "name": "sketch.js",
        "content": "// add a button, just so people know to click the screen\n// or add a text box that prints the message?\n// also replace some pixels with the ASCII char being typed, retain color of pixel? & set background color??\n\n// let keyPressCount = 0;\n\n\nlet pw = 200;\nlet ph = 200;\n\nlet cw, ch;\n\nlet video;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  cw = width / pw;\n  ch = height / ph;\n  video = createCapture(VIDEO,{flipped: true});\n  video.hide();\n  // colorMode(HSB, 360, 100, 100);\n  pixelDensity(1);\n}\n\nfunction keyPressed() {\n  // keyPressCount++; \n  return keyCode;\n\n}\n\nlet keyval1 = 0;\nlet keyval2 = 0;\n// let keyval3 = 0;\n\nfunction draw() {\n  background(220);\n\n\n  // let keyval1 = keyPressed();\n  if (keyPressed() % 2 === 0) {\n    keyval1 = keyPressed();\n  }\n  if (keyPressed() % 2 === 1) {\n    keyval2 = keyPressed();\n  }\n  // if (keyPressed() % 3 === 2) {\n  //   keyval3 = keyPressed();\n  // }\n\n  let cImage = video.get();\n  let wr = floor(cImage.width / pw);\n  let hr = floor(cImage.width / ph);\n  noStroke();\n  cImage.loadPixels();\n  for (j = 0; j < ph; j++) {\n    for (i = 0; i < pw; i++) {\n      let imageI = i * wr;\n      let imageJ = j * hr;\n      let r = cImage.pixels[(imageI + imageJ * cImage.width) * 4];\n      let g = map(keyval1, 32, 126, 0, 255);\n\n      let b = map(keyval2, 32, 126, 0, 255);\n      // console.log(g);\n\n      //       if (keyval % 3 === 0) {\n      //         r = map(keyval1, 32, 126, 0, 255);\n      //       } else {\n      //         r = cImage.pixels[(imageI + imageJ * cImage.width) * 4];\n      //       }\n\n      //       if (keyval % 3 === 1) {\n      //         g = map(keyval2, 32, 126, 0, 255);\n      //       } else {\n      //         g = cImage.pixels[(imageI + imageJ * cImage.width) * 4 + 1];\n      //       }\n\n      //       if (keyval % 3 === 2) {\n      //         b = map(keyval3, 32, 126, 0, 255);\n      //       } else {\n      //         b = cImage.pixels[(imageI + imageJ * cImage.width) * 4 + 2];\n      //       }\n\n      fill(r, g, b);\n\n      rect(i * cw, j * ch, cw, ch);\n    }\n  }\n  // stroke(255);\n  // text(`${key} : ${keyCode}`, 10, 10);\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6728f1864c7b86f2444f2319",
        "createdAt": "2024-11-05T18:31:24.869Z",
        "updatedAt": "2024-11-05T18:31:24.869Z",
        "id": "6728f1864c7b86f2444f2319"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\n    <meta charset=\"utf-8\" />\n  </head>\n  <body>\n    <div style=\"display: flex;justify-content: center; text-align: center;\">\n      <button\n        onclick=\"document.getElementById( \n            'i1').value = ''\"\n      >\n        clear shit\n      </button>\n      <input\n        id=\"i1\"\n        style=\"display: flex;justify-content: center; text-align: center;\"\n        type=\"text\"\n        placeholder=\"type shit\"\n      />\n    </div>\n\n    <main></main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6728f1864c7b86f2444f2318",
        "createdAt": "2024-11-05T18:31:24.869Z",
        "updatedAt": "2024-11-05T18:31:24.869Z",
        "id": "6728f1864c7b86f2444f2318"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6728f1864c7b86f2444f231a",
        "createdAt": "2024-11-05T18:31:24.869Z",
        "updatedAt": "2024-11-05T18:31:24.869Z",
        "id": "6728f1864c7b86f2444f231a"
      }
    ],
    "createdAt": "2024-11-04T16:08:38.616Z",
    "updatedAt": "2024-11-05T18:31:24.869Z",
    "id": "9Ur5FIIma"
  },
  {
    "_id": "hzMPd6IpS",
    "name": "PIXELSproject 2.0",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "672a79df60115d5452f5c675",
          "672a79df60115d5452f5c676",
          "672a79df60115d5452f5c677"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "672a79df60115d5452f5c674",
        "createdAt": "2024-11-07T18:16:32.466Z",
        "updatedAt": "2024-11-07T18:16:32.466Z",
        "id": "672a79df60115d5452f5c674"
      },
      {
        "name": "sketch.js",
        "content": "let video;\nlet pw = 100; // Number of pixels in width\nlet ph = 100; // Number of pixels in height\nlet cw, ch;\nlet keyval1 = 0;\nlet keyval2 = 0;\nlet clearedPixels = [];\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  video = createCapture(VIDEO);\n  video.size(400, 400);\n  video.hide();\n  cw = windowWidth / pw;\n  ch = windowHeight / ph;\n  setInterval(clearRandomPixels, 1000);\n}\n\nfunction draw() {\n  background(255);\n  // Splits ASCII values into 2 groups\n  if (keyPressed() % 2 === 0) {\n    keyval1 = keyPressed();\n  }\n  if (keyPressed() % 2 === 1) {\n    keyval2 = keyPressed();\n  }\n  let cImage = video.get();\n  let wr = floor(cImage.width / pw);\n  let hr = floor(cImage.height / ph);\n  let char = document.getElementById(\"i1\").value; // make input field value a variable\n  noStroke();\n  cImage.loadPixels();\n\n  for (let j = 0; j < ph; j++) {\n    for (let i = 0; i < pw; i++) {\n      let imageI = i * wr;\n      let imageJ = j * hr;\n      // keeps red value of the video pixel\n      let r = cImage.pixels[(imageI + imageJ * cImage.width) * 4];\n      // maps even ASCII values to an RGB value\n      let g = map(keyval1, 32, 126, 0, 255);\n      // maps odd ASCII values to an RGB value\n      let b = map(keyval2, 32, 126, 0, 255);\n      // draw pixel\n      rect(i * cw, j * ch, cw, ch);\n\n      // Check if this pixel has been cleared\n      if (!clearedPixels.includes(`${i},${j}`)) {\n        fill(r, g, b);\n      } else {\n        fill(255); // white text\n        // Draw the character at the calculated position in the grid\n        text(char, i * cw + cw / 2, j * ch + ch / 2);\n        // but keep pixel colors\n        fill(r, g, b);\n      }\n    }\n  }\n}\n// gets keycode for the keyval variables\nfunction keyPressed() {\n  // keyPressCount++;\n  return keyCode;\n}\n\n// Function to clear 500 random pixels\nfunction clearRandomPixels() {\n  clearedPixels = []; // Reset cleared pixels\n  let totalPixels = pw * ph;\n  let pixelsToClear = 500;\n\n  for (let n = 0; n < pixelsToClear; n++) {\n    let randomPixel = floor(random(totalPixels));\n    let i = randomPixel % pw; // X index\n    let j = floor(randomPixel / pw); // Y index\n    clearedPixels.push(`${i},${j}`);\n  }\n}\n// clears input field on click of button\nfunction myClear() {\n  document.getElementById(\"i1\").value = \"\";\n}\n\nfunction mousePressed() {\n  if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {\n    let fs = fullscreen();\n    fullscreen(!fs);\n  }\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n  video = createCapture(VIDEO);\n  video.size(400, 400);\n  video.hide();\n  cw = windowWidth / pw;\n  ch = windowHeight / ph;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "672a79df60115d5452f5c676",
        "createdAt": "2024-11-07T18:16:32.466Z",
        "updatedAt": "2024-11-07T18:16:32.466Z",
        "id": "672a79df60115d5452f5c676"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\n    <meta charset=\"utf-8\" />\n  </head>\n  <body>\n    <div style=\"display: flex;justify-content: center; text-align: center;\">\n      <input\n        id=\"i1\"\n        style=\"display: flex;justify-content: center; text-align: center;\"\n        type=\"text\"\n        placeholder=\"type shit\"\n      />\n      <button\n        onclick=\"myClear()\"\n      >\n        clear shit\n      </button>\n    </div>\n\n    <main></main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672a79df60115d5452f5c675",
        "createdAt": "2024-11-07T18:16:32.466Z",
        "updatedAt": "2024-11-07T18:16:32.466Z",
        "id": "672a79df60115d5452f5c675"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672a79df60115d5452f5c677",
        "createdAt": "2024-11-07T18:16:32.466Z",
        "updatedAt": "2024-11-07T18:16:32.466Z",
        "id": "672a79df60115d5452f5c677"
      }
    ],
    "createdAt": "2024-11-05T20:02:39.326Z",
    "updatedAt": "2024-11-07T18:16:32.466Z",
    "id": "hzMPd6IpS"
  },
  {
    "_id": "zn_hQw3Uj",
    "name": "PIXELSproject REAL DEAL",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "672a680760115d5452f5c671",
          "672a680760115d5452f5c672",
          "672a680760115d5452f5c673"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "672a680760115d5452f5c670",
        "createdAt": "2024-11-05T20:18:53.159Z",
        "updatedAt": "2024-11-05T20:18:53.159Z",
        "id": "672a680760115d5452f5c670"
      },
      {
        "name": "sketch.js",
        "content": "let video;\nlet pw = 200; // Number of pixels in width\nlet ph = 200; // Number of pixels in height\nlet cw, ch;\nlet keyval1 = 0;\nlet keyval2 = 0;\nlet clearedPixels = [];\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  video = createCapture(VIDEO);\n  video.size(400, 400);\n  video.hide();\n  cw = width / pw;\n  ch = height / ph;\n  setInterval(clearRandomPixels, 3000);\n}\n\nfunction draw() {\n  background(255);\n  // Splits ASCII values into 2 groups\n  if (keyPressed() % 2 === 0) {\n    keyval1 = keyPressed();\n  }\n  if (keyPressed() % 2 === 1) {\n    keyval2 = keyPressed();\n  }\n  let cImage = video.get();\n  let wr = floor(cImage.width / pw);\n  let hr = floor(cImage.height / ph);\n  noStroke();\n  cImage.loadPixels();\n\n  for (let j = 0; j < ph; j++) {\n    for (let i = 0; i < pw; i++) {\n      let imageI = i * wr;\n      let imageJ = j * hr;\n      // keeps red value of the video pixel\n      let r = cImage.pixels[(imageI + imageJ * cImage.width) * 4];\n      // maps even ASCII values to an RGB value\n      let g = map(keyval1, 32, 126, 0, 255);\n      // maps odd ASCII values to an RGB value\n      let b = map(keyval2, 32, 126, 0, 255);\n      // draw pixel\n      rect(i * cw, j * ch, cw, ch);\n\n      // Check if this pixel has been cleared\n      if (!clearedPixels.includes(`${i},${j}`)) {\n        fill(r, g, b);\n      } else {\n        let char = key; // take key most recently typed\n\n        fill(255); // white text\n        // Draw the character at the calculated position in the grid\n        text(char, i * cw + cw / 2, j * ch + ch / 2);\n        // but keep pixel colors\n        fill(r, g, b);\n      }\n    }\n  }\n}\n\n// gets keycode for the keyval variables\nfunction keyPressed() {\n  // keyPressCount++;\n  return keyCode;\n}\n\n// Function to clear 500 random pixels\nfunction clearRandomPixels() {\n  clearedPixels = []; // Reset cleared pixels\n  let totalPixels = pw * ph;\n  let pixelsToClear = 500;\n\n  for (let n = 0; n < pixelsToClear; n++) {\n    let randomPixel = floor(random(totalPixels));\n    let i = randomPixel % pw; // X index\n    let j = floor(randomPixel / pw); // Y index\n    clearedPixels.push(`${i},${j}`);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "672a680760115d5452f5c672",
        "createdAt": "2024-11-05T20:18:53.159Z",
        "updatedAt": "2024-11-05T20:18:53.159Z",
        "id": "672a680760115d5452f5c672"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\n    <meta charset=\"utf-8\" />\n  </head>\n  <body>\n    <div style=\"display: flex;justify-content: center; text-align: center;\">\n      <input\n        id=\"i1\"\n        style=\"display: flex;justify-content: center; text-align: center;\"\n        type=\"text\"\n        placeholder=\"type shit\"\n      />\n      <button\n        onclick=\"document.getElementById( \n            'i1').value = ''\"\n      >\n        clear shit\n      </button>\n    </div>\n\n    <main></main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672a680760115d5452f5c671",
        "createdAt": "2024-11-05T20:18:53.159Z",
        "updatedAt": "2024-11-05T20:18:53.159Z",
        "id": "672a680760115d5452f5c671"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672a680760115d5452f5c673",
        "createdAt": "2024-11-05T20:18:53.159Z",
        "updatedAt": "2024-11-05T20:18:53.159Z",
        "id": "672a680760115d5452f5c673"
      }
    ],
    "createdAt": "2024-11-05T18:46:31.367Z",
    "updatedAt": "2024-11-05T20:18:53.159Z",
    "id": "zn_hQw3Uj"
  },
  {
    "_id": "EjIzJuQ99B",
    "name": "Plant chokeberry",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "672936d0ec8d3e3e44766b76",
          "672936d0ec8d3e3e44766b75",
          "672936d0ec8d3e3e44766b77"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "672936d0ec8d3e3e44766b78",
        "createdAt": "2024-11-05T02:34:35.053Z",
        "updatedAt": "2024-11-05T02:34:35.053Z",
        "id": "672936d0ec8d3e3e44766b78"
      },
      {
        "name": "sketch.js",
        "content": "// variable to hold an instance of the p5.webserial library:\nconst serial = new p5.WebSerial();\n \n// HTML button object:\nlet portButton;\nlet inData;                      // for incoming serial data\nlet outData;                     // for outgoing data\n// variables for the circle to be drawn:\nlet locH, locV;\nlet circleColor = 255;\n \nfunction setup() {\n  createCanvas(400, 300);          // make the canvas\n  // check to see if serial is available:\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n  // if serial is available, add connect/disconnect listeners:\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n  // check for any ports that are available:\n  serial.getPorts();\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n}\nfunction draw() {\n  background(0);               // black background\n  fill(circleColor);           // fill depends on the button\n  ellipse(locH, locV, 50, 50); // draw the circle\n}\n \n// if there's no port selected, \n// make a port select button appear:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton('choose port');\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n \n// make the port selector window appear:\nfunction choosePort() {\n  serial.requestPort();\n}\n \n// open the selected port, and make the port \n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  serial.open().then(initiateSerial);\n \n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n \nfunction serialEvent() {\n  // read a string from the serial port\n  // until you get carriage return and newline:\n  var inString = serial.readStringUntil(\"\\r\\n\");\n  //check to see that there's actually a string there:\n  if (inString) {\n    // split the string on the commas:\n    var sensors = split(inString, \",\");\n    if (sensors.length > 2) {\n      // if there are three elements\n      // element 0 is the locH:\n      locH = map(sensors[0], 0, 1023, 0, width);\n      // element 1 is the locV:\n      locV = map(sensors[1], 0, 1023, 0, height);\n      // element 2 is the button:\n      circleColor = 255 - sensors[2] * 255;\n    }\n  }\n}\n \n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n \n// try to connect if a new serial port \n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n \n// if a port is disconnected:\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "672936d0ec8d3e3e44766b75",
        "createdAt": "2024-11-05T02:34:35.053Z",
        "updatedAt": "2024-11-05T02:34:35.053Z",
        "id": "672936d0ec8d3e3e44766b75"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n     \n<script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672936d0ec8d3e3e44766b76",
        "createdAt": "2024-11-05T02:34:35.053Z",
        "updatedAt": "2024-11-05T02:34:35.053Z",
        "id": "672936d0ec8d3e3e44766b76"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672936d0ec8d3e3e44766b77",
        "createdAt": "2024-11-05T02:34:35.053Z",
        "updatedAt": "2024-11-05T02:34:35.053Z",
        "id": "672936d0ec8d3e3e44766b77"
      }
    ],
    "updatedAt": "2024-11-05T02:34:35.053Z",
    "createdAt": "2024-11-04T21:05:03.023Z",
    "id": "EjIzJuQ99B"
  },
  {
    "_id": "CxQdHRtge",
    "name": "playMic",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "673258d76ee2fe76d3609546",
          "673258d76ee2fe76d3609547",
          "673258d76ee2fe76d3609548"
        ],
        "fileType": "folder",
        "_id": "673258d76ee2fe76d3609545",
        "createdAt": "2024-11-11T19:26:20.531Z",
        "updatedAt": "2024-11-11T19:26:20.531Z",
        "id": "673258d76ee2fe76d3609545"
      },
      {
        "name": "sketch.js",
        "content": "let mic;\n\nfunction setup() {\n  createCanvas(400, 400);\n\n  mic = new p5.AudioIn();\n  mic.start();\n}\n\nfunction draw() {\n  let vol = mic.getLevel();\n\n  if (vol > 0.2) {\n    background(255, 0, 200);\n  } else {\n    background(255, 0, 100);\n  }\n\n  fill(100, 0, 255);\n  stroke(0);\n\n  let w = map(vol, 0, 1, 100, 500);\n  circle(width / 2, height / 2, w);\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "673258d76ee2fe76d3609547",
        "createdAt": "2024-11-11T19:26:20.531Z",
        "updatedAt": "2024-11-11T19:26:20.531Z",
        "id": "673258d76ee2fe76d3609547"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "673258d76ee2fe76d3609546",
        "createdAt": "2024-11-11T19:26:20.531Z",
        "updatedAt": "2024-11-11T19:26:20.531Z",
        "id": "673258d76ee2fe76d3609546"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "673258d76ee2fe76d3609548",
        "createdAt": "2024-11-11T19:26:20.531Z",
        "updatedAt": "2024-11-11T19:26:20.531Z",
        "id": "673258d76ee2fe76d3609548"
      }
    ],
    "createdAt": "2024-11-11T19:19:52.054Z",
    "updatedAt": "2024-11-11T19:26:20.531Z",
    "id": "CxQdHRtge"
  },
  {
    "_id": "8LpmygscG",
    "name": "playSong",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "673250dd998f57051ee01272",
          "673250dd998f57051ee01271",
          "673250dd998f57051ee01273",
          "67325104998f57051ee01275"
        ],
        "fileType": "folder",
        "_id": "673250dd998f57051ee01274",
        "createdAt": "2024-11-11T18:49:53.833Z",
        "updatedAt": "2024-11-11T18:49:53.833Z",
        "id": "673250dd998f57051ee01274"
      },
      {
        "name": "sketch.js",
        "content": "let song;\n\nfunction preload() {\n  song = loadSound(\"sweet.mp3\");\n}\n\nfunction setup() {\n  createCanvas(400, 400);\n  song.loop();\n}\n\nfunction draw() {\n  background(220);\n}\n\nfunction mousePressed() {\n  if (song.isPlaying()) {\n    song.pause();\n  } else {\n    song.loop();\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "673250dd998f57051ee01271",
        "createdAt": "2024-11-11T18:49:53.833Z",
        "updatedAt": "2024-11-11T18:49:53.833Z",
        "id": "673250dd998f57051ee01271"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "673250dd998f57051ee01272",
        "createdAt": "2024-11-11T18:49:53.833Z",
        "updatedAt": "2024-11-11T18:49:53.833Z",
        "id": "673250dd998f57051ee01272"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "673250dd998f57051ee01273",
        "createdAt": "2024-11-11T18:49:53.833Z",
        "updatedAt": "2024-11-11T18:49:53.833Z",
        "id": "673250dd998f57051ee01273"
      },
      {
        "name": "sweet.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/f974189b-cf8a-46b4-a4f4-2fa900969783.mp3",
        "children": [],
        "fileType": "file",
        "_id": "67325104998f57051ee01275",
        "createdAt": "2024-11-11T18:49:53.833Z",
        "updatedAt": "2024-11-11T18:49:53.833Z",
        "id": "67325104998f57051ee01275"
      }
    ],
    "updatedAt": "2024-11-11T18:49:53.833Z",
    "createdAt": "2024-11-11T18:49:02.501Z",
    "id": "8LpmygscG"
  },
  {
    "_id": "OXCThdElg",
    "name": "playSongs",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "673251f0d0ead7aae1964ea1",
          "673252027ff96ad83bfa67c3",
          "673251e0130349f673e33dc8",
          "673251ff7ff96ad83bfa672c",
          "673251e0130349f673e33dc9",
          "673251e0130349f673e33dca",
          "6732520ad0ead7aae1965ac8",
          "673251e0130349f673e33dcb"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "673251e0130349f673e33dc7",
        "createdAt": "2024-11-11T19:18:28.171Z",
        "updatedAt": "2024-11-11T19:18:28.171Z",
        "id": "673251e0130349f673e33dc7"
      },
      {
        "name": "sketch.js",
        "content": "let songs = [];\nlet current = 0;\nlet prev = 0;\n\nfunction preload() {\n  songs[0] = loadSound(\"sweet.mp3\");\n  songs[1] = loadSound(\"beach.mp3\");\n  songs[2] = loadSound(\"shiver.mp3\");\n  songs[3] = loadSound(\"data.mp3\");\n  songs[4] = loadSound(\"sunshine.mp3\");\n}\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n}\n\nfunction keyPressed() {\n  if (keyCode === RIGHT_ARROW) {\n    if (current <= 4) {\n      songs[current].play();\n      current++;\n    } else if (current > 4) {\n      current = 0;\n    }\n\n    if (current > 1) {\n      songs[prev].stop();\n      prev++;\n    } else if (prev >= 4) {\n      songs[prev].stop();\n      prev = 0;\n    }\n  }\n\n  // if (key === \" \" && songs[current].isPlaying()) {\n  //   songs[current].pause();\n  // } else if (key === \" \" && songs[current].isPlaying() === false) {\n  //   songs[current].play();\n  // }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "673251e0130349f673e33dc9",
        "createdAt": "2024-11-11T19:18:28.171Z",
        "updatedAt": "2024-11-11T19:18:28.171Z",
        "id": "673251e0130349f673e33dc9"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673251e0130349f673e33dc8",
        "createdAt": "2024-11-11T19:18:28.171Z",
        "updatedAt": "2024-11-11T19:18:28.171Z",
        "id": "673251e0130349f673e33dc8"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673251e0130349f673e33dca",
        "createdAt": "2024-11-11T19:18:28.171Z",
        "updatedAt": "2024-11-11T19:18:28.171Z",
        "id": "673251e0130349f673e33dca"
      },
      {
        "name": "sweet.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/2ca955b7-ee88-4137-a9a0-6777177ca859.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673251e0130349f673e33dcb",
        "createdAt": "2024-11-11T19:18:28.171Z",
        "updatedAt": "2024-11-11T19:18:28.171Z",
        "id": "673251e0130349f673e33dcb"
      },
      {
        "name": "beach.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/7ef8b346-be83-424d-bdba-8d2d640df695.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673251f0d0ead7aae1964ea1",
        "createdAt": "2024-11-11T19:18:28.171Z",
        "updatedAt": "2024-11-11T19:18:28.171Z",
        "id": "673251f0d0ead7aae1964ea1"
      },
      {
        "name": "shiver.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/8fc86909-ef12-4255-ab1b-4e377e2cdea1.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673251ff7ff96ad83bfa672c",
        "createdAt": "2024-11-11T19:18:28.171Z",
        "updatedAt": "2024-11-11T19:18:28.171Z",
        "id": "673251ff7ff96ad83bfa672c"
      },
      {
        "name": "data.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/7e1f4e94-7246-40b5-bba3-79f6157f11cf.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673252027ff96ad83bfa67c3",
        "createdAt": "2024-11-11T19:18:28.171Z",
        "updatedAt": "2024-11-11T19:18:28.171Z",
        "id": "673252027ff96ad83bfa67c3"
      },
      {
        "name": "sunshine.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/867f9c70-2c3f-434f-b632-e60401a846b9.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6732520ad0ead7aae1965ac8",
        "createdAt": "2024-11-11T19:18:28.171Z",
        "updatedAt": "2024-11-11T19:18:28.171Z",
        "id": "6732520ad0ead7aae1965ac8"
      }
    ],
    "createdAt": "2024-11-11T18:50:09.370Z",
    "updatedAt": "2024-11-11T19:18:28.171Z",
    "id": "OXCThdElg"
  },
  {
    "_id": "OmTgEU4u5",
    "name": "PoolSlider",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66f346522633a374ccc8f412",
          "66f346522633a374ccc8f411",
          "66f346522633a374ccc8f413"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66f346522633a374ccc8f414",
        "createdAt": "2024-09-26T17:44:57.078Z",
        "updatedAt": "2024-09-26T17:44:57.078Z",
        "id": "66f346522633a374ccc8f414"
      },
      {
        "name": "sketch.js",
        "content": "let dragging = false;\nlet myGreen = \"#0a6c03\";\nlet myRed = \"#B50D0A\";\nlet myCream = \"#FFFDD0\";\nlet r = 25;\nlet cx;\nlet cy;\n\nfunction setup() {\n  createCanvas(400, 400);\n  cx = width / 2;\n  cy = height / 2;\n}\n\nfunction draw() {\n  background(cy, 0, cx);\n\n  // pool table\n  strokeWeight(15);\n  stroke(0);\n  fill(myGreen);\n  rect(width / 4, 50, width / 2, 300, 10);\n  fill(0);\n  arc(width / 4, 50, 50, 50, 0, PI / 2);\n  arc((3 * width) / 4, 50, 50, 50, PI / 2, PI);\n  arc((3 * width) / 4, 350, 50, 50, PI, (3 * PI) / 2);\n  arc(width / 4, 350, 50, 50, (3 * PI) / 2, 0);\n  strokeWeight(0);\n  arc((3 * width) / 4, 200, 50, 50, PI / 2, (3 * PI) / 2);\n  arc(width / 4, 200, 50, 50, (3 * PI) / 2, PI / 2);\n\n  // pool ball\n  strokeWeight(5);\n  fill(myCream);\n  stroke(myRed);\n  circle(cx, cy, 50);\n  strokeWeight(5);\n  noFill();\n  arc(cx, cy - 6, 50, 15, 0, PI);\n  arc(cx, cy - 2, 50, 15, 0, PI);\n  arc(cx, cy + 3, 50, 15, 0, PI);\n\n  if (dragging) {\n    // constrain & change to 8 ball\n    strokeWeight(6);\n    fill(0);\n    stroke(0);\n    circle(cx, cy, 50);\n    fill(myCream);\n    circle(cx - 5, cy, 30);\n    text(\"8\", cx - 9, cy + 4);\n    cx = constrain(mouseX, width / 4 + r, (3 * width) / 4 - r);\n    cy = constrain(mouseY, 50 + r, 350 - r);\n  }\n}\n\nfunction mousePressed() {\n  // Did I click on slider?\n  if (dist(mouseX, mouseY, cx, cy) < r) {\n    dragging = true;\n  }\n}\n\nfunction mouseReleased() {\n  // Stop dragging\n  dragging = false;\n  cx = width / 2;\n  cy = height / 2;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66f346522633a374ccc8f411",
        "createdAt": "2024-09-26T17:44:57.078Z",
        "updatedAt": "2024-09-26T17:44:57.078Z",
        "id": "66f346522633a374ccc8f411"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66f346522633a374ccc8f412",
        "createdAt": "2024-09-26T17:44:57.078Z",
        "updatedAt": "2024-09-26T17:44:57.078Z",
        "id": "66f346522633a374ccc8f412"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66f346522633a374ccc8f413",
        "createdAt": "2024-09-26T17:44:57.078Z",
        "updatedAt": "2024-09-26T17:44:57.078Z",
        "id": "66f346522633a374ccc8f413"
      }
    ],
    "updatedAt": "2024-09-26T17:44:57.078Z",
    "createdAt": "2024-09-25T00:15:13.955Z",
    "id": "OmTgEU4u5"
  },
  {
    "_id": "CDwTbFgAL",
    "name": "portals",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67d87dfb9f502e42bdab2c90",
          "67db61db5660f30fd8254410",
          "67d87ef9dca32fd90b918740",
          "67d87ba899c5027a65152083",
          "67db63ba5660f30fd8265489",
          "67d6ea093100737f9eec34a3",
          "67d6d9b8a274f44c1780c84b",
          "67d6fd92accbc245bf50cd6d"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d6d9b8a274f44c1780c84a",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67d6d9b8a274f44c1780c84a"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ml5.js bodySegmentation Parts Example</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\n  </head>\n  <body>\n    <script src=\"alterEgo.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6d9b8a274f44c1780c84b",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67d6d9b8a274f44c1780c84b"
      },
      {
        "name": "images",
        "content": "",
        "children": [
          "67d6ea903100737f9eec7214",
          "67d6f1cf1335b40f5025f6d9",
          "67d6f230accbc245bf4d8192",
          "67d6f0471335b40f50252350",
          "67d6f0481335b40f50252365",
          "67d6f0481335b40f5025243f",
          "67d6ea951335b40f50234c3c",
          "67d6ea96da939a486c6cc8fa",
          "67d6ea96da939a486c6cc93a",
          "67d6f049da939a486c6e8c6c",
          "67d6ea913100737f9eec7230",
          "67d6ea901335b40f50234b69",
          "67d6ea92da939a486c6cc821",
          "67d6ea921335b40f50234b94",
          "67d6f0463100737f9eee13c0",
          "67d6f046accbc245bf4c94af",
          "67d6f0473100737f9eee1803",
          "67d6f22fda939a486c6f73e2"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d6ea093100737f9eec34a3",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67d6ea093100737f9eec34a3"
      },
      {
        "name": "3.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/bbb4fc75-c788-4ecf-b330-ed691f220862.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6ea901335b40f50234b69",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67d6ea901335b40f50234b69"
      },
      {
        "name": "1.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/f67ba8e7-da3d-4e66-885a-3d92321deb98.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6ea903100737f9eec7214",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67d6ea903100737f9eec7214"
      },
      {
        "name": "2.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/65ce864b-3699-4c7e-a754-37a57e19d3d6.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6ea913100737f9eec7230",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67d6ea913100737f9eec7230"
      },
      {
        "name": "4.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/2f089ac0-3c4f-4c1d-97d7-6f36d2104efb.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6ea92da939a486c6cc821",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67d6ea92da939a486c6cc821"
      },
      {
        "name": "5.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/8e135767-e09b-480c-a292-151ee9b8985f.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6ea921335b40f50234b94",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67d6ea921335b40f50234b94"
      },
      {
        "name": "15.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/0faeb6a9-3545-41e4-be0d-0a0d891676cc.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6ea951335b40f50234c3c",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67d6ea951335b40f50234c3c"
      },
      {
        "name": "16.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/fa32e022-88f6-4015-9da4-65e93e4ffc53.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6ea96da939a486c6cc8fa",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67d6ea96da939a486c6cc8fa"
      },
      {
        "name": "17.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/2f019ab2-06ad-48d3-8129-2022e3020e5c.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6ea96da939a486c6cc93a",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67d6ea96da939a486c6cc93a"
      },
      {
        "name": "7.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/04e887d7-b019-442b-b8c2-9b7ff91a6c25.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6f046accbc245bf4c94af",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67d6f046accbc245bf4c94af"
      },
      {
        "name": "6.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/388fd769-2c9b-44fc-90a5-b7970bda90da.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6f0463100737f9eee13c0",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67d6f0463100737f9eee13c0"
      },
      {
        "name": "8.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/a1fc7d44-2194-42ad-8b23-38adbc1db01f.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6f0473100737f9eee1803",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67d6f0473100737f9eee1803"
      },
      {
        "name": "12.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/b068b691-2701-403a-9035-c23fa7371a59.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6f0471335b40f50252350",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67d6f0471335b40f50252350"
      },
      {
        "name": "13.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/bb2e0b59-f58f-4650-9965-191d2bc7fedc.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6f0481335b40f50252365",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67d6f0481335b40f50252365"
      },
      {
        "name": "14.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/642ab86a-17a1-4d4f-9895-e91ad849eb9d.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6f0481335b40f5025243f",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67d6f0481335b40f5025243f"
      },
      {
        "name": "18.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/400c1cf9-497d-454a-96fc-e58cdc8e74aa.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6f049da939a486c6e8c6c",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67d6f049da939a486c6e8c6c"
      },
      {
        "name": "10.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/eb1a84bd-9fe3-4e77-b526-5458a4d029b5.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6f1cf1335b40f5025f6d9",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67d6f1cf1335b40f5025f6d9"
      },
      {
        "name": "9.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/896d603a-c639-418a-ae3e-bb304f51560b.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6f22fda939a486c6f73e2",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67d6f22fda939a486c6f73e2"
      },
      {
        "name": "11.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/f235be5d-85f2-4f1a-9de8-c1b0e12f3ff5.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6f230accbc245bf4d8192",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67d6f230accbc245bf4d8192"
      },
      {
        "name": "rippleEffect.js",
        "content": "// Body segmentation variables\nlet bodySegmentation;\nlet video;\nlet segmentation;\nlet personImage;\n\nlet options = {\n  maskType: \"parts\",\n};\n\nlet portals = [];\nlet fishEye;\n\nfunction preload() {\n  let images = 3;\n  for (let i = 1; i <= images; i++) {\n    let path = 'images/' + i + '.jpeg';\n    loadImage(path, img => {\n      img.resize(640, 480);\n      portals.push(img);\n    });\n  }\n\n  bodySegmentation = ml5.bodySegmentation(\"BodyPix\", options);\n}\n\nfunction setup() {\n  createCanvas(640, 480);\n  \n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n\n  bodySegmentation.detectStart(video, gotResults);\n\n  personImage = createImage(video.width, video.height);\n  \n  // **Create fisheye buffer**\n  fishEye = createGraphics(video.width, video.height);\n  \n  frameRate(30);\n}\n\nfunction draw() {\n  background(0);\n  \n  // **Apply fisheye effect every frame**\n   applyFisheyeEffect(portals[2], fishEye, width / 2, height / 2);\n  \n  // **Step 1: Display the fisheye-processed video**\n  image(portals[2], 0, 0, width, height);\n   //image(fishEye, 0, 0, width*2, height*4);\n\n  if (segmentation) {\n    copyForegroundPixels(fishEye, segmentation.mask, personImage);\n    image(personImage, 0, 0, width, height);\n  }\n}\n\n// Callback for body segmentation\nfunction gotResults(result) {\n  segmentation = result;\n}\n\n// **Optimized function for copying pixels based on segmentation**\nfunction copyForegroundPixels(imgSource, imgMask, imgResult) {\n  imgSource.loadPixels();\n  imgMask.loadPixels();\n  imgResult.loadPixels();\n\n  let totalPixels = imgResult.pixels.length;\n  const imgChannels = 4;\n\n  for (let i = 0; i < totalPixels; i += imgChannels) {\n    let maskR = imgMask.pixels[i]; // Red channel in grayscale mask\n\n    if (maskR === 255) {  // Background -> Transparent\n      imgResult.pixels[i + 3] = 0;\n    } else {  // Foreground -> Keep pixels\n      imgResult.pixels[i] = imgSource.pixels[i];\n      imgResult.pixels[i + 1] = imgSource.pixels[i + 1];\n      imgResult.pixels[i + 2] = imgSource.pixels[i + 2];\n      imgResult.pixels[i + 3] = 255;\n    }\n  }\n\n  imgResult.updatePixels();\n}\n\n\n// **Optimized fisheye function (now applied every frame)**\nfunction applyFisheyeEffect(input, output, centerX, centerY) {\n  input.loadPixels(); // **Get the latest frame from the video**\n  output.loadPixels();\n  \n  let maxDistance = dist(centerX, centerY, 0, 0);\n  let tempPixels = new Uint8ClampedArray(output.pixels); // Faster array processing\n\n  for (let y = 0; y < input.height; y++) {\n    for (let x = 0; x < input.width; x++) {\n      let dx = x - centerX;\n      let dy = y - centerY;\n      let distance = sqrt(dx * dx + dy * dy);\n      let angle = atan2(dy, dx);\n\n      // **Apply Centered Ripple Effect**\n      distance = distance + 20 * sin(distance / 2);\n\n      let tempX = floor(centerX + cos(angle) * distance);\n      let tempY = floor(centerY + sin(angle) * distance);\n\n      if (tempX >= 0 && tempX < input.width && tempY >= 0 && tempY < input.height) {\n        let srcIndex = (tempY * input.width + tempX) * 4;\n        let dstIndex = (y * input.width + x) * 4;\n        \n        tempPixels[dstIndex] = input.pixels[srcIndex];\n        tempPixels[dstIndex + 1] = input.pixels[srcIndex + 1];\n        tempPixels[dstIndex + 2] = input.pixels[srcIndex + 2];\n        tempPixels[dstIndex + 3] = 255;\n      }\n    }\n  }\n\n  output.pixels.set(tempPixels);\n  output.updatePixels();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fd92accbc245bf50cd6d",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67d6fd92accbc245bf50cd6d"
      },
      {
        "name": "defunct.js",
        "content": "// Body segmentation variables\nlet bodySegmentation;\nlet video;\nlet segmentation;\nlet personImage;\n\nlet options = {\n  maskType: \"parts\",\n};\n\nlet portals = [];\nlet fishEye;\n\n\nfunction preload() {\n  let images = 3;\n  for (let i = 1; i < images + 1; i++) {\n    let path = 'images/' + String(i) + '.jpeg';\n    loadImage(path, \n      img => {\n        img.resize(640, 480);\n        portals.push(img);\n        // console.log(\"Loaded:\", path);\n      }, \n      err => console.error(\"Failed to load:\", path, err)\n    );\n  }\n\n  bodySegmentation = ml5.bodySegmentation(\"BodyPix\", options);\n}\n\n\nfunction setup() {\n  createCanvas(640, 480);\n  // Create the video\n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n\n  bodySegmentation.detectStart(video, gotResults);\n\n  // Create an image for segmented output\n  personImage = createImage(video.width, video.height);\n  \n  // let IMG = image(portals[2],0,0,640,480)\n  fishEye = fisheye(portals[2], 320, 240)\n  frameRate(1);\n  // noLoop();\n}\n\nfunction draw() {\n  background(0);\n  image(fishEye, 0, 0, 640, 480);\n\n  // Display the segmented video grid\n  if (segmentation) {\n    copyForegroundPixels(portals[2], segmentation.mask, personImage);\n    image(personImage, 0, 0, width, height);\n  }\n}\n\n// callback function for body segmentation\nfunction gotResults(result) {\n  segmentation = result;\n}\n\n// Copy foreground pixels from the video based on the mask\nfunction copyForegroundPixels(imgSource, imgMask, imgResult) {\n  imgSource.loadPixels();\n  imgMask.loadPixels();\n  imgResult.loadPixels();\n\n  const imgWidth = imgResult.width;\n  const imgHeight = imgResult.height;\n  const imgChannels = 4;\n\n  const sourceWidth = imgSource.width;\n  const sourceHeight = imgSource.height;\n\n  const scaleX = sourceWidth / imgWidth;\n  const scaleY = sourceHeight / imgHeight;\n\n  for (let y = 0; y < imgHeight; y++) {\n    for (let x = 0; x < imgWidth; x++) {\n      let index = (y * imgWidth + x) * imgChannels;\n      let maskR = imgMask.pixels[index];\n      let maskG = imgMask.pixels[index + 1];\n      let maskB = imgMask.pixels[index + 2];\n\n      // Map coordinates to the source image\n      let srcX = floor(x * scaleX);\n      let srcY = floor(y * scaleY);\n      let srcIndex = (srcY * sourceWidth + srcX) * imgChannels;\n\n      if (maskR === 255 && maskG === 255 && maskB === 255) {\n        // If the mask is white, make pixel transparent\n        imgResult.pixels[index] = 0;\n        imgResult.pixels[index + 1] = 0;\n        imgResult.pixels[index + 2] = 0;\n        imgResult.pixels[index + 3] = 0;\n      } else {\n        // Map pixels from portals[2] properly\n        imgResult.pixels[index] = imgSource.pixels[srcIndex];\n        imgResult.pixels[index + 1] = imgSource.pixels[srcIndex + 1];\n        imgResult.pixels[index + 2] = imgSource.pixels[srcIndex + 2];\n        imgResult.pixels[index + 3] = 255; // Full opacity\n      }\n    }\n  }\n\n  imgResult.updatePixels();\n}\n\n\n// callback function for body segmentation\nfunction gotResults(result) {\n  segmentation = result;\n}\n\n\n\nfunction fisheye(input, centerX, centerY) { \n  let distances = [ \n    dist(centerX,centerY, 0,0),\n    dist(centerX,centerY, input.width,0),\n    dist(centerX,centerY, input.width,input.height),\n    dist(centerX,centerY, 0,input.height)\n  ];\n  let distanceMax = max(distances);\n  \n  let output = createImage(input.width, input.height);  \n  input.loadPixels();\n  output.loadPixels();\n  for (let y=0; y<input.height; y++) {\n    for (let x=0; x<input.width; x++) {\n      \n      // calculate the angle and distance between our\n      // center point and the current x/y position\n      // (these are 'polar' coordinates – a position defined\n      // not by x/y but by angle and distance!)\n      let distance = dist(x,y, centerX,centerY);  // also called 'rho'\n      let angle = atan2(y-centerY, x-centerX);    // also called 'theta'\n      \n      // the magic!\n      // first, a fisheye effect\n      // transform distance my squaring it, then dividing\n      // by the max possible distance from the center\n      // the angle value stays the same\n      distance = distance * distance / distanceMax;\n      \n      // ...or try these (comment out the others)\n      \n      // ripple effect\n      // use distance with sin(), keep angle the same\n      // distance = distance + 8 * sin(distance/2);\n      \n      // freaky twist\n      // square angle and divide by 360º, keep distance the same\n      // angle = angle * angle / TWO_PI;\n      \n      // convert back to cartesian (x/y) coordinates \n      // using some trig so we can grab a pixel from the\n      // the source image\n      let tempX = centerX + cos(angle) * distance;\n      let tempY = centerY + sin(angle) * distance;\n      \n      // get the pixel and put it into the output image\n      let px = input.get(tempX, tempY);\n      output.set(x,y, px);\n    }\n  }\n  output.updatePixels();\n  return output;\n}\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d87ba899c5027a65152083",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67d87ba899c5027a65152083"
      },
      {
        "name": "alterEgo.js",
        "content": "// Animated Fisheye Effect\n// https://editor.p5js.org/jeffThompson/sketches/amZAWPv9S\n\nlet bodySegmentation;\nlet video;\nlet segmentation;\nlet personImage;\n\nlet options = {\n  maskType: \"person\",\n};\n\nlet portals = [];\nlet fishEye;\n\nfunction preload() {\n  // let images = 3;\n  // for (let i = 1; i <= images; i++) {\n  //   let path = 'images/' + i + '.jpeg';\n  //   loadImage(path, img => {\n  //     img.resize(640, 480);\n  //     portals.push(img);\n  //   });\n  // }\n  bodySegmentation = ml5.bodySegmentation(\"BodyPix\", options);\n}\n\nfunction setup() {\n  createCanvas(640, 480);\n  pixelDensity(1)\n  \n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n\n  bodySegmentation.detectStart(video, gotResults);\n\n  personImage = createImage(video.width, video.height);\n  fishEye1 = createGraphics(video.width, video.height);\n  \n  frameRate(30);\n}\n\nfunction draw() {\n  background(0);\n\n  applyAnimatedFisheyeEffect(video, fishEye1, width / 2, height / 2);\n  image(video, 0, 0, width, height);\n // image(fishEye1, 0, 0, width, height);\n  if (segmentation) {  \n   // copyForegroundPixels(video, segmentation.mask, personImage);\n   copyForegroundPixels(fishEye1, segmentation.mask, personImage);\n    translate(width,0);\n    scale(-1, 1);\n    image(personImage, 0, 0, width, height);\n  }\n}\n\n// function for copying pixels based on segmentation\n\nfunction copyForegroundPixels(imgSource, imgMask, imgResult) {\n  imgSource.loadPixels();\n  imgMask.loadPixels();\n  imgResult.loadPixels();\n\n  let totalPixels = imgResult.pixels.length;\n  const imgChannels = 4;\n\n  for (let i = 0; i < totalPixels; i += imgChannels) {\n    let maskR = imgMask.pixels[i + 3]; \n\n    if (maskR === 255) { \n      imgResult.pixels[i + 3] = 0;\n  \n    } else {\n      imgResult.pixels[i] = imgSource.pixels[i];\n      imgResult.pixels[i + 1] = imgSource.pixels[i + 1];\n      imgResult.pixels[i + 2] = imgSource.pixels[i + 2];\n      imgResult.pixels[i + 3] = 255; // Keep fully opaque\n    }\n  }\n\n  imgResult.updatePixels();\n}\n\n\n// Callback for body segmentation\nfunction gotResults(result) {\n  segmentation = result;\n}\n\n// Animated Fisheye Effect\n// I used chatGPT to animate and optimize this function so it would be faster... I'm not sure what \"Uint8ClampedArray\" is though\n\nfunction applyAnimatedFisheyeEffect(input, output, centerX, centerY) {\n  input.loadPixels();\n  output.loadPixels();\n  \n  let maxDistance = dist(centerX, centerY, 0, 0);\n  let tempPixels = new Uint8ClampedArray(output.pixels);\n\n  let time = frameCount / 10; // **Time-based animation**\n\n  for (let y = 0; y < input.height; y++) {\n    for (let x = 0; x < input.width; x++) {\n      let dx = x - centerX;\n      let dy = y - centerY;\n      let distance = sqrt(dx * dx + dy * dy);\n      let angle = atan2(dy, dx);\n\n   // **Apply distortion effect**\n     distance = distance + 100 * sin((distance / 10) + time);\n      // angle = angle * angle / TWO_PI;\n      //  distance = distance * distance / min(width,height);\n      let tempX = floor(centerX + cos(angle) * distance);\n      let tempY = floor(centerY + sin(angle) * distance);\n\n      if (tempX >= 0 && tempX < input.width && tempY >= 0 && tempY < input.height) {\n        let srcIndex = (tempY * input.width + tempX) * 4;\n        let dstIndex = (y * input.width + x) * 4;\n        \n        tempPixels[dstIndex] = input.pixels[srcIndex];\n        tempPixels[dstIndex + 1] = input.pixels[srcIndex + 1];\n        tempPixels[dstIndex + 2] = input.pixels[srcIndex + 2];\n        tempPixels[dstIndex + 3] = input.pixels[srcIndex + 3]; // Preserve alpha\n      } else {\n        tempPixels[(y * input.width + x) * 4 + 3] = 0; // Make out-of-bounds pixels transparent\n      }\n    }\n  }\n\n  output.pixels.set(tempPixels);\n  output.updatePixels();\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67d87dfb9f502e42bdab2c90",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67d87dfb9f502e42bdab2c90"
      },
      {
        "name": "clear.js",
        "content": "// Body segmentation variables\nlet bodySegmentation;\nlet video;\nlet segmentation;\nlet personImage;\n\nlet options = {\n  maskType: \"parts\",\n};\n\nlet portals = [];\nlet fishEye;\n\nfunction preload() {\n  let images = 3;\n  for (let i = 1; i <= images; i++) {\n    let path = 'images/' + i + '.jpeg';\n    loadImage(path, img => {\n      img.resize(640, 480);\n      portals.push(img);\n    });\n  }\n\n  bodySegmentation = ml5.bodySegmentation(\"BodyPix\", options);\n}\n\nfunction setup() {\n  createCanvas(640, 480);\n  \n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n\n  bodySegmentation.detectStart(video, gotResults);\n\n  personImage = createImage(video.width, video.height);\n  \n  // **Create fisheye buffer**\n  fishEye = createGraphics(video.width, video.height);\n  \n  frameRate(30);\n}\n\nfunction draw() {\n  background(0);\n  \n  // **Apply fisheye effect every frame**\n  applyFisheyeEffect(portals[2], fishEye, width / 2, height / 2);\n  \n  image(portals[2], 0, 0, width, height);\n  image(fishEye, 0, 0, width*2, height*4);\n\n  if (segmentation) {\n    translate(width,0);\n    scale(-1, 1);\n    copyForegroundPixels(portals[2], segmentation.mask, personImage);\n \n    image(personImage, 0, 0, width, height);\n  }\n}\n\n// Callback for body segmentation\nfunction gotResults(result) {\n  segmentation = result;\n}\n\n// **Optimized function for copying pixels based on segmentation**\nfunction copyForegroundPixels(imgSource, imgMask, imgResult) {\n  imgSource.loadPixels();\n  imgMask.loadPixels();\n  imgResult.loadPixels();\n\n  let totalPixels = imgResult.pixels.length;\n  const imgChannels = 4;\n\n  for (let i = 0; i < totalPixels; i += imgChannels) {\n    let maskR = imgMask.pixels[i];\n    \n    if (maskR === 255) {\n      imgResult.pixels[i + 3] = 0; // Transparent\n    } else {\n      imgResult.pixels[i] = imgSource.pixels[i];\n      imgResult.pixels[i + 1] = imgSource.pixels[i + 1];\n      imgResult.pixels[i + 2] = imgSource.pixels[i + 2];\n      imgResult.pixels[i + 3] = 255;\n    }\n  }\n  \n  imgResult.updatePixels();\n}\n\n// **Optimized fisheye function (now applied every frame)**\nfunction applyFisheyeEffect(input, output, centerX, centerY) {\n  input.loadPixels(); // **Get the latest frame from the video**\n  output.loadPixels();\n  \n  let maxDistance = dist(centerX, centerY, 0, 0);\n  let tempPixels = new Uint8ClampedArray(output.pixels); // Faster array processing\n\n  for (let y = 0; y < input.height; y++) {\n    for (let x = 0; x < input.width; x++) {\n      let dx = x - centerX;\n      let dy = y - centerY;\n      let distance = sqrt(dx * dx + dy * dy);\n      let angle = atan2(dy, dx);\n\n      // **Apply Centered Ripple Effect**\n      distance = distance + 20 * sin(distance / 2);\n\n      let tempX = floor(centerX + cos(angle) * distance);\n      let tempY = floor(centerY + sin(angle) * distance);\n\n      if (tempX >= 0 && tempX < input.width && tempY >= 0 && tempY < input.height) {\n        let srcIndex = (tempY * input.width + tempX) * 4;\n        let dstIndex = (y * input.width + x) * 4;\n        \n        tempPixels[dstIndex] = input.pixels[srcIndex];\n        tempPixels[dstIndex + 1] = input.pixels[srcIndex + 1];\n        tempPixels[dstIndex + 2] = input.pixels[srcIndex + 2];\n        tempPixels[dstIndex + 3] = 255;\n      }\n    }\n  }\n\n  output.pixels.set(tempPixels);\n  output.updatePixels();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d87ef9dca32fd90b918740",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67d87ef9dca32fd90b918740"
      },
      {
        "name": "alterEgos-adj.js",
        "content": "let bodySegmentation;\nlet video;\nlet segmentation;\nlet personImage;\n\nlet options = {\n  maskType: \"person\",\n};\n\nlet portals = [];\nlet fishEye1;\nlet canvasWidth, canvasHeight;\n\n// **Easily Change Aspect Ratio Here**\nlet aspectRatio = 4 / 3;  // Change this to 4/3, 1/1, etc.\n\nfunction preload() {\n  // let images = 3;\n  // for (let i = 1; i <= images; i++) {\n  //   let path = 'images/' + i + '.jpeg';\n  //   loadImage(path, img => {\n  //     img.resize(640, 480);\n  //     portals.push(img);\n  //   });\n  // }\n  bodySegmentation = ml5.bodySegmentation(\"BodyPix\", options);\n}\n\nfunction setup() {\n  calculateCanvasSize();\n  \n  video = createCapture(VIDEO);\n  video.size(canvasWidth, canvasHeight);\n  video.hide();\n  bodySegmentation.detectStart(video, gotResults);\n\n  personImage = createImage(canvasWidth, canvasHeight);\n  fishEye1 = createGraphics(canvasWidth, canvasHeight);\n  \n  createCanvas(canvasWidth, canvasHeight);\n  frameRate(30);\n}\n\nfunction draw() {\n  background(0);\n\n  applyAnimatedFisheyeEffect(video, fishEye1, width / 2, height / 2);\n  image(video, 0, 0, width, height);\n\n  if (segmentation) {  \n    copyForegroundPixels(fishEye1, segmentation.mask, personImage);\n    translate(width, 0);\n    scale(-1, 1);\n    image(personImage, 0, 0, width, height);\n  }\n}\n\n// **Calculate the largest possible size while keeping aspect ratio**\nfunction calculateCanvasSize() {\n  if (windowWidth / windowHeight > aspectRatio) {\n    canvasHeight = windowHeight;\n    canvasWidth = canvasHeight * aspectRatio;\n  } else {\n    canvasWidth = windowWidth;\n    canvasHeight = canvasWidth / aspectRatio;\n  }\n}\n\n// **Optimized function for copying pixels based on segmentation**\nfunction copyForegroundPixels(imgSource, imgMask, imgResult) {\n  imgSource.loadPixels();\n  imgMask.loadPixels();\n  imgResult.loadPixels();\n\n  let totalPixels = imgResult.pixels.length;\n  const imgChannels = 4;\n\n  for (let i = 0; i < totalPixels; i += imgChannels) {\n    let maskR = imgMask.pixels[i + 3]; // Read red channel of the mask\n\n    if (maskR === 255) { \n      imgResult.pixels[i + 3] = 0;\n    } else {\n      imgResult.pixels[i] = imgSource.pixels[i];\n      imgResult.pixels[i + 1] = imgSource.pixels[i + 1];\n      imgResult.pixels[i + 2] = imgSource.pixels[i + 2];\n      imgResult.pixels[i + 3] = 255; // Keep fully opaque\n    }\n  }\n\n  imgResult.updatePixels();\n}\n\n// **Callback for body segmentation**\nfunction gotResults(result) {\n  segmentation = result;\n}\n\n// **Animated Fisheye Effect**\nfunction applyAnimatedFisheyeEffect(input, output, centerX, centerY) {\n  input.loadPixels();\n  output.loadPixels();\n  \n  let maxDistance = dist(centerX, centerY, 0, 0);\n  let tempPixels = new Uint8ClampedArray(output.pixels);\n\n  let time = frameCount / 10; // **Time-based animation**\n\n  for (let y = 0; y < input.height; y++) {\n    for (let x = 0; x < input.width; x++) {\n      let dx = x - centerX;\n      let dy = y - centerY;\n      let distance = sqrt(dx * dx + dy * dy);\n      let angle = atan2(dy, dx);\n\n      // **Apply distortion effect**\n      distance = distance + 100 * sin((distance / 10) + time);\n\n      let tempX = floor(centerX + cos(angle) * distance);\n      let tempY = floor(centerY + sin(angle) * distance);\n\n      if (tempX >= 0 && tempX < input.width && tempY >= 0 && tempY < input.height) {\n        let srcIndex = (tempY * input.width + tempX) * 4;\n        let dstIndex = (y * input.width + x) * 4;\n        \n        tempPixels[dstIndex] = input.pixels[srcIndex];\n        tempPixels[dstIndex + 1] = input.pixels[srcIndex + 1];\n        tempPixels[dstIndex + 2] = input.pixels[srcIndex + 2];\n        tempPixels[dstIndex + 3] = input.pixels[srcIndex + 3]; // Preserve alpha\n      } else {\n        tempPixels[(y * input.width + x) * 4 + 3] = 0; // Make out-of-bounds pixels transparent\n      }\n    }\n  }\n\n  output.pixels.set(tempPixels);\n  output.updatePixels();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67db61db5660f30fd8254410",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67db61db5660f30fd8254410"
      },
      {
        "name": "glitch.js",
        "content": "let bodySegmentation;\nlet video;\nlet segmentation;\nlet personImage;\n\nlet options = {\n  maskType: \"person\",\n};\n\nlet portals = [];\nlet fishEye1;\nlet canvasWidth, canvasHeight;\n\n// **Easily Change Aspect Ratio Here**\nlet aspectRatio = 1 / 1;  // Change this to 4/3, 1/1, etc.\n\nfunction preload() {\n  // let images = 3;\n  // for (let i = 1; i <= images; i++) {\n  //   let path = 'images/' + i + '.jpeg';\n  //   loadImage(path, img => {\n  //     img.resize(640, 480);\n  //     portals.push(img);\n  //   });\n  // }\n  bodySegmentation = ml5.bodySegmentation(\"BodyPix\", options);\n}\n\nfunction setup() {\n  calculateCanvasSize();\n  \n  video = createCapture(VIDEO);\n // video.size(canvasWidth, canvasHeight);\n  video.hide();\n  calculateVideoDimensions();\n  bodySegmentation.detectStart(video, gotResults);\n\n  personImage = createImage(canvasWidth, canvasHeight);\n  fishEye1 = createGraphics(canvasWidth, canvasHeight);\n  \n  createCanvas(canvasWidth, canvasHeight);\n  frameRate(30);\n}\n\nfunction calculateVideoDimensions() {\n  if (windowWidth / windowHeight > aspectRatio) {\n    videoHeight = windowHeight;\n    videoWidth = videoHeight * aspectRatio;\n  } else {\n    videoWidth = windowWidth;\n    videoHeight = videoWidth / aspectRatio;\n  }\n}\n\nfunction draw() {\n  background(0);\n\n  applyAnimatedFisheyeEffect(video, fishEye1, width / 2, height / 2);\n  image(video, 0, 0, width, height);\n\n  if (segmentation) {  \n    copyForegroundPixels(fishEye1, segmentation.mask, personImage);\n    translate(width, 0);\n    scale(-1, 1);\n    image(personImage, 0, 0, width, height);\n  }\n}\n\n// **Calculate the largest possible size while keeping aspect ratio**\nfunction calculateCanvasSize() {\n  if (windowWidth / windowHeight > aspectRatio) {\n    canvasHeight = windowHeight;\n    canvasWidth = canvasHeight * aspectRatio;\n  } else {\n    canvasWidth = windowWidth;\n    canvasHeight = canvasWidth / aspectRatio;\n  }\n}\n\n// **Optimized function for copying pixels based on segmentation**\nfunction copyForegroundPixels(imgSource, imgMask, imgResult) {\n  imgSource.loadPixels();\n  imgMask.loadPixels();\n  imgResult.loadPixels();\n\n  let totalPixels = imgResult.pixels.length;\n  const imgChannels = 4;\n\n  for (let i = 0; i < totalPixels; i += imgChannels) {\n    let maskR = imgMask.pixels[i + 3]; // Read red channel of the mask\n\n    if (maskR === 255) { \n      imgResult.pixels[i + 3] = 0;\n    } else {\n      imgResult.pixels[i] = imgSource.pixels[i];\n      imgResult.pixels[i + 1] = imgSource.pixels[i + 1];\n      imgResult.pixels[i + 2] = imgSource.pixels[i + 2];\n      imgResult.pixels[i + 3] = 255; // Keep fully opaque\n    }\n  }\n\n  imgResult.updatePixels();\n}\n\n// **Callback for body segmentation**\nfunction gotResults(result) {\n  segmentation = result;\n}\n\n// **Animated Fisheye Effect**\nfunction applyAnimatedFisheyeEffect(input, output, centerX, centerY) {\n  input.loadPixels();\n  output.loadPixels();\n  \n  let maxDistance = dist(centerX, centerY, 0, 0);\n  let tempPixels = new Uint8ClampedArray(output.pixels);\n\n  let time = frameCount / 10; // **Time-based animation**\n\n  for (let y = 0; y < input.height; y++) {\n    for (let x = 0; x < input.width; x++) {\n      let dx = x - centerX;\n      let dy = y - centerY;\n      let distance = sqrt(dx * dx + dy * dy);\n      let angle = atan2(dy, dx);\n\n      // **Apply distortion effect**\n      distance = distance + 100 * sin((distance / 10) + time);\n\n      let tempX = floor(centerX + cos(angle) * distance);\n      let tempY = floor(centerY + sin(angle) * distance);\n\n      if (tempX >= 0 && tempX < input.width && tempY >= 0 && tempY < input.height) {\n        let srcIndex = (tempY * input.width + tempX) * 4;\n        let dstIndex = (y * input.width + x) * 4;\n        \n        tempPixels[dstIndex] = input.pixels[srcIndex];\n        tempPixels[dstIndex + 1] = input.pixels[srcIndex + 1];\n        tempPixels[dstIndex + 2] = input.pixels[srcIndex + 2];\n        tempPixels[dstIndex + 3] = input.pixels[srcIndex + 3]; // Preserve alpha\n      } else {\n        tempPixels[(y * input.width + x) * 4 + 3] = 0; // Make out-of-bounds pixels transparent\n      }\n    }\n  }\n\n  output.pixels.set(tempPixels);\n  output.updatePixels();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67db63ba5660f30fd8265489",
        "createdAt": "2025-03-21T13:54:01.577Z",
        "updatedAt": "2025-03-21T13:54:01.577Z",
        "id": "67db63ba5660f30fd8265489"
      }
    ],
    "createdAt": "2025-03-16T14:01:28.737Z",
    "updatedAt": "2025-03-21T13:54:01.577Z",
    "id": "CDwTbFgAL"
  },
  {
    "_id": "LlBlIUnvm",
    "name": "portals - debug",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67d85db5f0a95df2bddfac11",
          "67d85db5f0a95df2bddfac24",
          "67d85db5f0a95df2bddfac25",
          "67d85db5f0a95df2bddfac26"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d85db5f0a95df2bddfac10",
        "createdAt": "2025-03-17T17:37:05.148Z",
        "updatedAt": "2025-03-17T17:37:05.148Z",
        "id": "67d85db5f0a95df2bddfac10"
      },
      {
        "name": "index.html",
        "content": "<!--\n  👋 Hello! This is an ml5.js example made and shared with ❤️.\n  Learn more about the ml5.js project: https://ml5js.org/\n  ml5.js license and Code of Conduct: https://github.com/ml5js/ml5-next-gen/blob/main/LICENSE.md\n\n  This example demonstrates segmenting a person by body parts with ml5.bodySegmentation.\n-->\n\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ml5.js bodySegmentation Parts Example</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\n  </head>\n  <body>\n    <script src=\"vanishing.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d85db5f0a95df2bddfac24",
        "createdAt": "2025-03-17T17:37:05.148Z",
        "updatedAt": "2025-03-17T17:37:05.148Z",
        "id": "67d85db5f0a95df2bddfac24"
      },
      {
        "name": "sketch.js",
        "content": "// Body segmentation variables\nlet bodySegmentation;\nlet video;\nlet segmentation;\nlet personImage;\nlet tunnelBuffer;\n\nlet options = {\n  maskType: \"parts\",\n};\n\nlet portals = [];\nlet isSetupComplete = false;\n\nfunction preload() {\n  let images = 18;\n  for (let i = 1; i < images + 1; i++) {\n    let path = 'images/' + String(i) + '.jpeg';\n    loadImage(path, \n      img => {\n        portals.push(img);\n      }, \n      err => console.error(\"Failed to load:\", path, err)\n    );\n  }\n\n  bodySegmentation = ml5.bodySegmentation(\"BodyPix\", options);\n}\n\nfunction setup() {\n  createCanvas(640, 480);\n  \n  // Create the video\n  video = createCapture(VIDEO, videoReady);\n  video.size(640, 480);\n  video.hide();\n\n  // Create an image for segmented output\n  personImage = createImage(640, 480);\n  \n  // Create a buffer for the tunnel effect\n  tunnelBuffer = createGraphics(640, 480);\n}\n\nfunction videoReady() {\n  console.log(\"Video is ready\");\n  bodySegmentation.detectStart(video, gotResults);\n  isSetupComplete = true;\n}\n\nfunction draw() {\n  background(0);\n  \n  // Draw the background image\n  if (portals.length > 2) {\n    image(portals[2], 0, 0, 640, 480);\n  }\n\n  // Make sure everything is initialized before trying to use it\n  if (isSetupComplete && segmentation && video.loadedmetadata) {\n    // Alternative method using the video feed for tunnel effect\n    createVideoTunnelEffect();\n    image(personImage, 0, 0, width, height);\n  }\n}\n\n// Callback function for body segmentation\nfunction gotResults(result) {\n  segmentation = result;\n}\n\nfunction createVideoTunnelEffect() {\n  // Capture the current video frame\n  tunnelBuffer.clear();\n  tunnelBuffer.image(portals[2], 0, 0, width, height);\n  let personFrame = tunnelBuffer.get();\n  \n  // Clear the tunnel buffer for creating the effect\n  tunnelBuffer.clear();\n  \n  // Number of layers for the tunnel effect\n  const numLayers = 5;\n  const scaleStep = 0.1; // 20% reduction per layer\n  \n  // Draw the layers from back to front (smallest to largest)\n  for (let i = 0; i <= numLayers - 1; i++) {\n    // Calculate scaling for this layer (gets smaller with each step)\n    let scaleFactor = 1 - (i * scaleStep);\n    let imgW = width * scaleFactor;\n    let imgH = height * scaleFactor;\n    \n    // Center the image to create the tunnel effect\n    let offsetX = (width - imgW) / 2;\n    let offsetY = (height - imgH) / 2;\n\n    \n    // Draw the current layer to the tunnel buffer\n    tunnelBuffer.image(personFrame, offsetX, offsetY, imgW, imgH);\n  }\n  \n  // Get the tunnel effect\n  let tunnelEffect = tunnelBuffer.get();\n  \n  // Apply mask to show the tunnel effect only where the person is\n  tunnelEffect.loadPixels();\n  segmentation.mask.loadPixels();\n  personImage.loadPixels();\n  \n  for (let i = 0; i < personImage.pixels.length; i += 4) {\n    // If this is a foreground pixel (not white in the mask)\n    if (!(segmentation.mask.pixels[i] === 255 && \n          segmentation.mask.pixels[i + 1] === 255 && \n          segmentation.mask.pixels[i + 2] === 255)) {\n      // Copy the tunnel effect pixel to the person image\n      personImage.pixels[i] = tunnelEffect.pixels[i];\n      personImage.pixels[i + 1] = tunnelEffect.pixels[i + 1];\n      personImage.pixels[i + 2] = tunnelEffect.pixels[i + 2];\n      personImage.pixels[i + 3] = 255; // Full opacity\n    } else {\n      // Make this pixel transparent\n      personImage.pixels[i + 3] = 0;\n    }\n  }\n  \n  personImage.updatePixels();\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d85db5f0a95df2bddfac25",
        "createdAt": "2025-03-17T17:37:05.148Z",
        "updatedAt": "2025-03-17T17:37:05.148Z",
        "id": "67d85db5f0a95df2bddfac25"
      },
      {
        "name": "images",
        "content": "",
        "children": [
          "67d85db5f0a95df2bddfac12",
          "67d85db5f0a95df2bddfac13",
          "67d85db5f0a95df2bddfac14",
          "67d85db5f0a95df2bddfac15",
          "67d85db5f0a95df2bddfac16",
          "67d85db5f0a95df2bddfac17",
          "67d85db5f0a95df2bddfac18",
          "67d85db5f0a95df2bddfac19",
          "67d85db5f0a95df2bddfac1a",
          "67d85db5f0a95df2bddfac1b",
          "67d85db5f0a95df2bddfac1c",
          "67d85db5f0a95df2bddfac1d",
          "67d85db5f0a95df2bddfac1e",
          "67d85db5f0a95df2bddfac1f",
          "67d85db5f0a95df2bddfac20",
          "67d85db5f0a95df2bddfac21",
          "67d85db5f0a95df2bddfac22",
          "67d85db5f0a95df2bddfac23"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d85db5f0a95df2bddfac11",
        "createdAt": "2025-03-17T17:37:05.148Z",
        "updatedAt": "2025-03-17T17:37:05.148Z",
        "id": "67d85db5f0a95df2bddfac11"
      },
      {
        "name": "3.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/1eb2db07-7e42-4fbf-bfce-42cd77c84819.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d85db5f0a95df2bddfac1d",
        "createdAt": "2025-03-17T17:37:05.148Z",
        "updatedAt": "2025-03-17T17:37:05.148Z",
        "id": "67d85db5f0a95df2bddfac1d"
      },
      {
        "name": "1.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/56097404-3720-4e48-b9d4-322da9723ec2.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d85db5f0a95df2bddfac12",
        "createdAt": "2025-03-17T17:37:05.148Z",
        "updatedAt": "2025-03-17T17:37:05.148Z",
        "id": "67d85db5f0a95df2bddfac12"
      },
      {
        "name": "2.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/c5dce1cb-83bf-4926-9b14-8577a6bbba1a.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d85db5f0a95df2bddfac1c",
        "createdAt": "2025-03-17T17:37:05.148Z",
        "updatedAt": "2025-03-17T17:37:05.148Z",
        "id": "67d85db5f0a95df2bddfac1c"
      },
      {
        "name": "4.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/e1448430-2375-4863-acff-e4d1cc23593e.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d85db5f0a95df2bddfac1e",
        "createdAt": "2025-03-17T17:37:05.148Z",
        "updatedAt": "2025-03-17T17:37:05.148Z",
        "id": "67d85db5f0a95df2bddfac1e"
      },
      {
        "name": "5.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/919fed8c-d1bc-4484-a51c-5e2a0832c349.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d85db5f0a95df2bddfac1f",
        "createdAt": "2025-03-17T17:37:05.148Z",
        "updatedAt": "2025-03-17T17:37:05.148Z",
        "id": "67d85db5f0a95df2bddfac1f"
      },
      {
        "name": "15.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/f0934b4f-ff37-40d7-9480-c7b9901224c7.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d85db5f0a95df2bddfac18",
        "createdAt": "2025-03-17T17:37:05.148Z",
        "updatedAt": "2025-03-17T17:37:05.148Z",
        "id": "67d85db5f0a95df2bddfac18"
      },
      {
        "name": "16.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/69e271ec-3e7e-4c6b-8597-d1b652ee973c.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d85db5f0a95df2bddfac19",
        "createdAt": "2025-03-17T17:37:05.148Z",
        "updatedAt": "2025-03-17T17:37:05.148Z",
        "id": "67d85db5f0a95df2bddfac19"
      },
      {
        "name": "17.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/5b619308-9343-4550-b5c5-fb957518b34b.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d85db5f0a95df2bddfac1a",
        "createdAt": "2025-03-17T17:37:05.148Z",
        "updatedAt": "2025-03-17T17:37:05.148Z",
        "id": "67d85db5f0a95df2bddfac1a"
      },
      {
        "name": "7.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/16936e85-0b81-4bc4-8462-184cbf8f7829.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d85db5f0a95df2bddfac21",
        "createdAt": "2025-03-17T17:37:05.148Z",
        "updatedAt": "2025-03-17T17:37:05.148Z",
        "id": "67d85db5f0a95df2bddfac21"
      },
      {
        "name": "6.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/300181bb-0f0c-4ebd-b737-9a539db4a96b.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d85db5f0a95df2bddfac20",
        "createdAt": "2025-03-17T17:37:05.148Z",
        "updatedAt": "2025-03-17T17:37:05.148Z",
        "id": "67d85db5f0a95df2bddfac20"
      },
      {
        "name": "8.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/36d4eb97-8ae2-4ab6-a3ab-5a80f752c385.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d85db5f0a95df2bddfac22",
        "createdAt": "2025-03-17T17:37:05.148Z",
        "updatedAt": "2025-03-17T17:37:05.148Z",
        "id": "67d85db5f0a95df2bddfac22"
      },
      {
        "name": "12.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/b05cc096-8638-4077-83d4-172880ac2adb.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d85db5f0a95df2bddfac15",
        "createdAt": "2025-03-17T17:37:05.148Z",
        "updatedAt": "2025-03-17T17:37:05.148Z",
        "id": "67d85db5f0a95df2bddfac15"
      },
      {
        "name": "13.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/8700330b-8d7d-4a2e-a350-bf47455e70e5.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d85db5f0a95df2bddfac16",
        "createdAt": "2025-03-17T17:37:05.148Z",
        "updatedAt": "2025-03-17T17:37:05.148Z",
        "id": "67d85db5f0a95df2bddfac16"
      },
      {
        "name": "14.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/c5079260-4915-4695-9d62-3de2e658ac77.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d85db5f0a95df2bddfac17",
        "createdAt": "2025-03-17T17:37:05.148Z",
        "updatedAt": "2025-03-17T17:37:05.148Z",
        "id": "67d85db5f0a95df2bddfac17"
      },
      {
        "name": "18.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/6338a090-ab9d-450c-b326-34d6119dd5a1.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d85db5f0a95df2bddfac1b",
        "createdAt": "2025-03-17T17:37:05.148Z",
        "updatedAt": "2025-03-17T17:37:05.148Z",
        "id": "67d85db5f0a95df2bddfac1b"
      },
      {
        "name": "10.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/aafc08ff-1bb3-4c9c-905f-266cded49c89.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d85db5f0a95df2bddfac13",
        "createdAt": "2025-03-17T17:37:05.148Z",
        "updatedAt": "2025-03-17T17:37:05.148Z",
        "id": "67d85db5f0a95df2bddfac13"
      },
      {
        "name": "9.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/ae16c168-feeb-4104-b2eb-c6ab7b001e54.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d85db5f0a95df2bddfac23",
        "createdAt": "2025-03-17T17:37:05.148Z",
        "updatedAt": "2025-03-17T17:37:05.148Z",
        "id": "67d85db5f0a95df2bddfac23"
      },
      {
        "name": "11.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/075f232e-59a8-464c-8995-eaa18fcba192.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d85db5f0a95df2bddfac14",
        "createdAt": "2025-03-17T17:37:05.148Z",
        "updatedAt": "2025-03-17T17:37:05.148Z",
        "id": "67d85db5f0a95df2bddfac14"
      },
      {
        "name": "vanishing.js",
        "content": "// Body segmentation variables\nlet bodySegmentation;\nlet video;\nlet segmentation;\nlet personImage;\n\nlet options = {\n  maskType: \"parts\",\n};\n\nlet portals = [];\nlet layeredImage; // off-screen graphics buffer for layering\n\nfunction preload() {\n  let images = 18;\n  for (let i = 1; i < images + 1; i++) {\n    let path = 'images/' + String(i) + '.jpeg';\n    loadImage(path, \n      img => {\n        portals.push(img);\n      }, \n      err => console.error(\"Failed to load:\", path, err)\n    );\n  }\n\n  bodySegmentation = ml5.bodySegmentation(\"BodyPix\", options);\n}\n\nfunction setup() {\n  createCanvas(640, 480);\n  // Create the video\n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n\n  bodySegmentation.detectStart(video, gotResults);\n\n  personImage = createImage(video.width, video.height);\n\n  layeredImage = createGraphics(width, height);\n}\n\nfunction draw() {\n  background(0);\n  \n  // **Step 1: Draw the original background (unaltered)**\n  image(portals[2], 0, 0, 640, 480);\n  \n  if (segmentation) {\n    // **Step 2: Create the tunnel effect on the mask only**\n    \n    // Clear the off-screen graphics\n    layeredImage.clear();\n    \n    let numLayers = 10;\n    for (let j = 0; j < numLayers; j++) {\n      let scaleFactor = 1 - (j * 0.1);\n      let imgW = width * scaleFactor;\n      let imgH = height * scaleFactor;\n      let offsetX = (width - imgW) / 2;\n      let offsetY = (height - imgH) / 2;\n      \n      layeredImage.image(portals[2], offsetX, offsetY, imgW, imgH);\n    }\n\n  let tunnelEffect = layeredImage.get();\n\n  tunnelEffect.loadPixels();\n  segmentation.mask.loadPixels();\n  personImage.loadPixels();\n  \n  for (let i = 0; i < personImage.pixels.length; i += 4) {\n    // If this is a foreground pixel (not white in the mask)\n    if (!(segmentation.mask.pixels[i] === 255 && \n          segmentation.mask.pixels[i + 1] === 255 && \n          segmentation.mask.pixels[i + 2] === 255)) {\n      // Copy the tunnel effect pixel to the person image\n      personImage.pixels[i] = tunnelEffect.pixels[i];\n      personImage.pixels[i + 1] = tunnelEffect.pixels[i + 1];\n      personImage.pixels[i + 2] = tunnelEffect.pixels[i + 2];\n      personImage.pixels[i + 3] = 255; // Full opacity\n    } else {\n      // Make this pixel transparent\n      personImage.pixels[i + 3] = 0;\n    }\n  }\n  \n  personImage.updatePixels();\n // let layeredImg = layeredImage.get();\n//  image(layeredImg, 0, 0, width, height);\n  image(personImage, 0, 0, width, height);\n\n  }\n}\n\n// callback function for body segmentation\nfunction gotResults(result) {\n  segmentation = result;\n}\n\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67d85db5f0a95df2bddfac26",
        "createdAt": "2025-03-17T17:37:05.148Z",
        "updatedAt": "2025-03-17T17:37:05.148Z",
        "id": "67d85db5f0a95df2bddfac26"
      }
    ],
    "createdAt": "2025-03-17T17:36:54.797Z",
    "updatedAt": "2025-03-17T17:37:05.148Z",
    "id": "LlBlIUnvm"
  },
  {
    "_id": "B06lCkgRP",
    "name": "portals 1:1",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67d6fa80a65687459ca6bde8",
          "67d6fa80a65687459ca6bdfb",
          "67d6fa80a65687459ca6bdfc"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d6fa80a65687459ca6bde7",
        "createdAt": "2025-03-17T19:33:05.234Z",
        "updatedAt": "2025-03-17T19:33:05.234Z",
        "id": "67d6fa80a65687459ca6bde7"
      },
      {
        "name": "index.html",
        "content": "<!--\r\n  👋 Hello! This is an ml5.js example made and shared with ❤️.\r\n  Learn more about the ml5.js project: https://ml5js.org/\r\n  ml5.js license and Code of Conduct: https://github.com/ml5js/ml5-next-gen/blob/main/LICENSE.md\r\n\r\n  This example demonstrates segmenting a person by body parts with ml5.bodySegmentation.\r\n-->\r\n\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>ml5.js bodySegmentation Parts Example</title>\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js\"></script>\r\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\r\n  </head>\r\n  <body>\r\n    <script src=\"sketch.js\"></script>\r\n  </body>\r\n</html>\r\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fa80a65687459ca6bdfb",
        "createdAt": "2025-03-17T19:33:05.234Z",
        "updatedAt": "2025-03-17T19:33:05.234Z",
        "id": "67d6fa80a65687459ca6bdfb"
      },
      {
        "name": "sketch.js",
        "content": "// Body segmentation variables\nlet bodySegmentation;\nlet video;\nlet segmentation;\nlet personImage;\n\nlet options = {\n  maskType: \"parts\",\n};\n\nlet portals = [];\n\n\nfunction preload() {\n  let images = 18;\n  for (let i = 1; i < images + 1; i++) {\n    let path = 'images/' + String(i) + '.jpeg';\n    loadImage(path, \n      img => {\n        portals.push(img);\n        // console.log(\"Loaded:\", path);\n      }, \n      err => console.error(\"Failed to load:\", path, err)\n    );\n  }\n\n  bodySegmentation = ml5.bodySegmentation(\"BodyPix\", options);\n}\n\n\nfunction setup() {\n  createCanvas(640, 480);\n  // Create the video\n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n\n  bodySegmentation.detectStart(video, gotResults);\n\n  // Create an image for segmented output\n  personImage = createImage(video.width, video.height);\n  \n   // frameRate(5);\n}\n\nvar ii = 0;\n\nfunction draw() {\n  background(0);\n  // image(video, 0, 0);\n// if (portals.length > 0) {\n//     image(portals[ii], 0, 0, 640, 480);\n//     ii = (ii + 1) % portals.length; // Ensure it loops correctly\n//   }\n  \n  image(portals[2], 0, 0, 640, 480);\n\n  // Display the segmented video grid\n  if (segmentation) {\n    copyForegroundPixels(portals[2], segmentation.mask, personImage);\n    image(personImage, 0, 0, width, height);\n  }\n}\n\n// callback function for body segmentation\nfunction gotResults(result) {\n  segmentation = result;\n}\n\n// Copy foreground pixels from the video based on the mask\nfunction copyForegroundPixels(imgSource, imgMask, imgResult) {\n  imgSource.loadPixels();\n  imgMask.loadPixels();\n  imgResult.loadPixels();\n\n  const imgWidth = imgResult.width;\n  const imgHeight = imgResult.height;\n  const imgChannels = 4;\n\n  const sourceWidth = imgSource.width;\n  const sourceHeight = imgSource.height;\n\n  const scaleX = sourceWidth / imgWidth;\n  const scaleY = sourceHeight / imgHeight;\n\n  for (let y = 0; y < imgHeight; y++) {\n    for (let x = 0; x < imgWidth; x++) {\n      let index = (y * imgWidth + x) * imgChannels;\n      let maskR = imgMask.pixels[index];\n      let maskG = imgMask.pixels[index + 1];\n      let maskB = imgMask.pixels[index + 2];\n\n      // Map coordinates to the source image\n      let srcX = floor(x * scaleX);\n      let srcY = floor(y * scaleY);\n      let srcIndex = (srcY * sourceWidth + srcX) * imgChannels;\n\n      if (maskR === 255 && maskG === 255 && maskB === 255) {\n        // If the mask is white, make pixel transparent\n        imgResult.pixels[index] = 0;\n        imgResult.pixels[index + 1] = 0;\n        imgResult.pixels[index + 2] = 0;\n        imgResult.pixels[index + 3] = 0;\n      } else {\n        // Map pixels from portals[2] properly\n        imgResult.pixels[index] = imgSource.pixels[srcIndex];\n        imgResult.pixels[index + 1] = imgSource.pixels[srcIndex + 1];\n        imgResult.pixels[index + 2] = imgSource.pixels[srcIndex + 2];\n        imgResult.pixels[index + 3] = 255; // Full opacity\n      }\n    }\n  }\n\n  imgResult.updatePixels();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67d6fa80a65687459ca6bdfc",
        "createdAt": "2025-03-17T19:33:05.234Z",
        "updatedAt": "2025-03-17T19:33:05.234Z",
        "id": "67d6fa80a65687459ca6bdfc"
      },
      {
        "name": "images",
        "content": "",
        "children": [
          "67d6fa80a65687459ca6bde9",
          "67d6fa80a65687459ca6bdea",
          "67d6fa80a65687459ca6bdeb",
          "67d6fa80a65687459ca6bdec",
          "67d6fa80a65687459ca6bded",
          "67d6fa80a65687459ca6bdee",
          "67d6fa80a65687459ca6bdef",
          "67d6fa80a65687459ca6bdf0",
          "67d6fa80a65687459ca6bdf1",
          "67d6fa80a65687459ca6bdf2",
          "67d6fa80a65687459ca6bdf3",
          "67d6fa80a65687459ca6bdf4",
          "67d6fa80a65687459ca6bdf5",
          "67d6fa80a65687459ca6bdf6",
          "67d6fa80a65687459ca6bdf7",
          "67d6fa80a65687459ca6bdf8",
          "67d6fa80a65687459ca6bdf9",
          "67d6fa80a65687459ca6bdfa"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d6fa80a65687459ca6bde8",
        "createdAt": "2025-03-17T19:33:05.234Z",
        "updatedAt": "2025-03-17T19:33:05.234Z",
        "id": "67d6fa80a65687459ca6bde8"
      },
      {
        "name": "3.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/c721d6c0-8b6b-4bac-8bfb-7dc1543f0456.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fa80a65687459ca6bdf4",
        "createdAt": "2025-03-17T19:33:05.234Z",
        "updatedAt": "2025-03-17T19:33:05.234Z",
        "id": "67d6fa80a65687459ca6bdf4"
      },
      {
        "name": "1.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/2239c5a1-32ae-403d-9d73-846e1a066067.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fa80a65687459ca6bde9",
        "createdAt": "2025-03-17T19:33:05.234Z",
        "updatedAt": "2025-03-17T19:33:05.234Z",
        "id": "67d6fa80a65687459ca6bde9"
      },
      {
        "name": "2.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/0aaefa78-0162-4803-a7f4-c40ec8a7b08e.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fa80a65687459ca6bdf3",
        "createdAt": "2025-03-17T19:33:05.234Z",
        "updatedAt": "2025-03-17T19:33:05.234Z",
        "id": "67d6fa80a65687459ca6bdf3"
      },
      {
        "name": "4.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/4feaebcb-30b9-4b68-8b4d-945deb2ca823.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fa80a65687459ca6bdf5",
        "createdAt": "2025-03-17T19:33:05.234Z",
        "updatedAt": "2025-03-17T19:33:05.234Z",
        "id": "67d6fa80a65687459ca6bdf5"
      },
      {
        "name": "5.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/a8af238b-ef18-4d13-8e5a-4d702567b040.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fa80a65687459ca6bdf6",
        "createdAt": "2025-03-17T19:33:05.234Z",
        "updatedAt": "2025-03-17T19:33:05.234Z",
        "id": "67d6fa80a65687459ca6bdf6"
      },
      {
        "name": "15.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/89397b7f-a478-4b6d-b4cf-01b1403c81d9.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fa80a65687459ca6bdef",
        "createdAt": "2025-03-17T19:33:05.234Z",
        "updatedAt": "2025-03-17T19:33:05.234Z",
        "id": "67d6fa80a65687459ca6bdef"
      },
      {
        "name": "16.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/e6e86a64-9b53-434e-83cf-9865666540c3.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fa80a65687459ca6bdf0",
        "createdAt": "2025-03-17T19:33:05.234Z",
        "updatedAt": "2025-03-17T19:33:05.234Z",
        "id": "67d6fa80a65687459ca6bdf0"
      },
      {
        "name": "17.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/4793f12f-e165-4cef-9326-65622f1227bb.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fa80a65687459ca6bdf1",
        "createdAt": "2025-03-17T19:33:05.234Z",
        "updatedAt": "2025-03-17T19:33:05.234Z",
        "id": "67d6fa80a65687459ca6bdf1"
      },
      {
        "name": "7.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/6f0f4dc3-7e06-4601-8b06-6bc83d98ee2e.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fa80a65687459ca6bdf8",
        "createdAt": "2025-03-17T19:33:05.234Z",
        "updatedAt": "2025-03-17T19:33:05.234Z",
        "id": "67d6fa80a65687459ca6bdf8"
      },
      {
        "name": "6.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/4f630469-96b1-40e4-aa17-9ab8902d95ef.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fa80a65687459ca6bdf7",
        "createdAt": "2025-03-17T19:33:05.234Z",
        "updatedAt": "2025-03-17T19:33:05.234Z",
        "id": "67d6fa80a65687459ca6bdf7"
      },
      {
        "name": "8.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/3b465338-f73a-460a-8b73-f4660b9b1c3a.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fa80a65687459ca6bdf9",
        "createdAt": "2025-03-17T19:33:05.234Z",
        "updatedAt": "2025-03-17T19:33:05.234Z",
        "id": "67d6fa80a65687459ca6bdf9"
      },
      {
        "name": "12.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/71494554-7414-4331-b3e8-6e6c3c7d3dba.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fa80a65687459ca6bdec",
        "createdAt": "2025-03-17T19:33:05.234Z",
        "updatedAt": "2025-03-17T19:33:05.234Z",
        "id": "67d6fa80a65687459ca6bdec"
      },
      {
        "name": "13.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/72e58a08-f338-4a9a-a3f2-3e6a7adfcd04.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fa80a65687459ca6bded",
        "createdAt": "2025-03-17T19:33:05.234Z",
        "updatedAt": "2025-03-17T19:33:05.234Z",
        "id": "67d6fa80a65687459ca6bded"
      },
      {
        "name": "14.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/04b05390-9eed-4627-9e66-c5e5e812eddc.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fa80a65687459ca6bdee",
        "createdAt": "2025-03-17T19:33:05.234Z",
        "updatedAt": "2025-03-17T19:33:05.234Z",
        "id": "67d6fa80a65687459ca6bdee"
      },
      {
        "name": "18.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/a6fc5a4b-7847-4324-8848-e283690db8f1.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fa80a65687459ca6bdf2",
        "createdAt": "2025-03-17T19:33:05.234Z",
        "updatedAt": "2025-03-17T19:33:05.234Z",
        "id": "67d6fa80a65687459ca6bdf2"
      },
      {
        "name": "10.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/5c51fc2e-bb44-449c-9cb1-00a028d22272.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fa80a65687459ca6bdea",
        "createdAt": "2025-03-17T19:33:05.234Z",
        "updatedAt": "2025-03-17T19:33:05.234Z",
        "id": "67d6fa80a65687459ca6bdea"
      },
      {
        "name": "9.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/eb315b42-0ee2-4c9a-8dc1-45ec4f2141e5.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fa80a65687459ca6bdfa",
        "createdAt": "2025-03-17T19:33:05.234Z",
        "updatedAt": "2025-03-17T19:33:05.234Z",
        "id": "67d6fa80a65687459ca6bdfa"
      },
      {
        "name": "11.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/49d85e47-7897-49b0-b07c-dd88217536ff.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fa80a65687459ca6bdeb",
        "createdAt": "2025-03-17T19:33:05.234Z",
        "updatedAt": "2025-03-17T19:33:05.234Z",
        "id": "67d6fa80a65687459ca6bdeb"
      }
    ],
    "createdAt": "2025-03-16T16:21:21.225Z",
    "updatedAt": "2025-03-17T19:33:05.234Z",
    "id": "B06lCkgRP"
  },
  {
    "_id": "z5GXs_bSH",
    "name": "portals edge detection",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67d843593f1d91dc1cb464b4",
          "67d843593f1d91dc1cb464c7",
          "67d8475468f301bb87651ca4",
          "67d843593f1d91dc1cb464c8"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d843593f1d91dc1cb464b3",
        "createdAt": "2025-03-17T17:36:08.591Z",
        "updatedAt": "2025-03-17T17:36:08.591Z",
        "id": "67d843593f1d91dc1cb464b3"
      },
      {
        "name": "index.html",
        "content": "<!--\r\n  👋 Hello! This is an ml5.js example made and shared with ❤️.\r\n  Learn more about the ml5.js project: https://ml5js.org/\r\n  ml5.js license and Code of Conduct: https://github.com/ml5js/ml5-next-gen/blob/main/LICENSE.md\r\n\r\n  This example demonstrates segmenting a person by body parts with ml5.bodySegmentation.\r\n-->\r\n\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>ml5.js bodySegmentation Parts Example</title>\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js\"></script>\r\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\r\n  </head>\r\n  <body>\r\n    <script src=\"sketch.js\"></script>\r\n  </body>\r\n</html>\r\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d843593f1d91dc1cb464c7",
        "createdAt": "2025-03-17T17:36:08.591Z",
        "updatedAt": "2025-03-17T17:36:08.591Z",
        "id": "67d843593f1d91dc1cb464c7"
      },
      {
        "name": "sketch.js",
        "content": "// Body segmentation variables\nlet bodySegmentation;\nlet video;\nlet segmentation;\nlet personImage;\n\nlet options = {\n  maskType: \"parts\",\n};\n\nlet portals = [];\n\n\nfunction preload() {\n  let images = 5;\n  for (let i = 1; i < images + 1; i++) {\n    let path = 'images/' + String(i) + '.jpeg';\n    loadImage(path, \n      img => {\n        portals.push(img);\n        // console.log(\"Loaded:\", path);\n      }, \n      err => console.error(\"Failed to load:\", path, err)\n    );\n  }\n\n  bodySegmentation = ml5.bodySegmentation(\"BodyPix\", options);\n}\n\n\nfunction setup() {\n  createCanvas(640, 480);\n  // Create the video\n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n\n  bodySegmentation.detectStart(video, gotResults);\n\n  // Create an image for segmented output\n  personImage = createImage(video.width, video.height);\n  \n   // frameRate(5);\n}\n\nvar ii = 0;\n\nfunction draw() {\n  background(0);\n\n  image(video, 0, 0, 640, 480);\n\n  // Display the segmented video grid\n  if (segmentation) {\n    copyForegroundPixels(video, segmentation.mask, personImage);\n    image(personImage, 0, 0, width, height);\n  }\n}\n\n// callback function for body segmentation\nfunction gotResults(result) {\n  segmentation = result;\n}\n\nfunction copyForegroundPixels(imgSource, imgMask, imgResult) {\n  imgSource.loadPixels();\n  imgMask.loadPixels();\n  imgResult.loadPixels();\n\n  const imgWidth = imgResult.width;\n  const imgHeight = imgResult.height;\n  const imgChannels = 4;\n\n  const sourceWidth = imgSource.width;\n  const sourceHeight = imgSource.height;\n\n  const scaleX = sourceWidth / imgWidth;\n  const scaleY = sourceHeight / imgHeight;\n\n  let edgePoints = [];\n  let totalX = 0, totalY = 0, count = 0;\n\n  // Step 1: Compute Center of Mass (COM)\n  for (let y = 0; y < imgHeight; y++) {\n    for (let x = 0; x < imgWidth; x++) {\n      let index = (y * imgWidth + x) * imgChannels;\n      if (imgMask.pixels[index] !== 255) { // Foreground\n        totalX += x;\n        totalY += y;\n        count++;\n      }\n    }\n  }\n\n  let centerX = count > 0 ? totalX / count : imgWidth / 2;\n  let centerY = count > 0 ? totalY / count : imgHeight / 2;\n\n  // Step 2: Find Edge Pixels and Lerp Background Colors\n  for (let y = 1; y < imgHeight - 1; y++) {\n    for (let x = 1; x < imgWidth - 1; x++) {\n      let index = (y * imgWidth + x) * imgChannels;\n      if (imgMask.pixels[index] !== 255) { // Foreground\n        let isEdge = false;\n\n        for (let dy = -1; dy <= 1; dy++) {\n          for (let dx = -1; dx <= 1; dx++) {\n            let neighborIndex = ((y + dy) * imgWidth + (x + dx)) * imgChannels;\n            if (imgMask.pixels[neighborIndex] === 255) { // Background neighbor\n              isEdge = true;\n              break;\n            }\n          }\n          if (isEdge) break;\n        }\n\n        if (isEdge) {\n          edgePoints.push({ x, y });\n\n          // Sample background color from portals[2]\n          let srcX = floor(x * scaleX);\n          let srcY = floor(y * scaleY);\n          let srcIndex = (srcY * sourceWidth + srcX) * imgChannels;\n          let bgColor = color(\n            imgSource.pixels[srcIndex],\n            imgSource.pixels[srcIndex + 1],\n            imgSource.pixels[srcIndex + 2]\n          );\n\n          // Step 3: Lerp Position Toward Center of Mass\n          let lerpFactor = 0.0; // Adjust for stronger pull\n          let newX = lerp(x, centerX, lerpFactor);\n          let newY = lerp(y, centerY, lerpFactor);\n\n          let newIdx = (floor(newY) * imgWidth + floor(newX)) * imgChannels;\n          imgResult.pixels[newIdx] = red(bgColor);\n          imgResult.pixels[newIdx + 1] = green(bgColor);\n          imgResult.pixels[newIdx + 2] = blue(bgColor);\n          imgResult.pixels[newIdx + 3] = 255;\n        }\n      }\n    }\n  }\n\n  imgResult.updatePixels();\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67d843593f1d91dc1cb464c8",
        "createdAt": "2025-03-17T17:36:08.591Z",
        "updatedAt": "2025-03-17T17:36:08.591Z",
        "id": "67d843593f1d91dc1cb464c8"
      },
      {
        "name": "images",
        "content": "",
        "children": [
          "67d843593f1d91dc1cb464b5",
          "67d843593f1d91dc1cb464b6",
          "67d843593f1d91dc1cb464b7",
          "67d843593f1d91dc1cb464b8",
          "67d843593f1d91dc1cb464b9",
          "67d843593f1d91dc1cb464ba",
          "67d843593f1d91dc1cb464bb",
          "67d843593f1d91dc1cb464bc",
          "67d843593f1d91dc1cb464bd",
          "67d843593f1d91dc1cb464be",
          "67d843593f1d91dc1cb464bf",
          "67d843593f1d91dc1cb464c0",
          "67d843593f1d91dc1cb464c1",
          "67d843593f1d91dc1cb464c2",
          "67d843593f1d91dc1cb464c3",
          "67d843593f1d91dc1cb464c4",
          "67d843593f1d91dc1cb464c5",
          "67d843593f1d91dc1cb464c6"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d843593f1d91dc1cb464b4",
        "createdAt": "2025-03-17T17:36:08.591Z",
        "updatedAt": "2025-03-17T17:36:08.591Z",
        "id": "67d843593f1d91dc1cb464b4"
      },
      {
        "name": "3.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/2666a250-c211-425b-a7d7-3729ddb456b2.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d843593f1d91dc1cb464c0",
        "createdAt": "2025-03-17T17:36:08.591Z",
        "updatedAt": "2025-03-17T17:36:08.591Z",
        "id": "67d843593f1d91dc1cb464c0"
      },
      {
        "name": "1.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/3e2a767b-a68a-4d70-a012-7a565cbd9905.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d843593f1d91dc1cb464b5",
        "createdAt": "2025-03-17T17:36:08.591Z",
        "updatedAt": "2025-03-17T17:36:08.591Z",
        "id": "67d843593f1d91dc1cb464b5"
      },
      {
        "name": "2.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/468dfcaa-0467-4809-a3c4-69d8d44525a5.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d843593f1d91dc1cb464bf",
        "createdAt": "2025-03-17T17:36:08.591Z",
        "updatedAt": "2025-03-17T17:36:08.591Z",
        "id": "67d843593f1d91dc1cb464bf"
      },
      {
        "name": "4.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/c75b4df0-80ba-499a-958c-a2f340732224.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d843593f1d91dc1cb464c1",
        "createdAt": "2025-03-17T17:36:08.591Z",
        "updatedAt": "2025-03-17T17:36:08.591Z",
        "id": "67d843593f1d91dc1cb464c1"
      },
      {
        "name": "5.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/f53b8ab3-1aa5-4749-9d9c-89f12a77d640.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d843593f1d91dc1cb464c2",
        "createdAt": "2025-03-17T17:36:08.591Z",
        "updatedAt": "2025-03-17T17:36:08.591Z",
        "id": "67d843593f1d91dc1cb464c2"
      },
      {
        "name": "15.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/21f71087-8728-441a-8b6b-78bba507c67a.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d843593f1d91dc1cb464bb",
        "createdAt": "2025-03-17T17:36:08.591Z",
        "updatedAt": "2025-03-17T17:36:08.591Z",
        "id": "67d843593f1d91dc1cb464bb"
      },
      {
        "name": "16.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/a0e08016-b7de-4773-b3e0-06bc06db231c.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d843593f1d91dc1cb464bc",
        "createdAt": "2025-03-17T17:36:08.591Z",
        "updatedAt": "2025-03-17T17:36:08.591Z",
        "id": "67d843593f1d91dc1cb464bc"
      },
      {
        "name": "17.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/f062812d-8542-4047-aa4e-1c7d3687de36.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d843593f1d91dc1cb464bd",
        "createdAt": "2025-03-17T17:36:08.591Z",
        "updatedAt": "2025-03-17T17:36:08.591Z",
        "id": "67d843593f1d91dc1cb464bd"
      },
      {
        "name": "7.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/6d73de44-49f1-4860-b8c1-f2cc8711bec2.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d843593f1d91dc1cb464c4",
        "createdAt": "2025-03-17T17:36:08.591Z",
        "updatedAt": "2025-03-17T17:36:08.591Z",
        "id": "67d843593f1d91dc1cb464c4"
      },
      {
        "name": "6.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/a5395b96-5115-40dd-be70-deef6840eb7a.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d843593f1d91dc1cb464c3",
        "createdAt": "2025-03-17T17:36:08.591Z",
        "updatedAt": "2025-03-17T17:36:08.591Z",
        "id": "67d843593f1d91dc1cb464c3"
      },
      {
        "name": "8.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/67268db9-9361-4715-beb4-9712ebcd1be9.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d843593f1d91dc1cb464c5",
        "createdAt": "2025-03-17T17:36:08.591Z",
        "updatedAt": "2025-03-17T17:36:08.591Z",
        "id": "67d843593f1d91dc1cb464c5"
      },
      {
        "name": "12.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/8e76f5c7-dfb8-4a52-bdde-9663b5c70a7f.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d843593f1d91dc1cb464b8",
        "createdAt": "2025-03-17T17:36:08.591Z",
        "updatedAt": "2025-03-17T17:36:08.591Z",
        "id": "67d843593f1d91dc1cb464b8"
      },
      {
        "name": "13.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/d0560e7d-1966-44a9-a81a-fc858c9e1564.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d843593f1d91dc1cb464b9",
        "createdAt": "2025-03-17T17:36:08.591Z",
        "updatedAt": "2025-03-17T17:36:08.591Z",
        "id": "67d843593f1d91dc1cb464b9"
      },
      {
        "name": "14.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/914e2ee9-0c17-4fe1-b043-ae1b5140d644.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d843593f1d91dc1cb464ba",
        "createdAt": "2025-03-17T17:36:08.591Z",
        "updatedAt": "2025-03-17T17:36:08.591Z",
        "id": "67d843593f1d91dc1cb464ba"
      },
      {
        "name": "18.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/810f9fec-ef02-4b74-9248-c326ca226514.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d843593f1d91dc1cb464be",
        "createdAt": "2025-03-17T17:36:08.591Z",
        "updatedAt": "2025-03-17T17:36:08.591Z",
        "id": "67d843593f1d91dc1cb464be"
      },
      {
        "name": "10.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/f8e55370-4379-4c1c-910f-9d9666f187cb.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d843593f1d91dc1cb464b6",
        "createdAt": "2025-03-17T17:36:08.591Z",
        "updatedAt": "2025-03-17T17:36:08.591Z",
        "id": "67d843593f1d91dc1cb464b6"
      },
      {
        "name": "9.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/1366a299-3715-4d0f-9f1e-3c1f9ade3544.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d843593f1d91dc1cb464c6",
        "createdAt": "2025-03-17T17:36:08.591Z",
        "updatedAt": "2025-03-17T17:36:08.591Z",
        "id": "67d843593f1d91dc1cb464c6"
      },
      {
        "name": "11.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/f50220b3-bd00-41ec-8c57-38fd9c699bb5.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d843593f1d91dc1cb464b7",
        "createdAt": "2025-03-17T17:36:08.591Z",
        "updatedAt": "2025-03-17T17:36:08.591Z",
        "id": "67d843593f1d91dc1cb464b7"
      },
      {
        "name": "other.js",
        "content": "// function copyForegroundPixels(imgSource, imgMask, imgResult) {\n//   imgSource.loadPixels();\n//   imgMask.loadPixels();\n//   imgResult.loadPixels();\n\n//   const imgWidth = imgResult.width;\n//   const imgHeight = imgResult.height;\n//   const imgChannels = 4;\n  \n//   const sourceWidth = imgSource.width;\n//   const sourceHeight = imgSource.height;\n  \n//   const scaleX = sourceWidth / imgWidth;\n//   const scaleY = sourceHeight / imgHeight;\n\n//   let edgePoints = []; // Store edge points\n\n//   for (let y = 1; y < imgHeight - 1; y++) {\n//     for (let x = 1; x < imgWidth - 1; x++) {\n//       let index = (y * imgWidth + x) * imgChannels;\n//       let maskR = imgMask.pixels[index];\n\n//       // Check if the current pixel is part of the person\n//       if (maskR !== 255) {\n//         // Check if any neighbor is part of the background\n//         let isEdge = false;\n//         for (let dy = -1; dy <= 1; dy++) {\n//           for (let dx = -1; dx <= 1; dx++) {\n//             let neighborIndex = ((y + dy) * imgWidth + (x + dx)) * imgChannels;\n//             if (imgMask.pixels[neighborIndex] === 255) {\n//               isEdge = true;\n//               break;\n//             }\n//           }\n//           if (isEdge) break;\n//         }\n\n//         if (isEdge) {\n//           edgePoints.push({ x, y });\n\n//           // Extract background color (assuming portals[2] is the background)\n//           let srcX = floor(x * scaleX);\n//           let srcY = floor(y * scaleY);\n//           let srcIndex = (srcY * sourceWidth + srcX) * imgChannels;\n\n//           let bgColor = {\n//             r: imgSource.pixels[srcIndex],\n//             g: imgSource.pixels[srcIndex + 1],\n//             b: imgSource.pixels[srcIndex + 2]\n//           };\n\n//           console.log(`Edge at (${x}, ${y}) - Background color:`, bgColor);\n//         }\n//       }\n//     }\n//   }\n\n//   imgResult.updatePixels();\n// }\n\n// Copy foreground pixels from the video based on the mask\n// function copyForegroundPixels(imgSource, imgMask, imgResult) {\n//   imgSource.loadPixels();\n//   imgMask.loadPixels();\n//   imgResult.loadPixels();\n\n//   const imgWidth = imgResult.width;\n//   const imgHeight = imgResult.height;\n//   const imgChannels = 4;\n\n//   const sourceWidth = imgSource.width;\n//   const sourceHeight = imgSource.height;\n\n//   const scaleX = sourceWidth / imgWidth;\n//   const scaleY = sourceHeight / imgHeight;\n\n//   for (let y = 0; y < imgHeight; y++) {\n//     for (let x = 0; x < imgWidth; x++) {\n//       let index = (y * imgWidth + x) * imgChannels;\n//       let maskR = imgMask.pixels[index];\n//       let maskG = imgMask.pixels[index + 1];\n//       let maskB = imgMask.pixels[index + 2];\n\n//       // Map coordinates to the source image\n//       let srcX = floor(x * scaleX);\n//       let srcY = floor(y * scaleY);\n//       let srcIndex = (srcY * sourceWidth + srcX) * imgChannels;\n\n//       if (maskR === 255 && maskG === 255 && maskB === 255) {\n//         // If the mask is white, make pixel transparent\n//         imgResult.pixels[index] = 0;\n//         imgResult.pixels[index + 1] = 0;\n//         imgResult.pixels[index + 2] = 0;\n//         imgResult.pixels[index + 3] = 0;\n//       } else {\n//         // Map pixels from portals[2] properly\n//         imgResult.pixels[index] = imgSource.pixels[srcIndex];\n//         imgResult.pixels[index + 1] = imgSource.pixels[srcIndex + 1];\n//         imgResult.pixels[index + 2] = imgSource.pixels[srcIndex + 2];\n//         imgResult.pixels[index + 3] = 255; // Full opacity\n//       }\n//     }\n//   }\n\n//   imgResult.updatePixels();\n// }\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d8475468f301bb87651ca4",
        "createdAt": "2025-03-17T17:36:08.591Z",
        "updatedAt": "2025-03-17T17:36:08.591Z",
        "id": "67d8475468f301bb87651ca4"
      }
    ],
    "createdAt": "2025-03-17T15:44:27.104Z",
    "updatedAt": "2025-03-17T17:36:08.591Z",
    "id": "z5GXs_bSH"
  },
  {
    "_id": "jfq29Ljfs",
    "name": "portals edge detection copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67dc7286d4f37bde692deac1",
          "67dc7286d4f37bde692dead4",
          "67dc7286d4f37bde692dead5",
          "67dc7286d4f37bde692dead6"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67dc7286d4f37bde692deac0",
        "createdAt": "2025-03-20T19:55:43.601Z",
        "updatedAt": "2025-03-20T19:55:43.601Z",
        "id": "67dc7286d4f37bde692deac0"
      },
      {
        "name": "index.html",
        "content": "<!--\r\n  👋 Hello! This is an ml5.js example made and shared with ❤️.\r\n  Learn more about the ml5.js project: https://ml5js.org/\r\n  ml5.js license and Code of Conduct: https://github.com/ml5js/ml5-next-gen/blob/main/LICENSE.md\r\n\r\n  This example demonstrates segmenting a person by body parts with ml5.bodySegmentation.\r\n-->\r\n\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>ml5.js bodySegmentation Parts Example</title>\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js\"></script>\r\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\r\n  </head>\r\n  <body>\r\n    <script src=\"sketch.js\"></script>\r\n  </body>\r\n</html>\r\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67dc7286d4f37bde692dead4",
        "createdAt": "2025-03-20T19:55:43.601Z",
        "updatedAt": "2025-03-20T19:55:43.601Z",
        "id": "67dc7286d4f37bde692dead4"
      },
      {
        "name": "sketch.js",
        "content": "// Body segmentation variables\nlet video;\n\nlet portals = [];\n\n\nfunction preload() {\n  let videos = 5;\n  for (let i = 1; i < videos + 1; i++) {\n    let path = 'images/' + String(i) + '.mov';\n    loadImage(path, \n      img => {\n        portals.push(img);\n        // console.log(\"Loaded:\", path);\n      }, \n      err => console.error(\"Failed to load:\", path, err)\n    );\n  }\n\n  bodySegmentation = ml5.bodySegmentation(\"BodyPix\", options);\n}\n\n\nfunction setup() {\n  createCanvas(640, 480);\n  // Create the video\n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n\n  bodySegmentation.detectStart(video, gotResults);\n\n  // Create an image for segmented output\n  personImage = createImage(video.width, video.height);\n  \n   // frameRate(5);\n}\n\nvar ii = 0;\n\nfunction draw() {\n  background(0);\n\n  image(video, 0, 0, 640, 480);\n\n  // Display the segmented video grid\n  if (segmentation) {\n    copyForegroundPixels(video, segmentation.mask, personImage);\n    image(personImage, 0, 0, width, height);\n  }\n}\n\n// callback function for body segmentation\nfunction gotResults(result) {\n  segmentation = result;\n}\n\nfunction copyForegroundPixels(imgSource, imgMask, imgResult) {\n  imgSource.loadPixels();\n  imgMask.loadPixels();\n  imgResult.loadPixels();\n\n  const imgWidth = imgResult.width;\n  const imgHeight = imgResult.height;\n  const imgChannels = 4;\n\n  const sourceWidth = imgSource.width;\n  const sourceHeight = imgSource.height;\n\n  const scaleX = sourceWidth / imgWidth;\n  const scaleY = sourceHeight / imgHeight;\n\n  let edgePoints = [];\n  let totalX = 0, totalY = 0, count = 0;\n\n  // Step 1: Compute Center of Mass (COM)\n  for (let y = 0; y < imgHeight; y++) {\n    for (let x = 0; x < imgWidth; x++) {\n      let index = (y * imgWidth + x) * imgChannels;\n      if (imgMask.pixels[index] !== 255) { // Foreground\n        totalX += x;\n        totalY += y;\n        count++;\n      }\n    }\n  }\n\n  let centerX = count > 0 ? totalX / count : imgWidth / 2;\n  let centerY = count > 0 ? totalY / count : imgHeight / 2;\n\n  // Step 2: Find Edge Pixels and Lerp Background Colors\n  for (let y = 1; y < imgHeight - 1; y++) {\n    for (let x = 1; x < imgWidth - 1; x++) {\n      let index = (y * imgWidth + x) * imgChannels;\n      if (imgMask.pixels[index] !== 255) { // Foreground\n        let isEdge = false;\n\n        for (let dy = -1; dy <= 1; dy++) {\n          for (let dx = -1; dx <= 1; dx++) {\n            let neighborIndex = ((y + dy) * imgWidth + (x + dx)) * imgChannels;\n            if (imgMask.pixels[neighborIndex] === 255) { // Background neighbor\n              isEdge = true;\n              break;\n            }\n          }\n          if (isEdge) break;\n        }\n\n        if (isEdge) {\n          edgePoints.push({ x, y });\n\n          // Sample background color from portals[2]\n          let srcX = floor(x * scaleX);\n          let srcY = floor(y * scaleY);\n          let srcIndex = (srcY * sourceWidth + srcX) * imgChannels;\n          let bgColor = color(\n            imgSource.pixels[srcIndex],\n            imgSource.pixels[srcIndex + 1],\n            imgSource.pixels[srcIndex + 2]\n          );\n\n          // Step 3: Lerp Position Toward Center of Mass\n          let lerpFactor = 0.0; // Adjust for stronger pull\n          let newX = lerp(x, centerX, lerpFactor);\n          let newY = lerp(y, centerY, lerpFactor);\n\n          let newIdx = (floor(newY) * imgWidth + floor(newX)) * imgChannels;\n          imgResult.pixels[newIdx] = red(bgColor);\n          imgResult.pixels[newIdx + 1] = green(bgColor);\n          imgResult.pixels[newIdx + 2] = blue(bgColor);\n          imgResult.pixels[newIdx + 3] = 255;\n        }\n      }\n    }\n  }\n\n  imgResult.updatePixels();\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67dc7286d4f37bde692dead6",
        "createdAt": "2025-03-20T19:55:43.601Z",
        "updatedAt": "2025-03-20T19:55:43.601Z",
        "id": "67dc7286d4f37bde692dead6"
      },
      {
        "name": "images",
        "content": "",
        "children": [
          "67dc7286d4f37bde692deac2",
          "67dc7286d4f37bde692deac3",
          "67dc7286d4f37bde692deac4",
          "67dc7286d4f37bde692deac5",
          "67dc7286d4f37bde692deac6",
          "67dc7286d4f37bde692deac7",
          "67dc7286d4f37bde692deac8",
          "67dc7286d4f37bde692deac9",
          "67dc7286d4f37bde692deaca",
          "67dc7286d4f37bde692deacb",
          "67dc7286d4f37bde692deacc",
          "67dc7286d4f37bde692deacd",
          "67dc7286d4f37bde692deace",
          "67dc7286d4f37bde692deacf",
          "67dc7286d4f37bde692dead0",
          "67dc7286d4f37bde692dead1",
          "67dc7286d4f37bde692dead2",
          "67dc7286d4f37bde692dead3"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67dc7286d4f37bde692deac1",
        "createdAt": "2025-03-20T19:55:43.601Z",
        "updatedAt": "2025-03-20T19:55:43.601Z",
        "id": "67dc7286d4f37bde692deac1"
      },
      {
        "name": "3.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/6b644d2a-4925-474c-a2a1-46244d967bcd.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67dc7286d4f37bde692deacd",
        "createdAt": "2025-03-20T19:55:43.601Z",
        "updatedAt": "2025-03-20T19:55:43.601Z",
        "id": "67dc7286d4f37bde692deacd"
      },
      {
        "name": "1.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/1a5beb2b-9ef0-47aa-a08b-df3bc015566f.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67dc7286d4f37bde692deac2",
        "createdAt": "2025-03-20T19:55:43.601Z",
        "updatedAt": "2025-03-20T19:55:43.601Z",
        "id": "67dc7286d4f37bde692deac2"
      },
      {
        "name": "2.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/24249652-edde-44e4-a40b-d18f48590679.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67dc7286d4f37bde692deacc",
        "createdAt": "2025-03-20T19:55:43.601Z",
        "updatedAt": "2025-03-20T19:55:43.601Z",
        "id": "67dc7286d4f37bde692deacc"
      },
      {
        "name": "4.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/0f5fe1d1-7abf-4a98-9779-1feefe42075a.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67dc7286d4f37bde692deace",
        "createdAt": "2025-03-20T19:55:43.601Z",
        "updatedAt": "2025-03-20T19:55:43.601Z",
        "id": "67dc7286d4f37bde692deace"
      },
      {
        "name": "5.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/2ae6ac8f-3154-4986-9b09-7a92cbf6b5c3.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67dc7286d4f37bde692deacf",
        "createdAt": "2025-03-20T19:55:43.601Z",
        "updatedAt": "2025-03-20T19:55:43.601Z",
        "id": "67dc7286d4f37bde692deacf"
      },
      {
        "name": "15.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/54207677-2459-4be2-9d3a-90b350015e2e.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67dc7286d4f37bde692deac8",
        "createdAt": "2025-03-20T19:55:43.601Z",
        "updatedAt": "2025-03-20T19:55:43.601Z",
        "id": "67dc7286d4f37bde692deac8"
      },
      {
        "name": "16.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/aa1ebdb2-0801-4aa5-b10d-8527430d3d6e.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67dc7286d4f37bde692deac9",
        "createdAt": "2025-03-20T19:55:43.601Z",
        "updatedAt": "2025-03-20T19:55:43.601Z",
        "id": "67dc7286d4f37bde692deac9"
      },
      {
        "name": "17.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/484facd4-83ef-4681-b83d-a3e1dc5c8c8b.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67dc7286d4f37bde692deaca",
        "createdAt": "2025-03-20T19:55:43.601Z",
        "updatedAt": "2025-03-20T19:55:43.601Z",
        "id": "67dc7286d4f37bde692deaca"
      },
      {
        "name": "7.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/bba7f2a6-e09b-48e2-8b10-7927ba7a64d4.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67dc7286d4f37bde692dead1",
        "createdAt": "2025-03-20T19:55:43.601Z",
        "updatedAt": "2025-03-20T19:55:43.601Z",
        "id": "67dc7286d4f37bde692dead1"
      },
      {
        "name": "6.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/ab6b42a7-dc44-4865-99b7-c6e6d12f583c.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67dc7286d4f37bde692dead0",
        "createdAt": "2025-03-20T19:55:43.601Z",
        "updatedAt": "2025-03-20T19:55:43.601Z",
        "id": "67dc7286d4f37bde692dead0"
      },
      {
        "name": "8.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/814d7711-7aa0-4831-9030-a56a36f424d4.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67dc7286d4f37bde692dead2",
        "createdAt": "2025-03-20T19:55:43.601Z",
        "updatedAt": "2025-03-20T19:55:43.601Z",
        "id": "67dc7286d4f37bde692dead2"
      },
      {
        "name": "12.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/3bbdf192-d49e-4299-a52d-823dd63947b5.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67dc7286d4f37bde692deac5",
        "createdAt": "2025-03-20T19:55:43.601Z",
        "updatedAt": "2025-03-20T19:55:43.601Z",
        "id": "67dc7286d4f37bde692deac5"
      },
      {
        "name": "13.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/362b7025-08b4-49bc-aa9f-c1049655ef4d.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67dc7286d4f37bde692deac6",
        "createdAt": "2025-03-20T19:55:43.601Z",
        "updatedAt": "2025-03-20T19:55:43.601Z",
        "id": "67dc7286d4f37bde692deac6"
      },
      {
        "name": "14.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/40bbb45d-8c5c-42e2-a078-c94acd0a4577.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67dc7286d4f37bde692deac7",
        "createdAt": "2025-03-20T19:55:43.601Z",
        "updatedAt": "2025-03-20T19:55:43.601Z",
        "id": "67dc7286d4f37bde692deac7"
      },
      {
        "name": "18.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/67ce8628-f204-4efb-8c7f-36a745065864.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67dc7286d4f37bde692deacb",
        "createdAt": "2025-03-20T19:55:43.601Z",
        "updatedAt": "2025-03-20T19:55:43.601Z",
        "id": "67dc7286d4f37bde692deacb"
      },
      {
        "name": "10.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/d534280e-5892-4e99-bc4f-e27274991f7f.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67dc7286d4f37bde692deac3",
        "createdAt": "2025-03-20T19:55:43.601Z",
        "updatedAt": "2025-03-20T19:55:43.601Z",
        "id": "67dc7286d4f37bde692deac3"
      },
      {
        "name": "9.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/34bb438c-88d7-49b0-ab22-359b4f6451c5.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67dc7286d4f37bde692dead3",
        "createdAt": "2025-03-20T19:55:43.601Z",
        "updatedAt": "2025-03-20T19:55:43.601Z",
        "id": "67dc7286d4f37bde692dead3"
      },
      {
        "name": "11.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/c4be1622-6cf2-4d14-a446-ec51af8f7ba8.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67dc7286d4f37bde692deac4",
        "createdAt": "2025-03-20T19:55:43.601Z",
        "updatedAt": "2025-03-20T19:55:43.601Z",
        "id": "67dc7286d4f37bde692deac4"
      },
      {
        "name": "other.js",
        "content": "// function copyForegroundPixels(imgSource, imgMask, imgResult) {\n//   imgSource.loadPixels();\n//   imgMask.loadPixels();\n//   imgResult.loadPixels();\n\n//   const imgWidth = imgResult.width;\n//   const imgHeight = imgResult.height;\n//   const imgChannels = 4;\n  \n//   const sourceWidth = imgSource.width;\n//   const sourceHeight = imgSource.height;\n  \n//   const scaleX = sourceWidth / imgWidth;\n//   const scaleY = sourceHeight / imgHeight;\n\n//   let edgePoints = []; // Store edge points\n\n//   for (let y = 1; y < imgHeight - 1; y++) {\n//     for (let x = 1; x < imgWidth - 1; x++) {\n//       let index = (y * imgWidth + x) * imgChannels;\n//       let maskR = imgMask.pixels[index];\n\n//       // Check if the current pixel is part of the person\n//       if (maskR !== 255) {\n//         // Check if any neighbor is part of the background\n//         let isEdge = false;\n//         for (let dy = -1; dy <= 1; dy++) {\n//           for (let dx = -1; dx <= 1; dx++) {\n//             let neighborIndex = ((y + dy) * imgWidth + (x + dx)) * imgChannels;\n//             if (imgMask.pixels[neighborIndex] === 255) {\n//               isEdge = true;\n//               break;\n//             }\n//           }\n//           if (isEdge) break;\n//         }\n\n//         if (isEdge) {\n//           edgePoints.push({ x, y });\n\n//           // Extract background color (assuming portals[2] is the background)\n//           let srcX = floor(x * scaleX);\n//           let srcY = floor(y * scaleY);\n//           let srcIndex = (srcY * sourceWidth + srcX) * imgChannels;\n\n//           let bgColor = {\n//             r: imgSource.pixels[srcIndex],\n//             g: imgSource.pixels[srcIndex + 1],\n//             b: imgSource.pixels[srcIndex + 2]\n//           };\n\n//           console.log(`Edge at (${x}, ${y}) - Background color:`, bgColor);\n//         }\n//       }\n//     }\n//   }\n\n//   imgResult.updatePixels();\n// }\n\n// Copy foreground pixels from the video based on the mask\n// function copyForegroundPixels(imgSource, imgMask, imgResult) {\n//   imgSource.loadPixels();\n//   imgMask.loadPixels();\n//   imgResult.loadPixels();\n\n//   const imgWidth = imgResult.width;\n//   const imgHeight = imgResult.height;\n//   const imgChannels = 4;\n\n//   const sourceWidth = imgSource.width;\n//   const sourceHeight = imgSource.height;\n\n//   const scaleX = sourceWidth / imgWidth;\n//   const scaleY = sourceHeight / imgHeight;\n\n//   for (let y = 0; y < imgHeight; y++) {\n//     for (let x = 0; x < imgWidth; x++) {\n//       let index = (y * imgWidth + x) * imgChannels;\n//       let maskR = imgMask.pixels[index];\n//       let maskG = imgMask.pixels[index + 1];\n//       let maskB = imgMask.pixels[index + 2];\n\n//       // Map coordinates to the source image\n//       let srcX = floor(x * scaleX);\n//       let srcY = floor(y * scaleY);\n//       let srcIndex = (srcY * sourceWidth + srcX) * imgChannels;\n\n//       if (maskR === 255 && maskG === 255 && maskB === 255) {\n//         // If the mask is white, make pixel transparent\n//         imgResult.pixels[index] = 0;\n//         imgResult.pixels[index + 1] = 0;\n//         imgResult.pixels[index + 2] = 0;\n//         imgResult.pixels[index + 3] = 0;\n//       } else {\n//         // Map pixels from portals[2] properly\n//         imgResult.pixels[index] = imgSource.pixels[srcIndex];\n//         imgResult.pixels[index + 1] = imgSource.pixels[srcIndex + 1];\n//         imgResult.pixels[index + 2] = imgSource.pixels[srcIndex + 2];\n//         imgResult.pixels[index + 3] = 255; // Full opacity\n//       }\n//     }\n//   }\n\n//   imgResult.updatePixels();\n// }\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67dc7286d4f37bde692dead5",
        "createdAt": "2025-03-20T19:55:43.601Z",
        "updatedAt": "2025-03-20T19:55:43.601Z",
        "id": "67dc7286d4f37bde692dead5"
      }
    ],
    "createdAt": "2025-03-20T19:54:47.187Z",
    "updatedAt": "2025-03-20T19:55:43.601Z",
    "id": "jfq29Ljfs"
  },
  {
    "_id": "qS6uolHdQ",
    "name": "portals stagger",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67d6fb48240341814de160fe",
          "67d6fb48240341814de16111",
          "67d6fb48240341814de16112"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d6fb48240341814de160fd",
        "createdAt": "2025-03-16T16:24:47.733Z",
        "updatedAt": "2025-03-16T16:24:47.733Z",
        "id": "67d6fb48240341814de160fd"
      },
      {
        "name": "index.html",
        "content": "<!--\r\n  👋 Hello! This is an ml5.js example made and shared with ❤️.\r\n  Learn more about the ml5.js project: https://ml5js.org/\r\n  ml5.js license and Code of Conduct: https://github.com/ml5js/ml5-next-gen/blob/main/LICENSE.md\r\n\r\n  This example demonstrates segmenting a person by body parts with ml5.bodySegmentation.\r\n-->\r\n\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>ml5.js bodySegmentation Parts Example</title>\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js\"></script>\r\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\r\n  </head>\r\n  <body>\r\n    <script src=\"sketch.js\"></script>\r\n  </body>\r\n</html>\r\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fb48240341814de16111",
        "createdAt": "2025-03-16T16:24:47.733Z",
        "updatedAt": "2025-03-16T16:24:47.733Z",
        "id": "67d6fb48240341814de16111"
      },
      {
        "name": "sketch.js",
        "content": "// Body segmentation variables\nlet bodySegmentation;\nlet video;\nlet segmentation;\nlet personImage;\n\nlet options = {\n  maskType: \"parts\",\n};\n\nlet portals = [];\n\n\nfunction preload() {\n  let images = 18;\n  for (let i = 1; i < images + 1; i++) {\n    let path = 'images/' + String(i) + '.jpeg';\n    loadImage(path, \n      img => {\n        portals.push(img);\n        // console.log(\"Loaded:\", path);\n      }, \n      err => console.error(\"Failed to load:\", path, err)\n    );\n  }\n\n  bodySegmentation = ml5.bodySegmentation(\"BodyPix\", options);\n}\n\n\nfunction setup() {\n  createCanvas(640, 480);\n  // Create the video\n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n\n  bodySegmentation.detectStart(video, gotResults);\n\n  // Create an image for segmented output\n  personImage = createImage(video.width, video.height);\n  \n   // frameRate(5);\n}\n\nvar ii = 0;\n\nlet i = 0; // Index for portals\nlet lastSwitchTime = 0; // Stores last switch time\nconst switchInterval = 10000; // 10 seconds\n\nfunction draw() {\n  background(0);\n\n  // Every 10 seconds, update i\n  if (millis() - lastSwitchTime > switchInterval) {\n    i = (i + 1) % portals.length; // Loop back to start if it exceeds length\n    lastSwitchTime = millis(); // Reset time\n  }\n\n  // Show background image\n  image(portals[i], 0, 0, 640, 480);\n\n  // Display the segmented mask filled with the next portal image\n  if (segmentation) {\n    let maskIndex = (i + 1) % portals.length; // Ensure it loops correctly\n    copyForegroundPixels(portals[maskIndex], segmentation.mask, personImage);\n    image(personImage, 0, 0, width, height);\n  }\n}\n\n\n// callback function for body segmentation\nfunction gotResults(result) {\n  segmentation = result;\n}\n\n// Copy foreground pixels from the video based on the mask\nfunction copyForegroundPixels(imgSource, imgMask, imgResult) {\n  imgSource.loadPixels();\n  imgMask.loadPixels();\n  imgResult.loadPixels();\n\n  const imgWidth = imgResult.width;\n  const imgHeight = imgResult.height;\n  const imgChannels = 4;\n\n  const sourceWidth = imgSource.width;\n  const sourceHeight = imgSource.height;\n\n  const scaleX = sourceWidth / imgWidth;\n  const scaleY = sourceHeight / imgHeight;\n\n  for (let y = 0; y < imgHeight; y++) {\n    for (let x = 0; x < imgWidth; x++) {\n      let index = (y * imgWidth + x) * imgChannels;\n      let maskR = imgMask.pixels[index];\n      let maskG = imgMask.pixels[index + 1];\n      let maskB = imgMask.pixels[index + 2];\n\n      // Map coordinates to the source image\n      let srcX = floor(x * scaleX);\n      let srcY = floor(y * scaleY);\n      let srcIndex = (srcY * sourceWidth + srcX) * imgChannels;\n\n      if (maskR === 255 && maskG === 255 && maskB === 255) {\n        // If the mask is white, make pixel transparent\n        imgResult.pixels[index] = 0;\n        imgResult.pixels[index + 1] = 0;\n        imgResult.pixels[index + 2] = 0;\n        imgResult.pixels[index + 3] = 0;\n      } else {\n        // Map pixels from portals[2] properly\n        imgResult.pixels[index] = imgSource.pixels[srcIndex];\n        imgResult.pixels[index + 1] = imgSource.pixels[srcIndex + 1];\n        imgResult.pixels[index + 2] = imgSource.pixels[srcIndex + 2];\n        imgResult.pixels[index + 3] = 255; // Full opacity\n      }\n    }\n  }\n\n  imgResult.updatePixels();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67d6fb48240341814de16112",
        "createdAt": "2025-03-16T16:24:47.733Z",
        "updatedAt": "2025-03-16T16:24:47.733Z",
        "id": "67d6fb48240341814de16112"
      },
      {
        "name": "images",
        "content": "",
        "children": [
          "67d6fb48240341814de160ff",
          "67d6fb48240341814de16100",
          "67d6fb48240341814de16101",
          "67d6fb48240341814de16102",
          "67d6fb48240341814de16103",
          "67d6fb48240341814de16104",
          "67d6fb48240341814de16105",
          "67d6fb48240341814de16106",
          "67d6fb48240341814de16107",
          "67d6fb48240341814de16108",
          "67d6fb48240341814de16109",
          "67d6fb48240341814de1610a",
          "67d6fb48240341814de1610b",
          "67d6fb48240341814de1610c",
          "67d6fb48240341814de1610d",
          "67d6fb48240341814de1610e",
          "67d6fb48240341814de1610f",
          "67d6fb48240341814de16110"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d6fb48240341814de160fe",
        "createdAt": "2025-03-16T16:24:47.733Z",
        "updatedAt": "2025-03-16T16:24:47.733Z",
        "id": "67d6fb48240341814de160fe"
      },
      {
        "name": "3.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/9f911292-d855-4fc9-aca3-bcd61b467d07.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fb48240341814de1610a",
        "createdAt": "2025-03-16T16:24:47.733Z",
        "updatedAt": "2025-03-16T16:24:47.733Z",
        "id": "67d6fb48240341814de1610a"
      },
      {
        "name": "1.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/94b4e882-1995-420c-a126-bfebf60d70b6.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fb48240341814de160ff",
        "createdAt": "2025-03-16T16:24:47.733Z",
        "updatedAt": "2025-03-16T16:24:47.733Z",
        "id": "67d6fb48240341814de160ff"
      },
      {
        "name": "2.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/831130fc-031f-4145-8d4a-4ac541ec3071.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fb48240341814de16109",
        "createdAt": "2025-03-16T16:24:47.733Z",
        "updatedAt": "2025-03-16T16:24:47.733Z",
        "id": "67d6fb48240341814de16109"
      },
      {
        "name": "4.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/cccf9007-f53e-4d4a-8576-60fe828a869a.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fb48240341814de1610b",
        "createdAt": "2025-03-16T16:24:47.733Z",
        "updatedAt": "2025-03-16T16:24:47.733Z",
        "id": "67d6fb48240341814de1610b"
      },
      {
        "name": "5.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/d9fd2dd3-1e4d-4e99-b3e9-fd20859a210a.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fb48240341814de1610c",
        "createdAt": "2025-03-16T16:24:47.733Z",
        "updatedAt": "2025-03-16T16:24:47.733Z",
        "id": "67d6fb48240341814de1610c"
      },
      {
        "name": "15.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/2f09ca1b-177b-435a-ac82-37e54cbba71d.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fb48240341814de16105",
        "createdAt": "2025-03-16T16:24:47.733Z",
        "updatedAt": "2025-03-16T16:24:47.733Z",
        "id": "67d6fb48240341814de16105"
      },
      {
        "name": "16.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/a0f6da57-fea5-41be-9a83-697189b66ca7.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fb48240341814de16106",
        "createdAt": "2025-03-16T16:24:47.733Z",
        "updatedAt": "2025-03-16T16:24:47.733Z",
        "id": "67d6fb48240341814de16106"
      },
      {
        "name": "17.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/4caaa71c-496c-41b4-a83d-624fc4c43fc9.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fb48240341814de16107",
        "createdAt": "2025-03-16T16:24:47.733Z",
        "updatedAt": "2025-03-16T16:24:47.733Z",
        "id": "67d6fb48240341814de16107"
      },
      {
        "name": "7.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/6a1f4074-26e0-4b03-8093-d79144338fc7.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fb48240341814de1610e",
        "createdAt": "2025-03-16T16:24:47.733Z",
        "updatedAt": "2025-03-16T16:24:47.733Z",
        "id": "67d6fb48240341814de1610e"
      },
      {
        "name": "6.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/20a4b6c6-22a9-4ee3-ac4a-41f784cba58d.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fb48240341814de1610d",
        "createdAt": "2025-03-16T16:24:47.733Z",
        "updatedAt": "2025-03-16T16:24:47.733Z",
        "id": "67d6fb48240341814de1610d"
      },
      {
        "name": "8.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/eb0303c7-b7b1-42e3-b232-dc96cb12e536.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fb48240341814de1610f",
        "createdAt": "2025-03-16T16:24:47.733Z",
        "updatedAt": "2025-03-16T16:24:47.733Z",
        "id": "67d6fb48240341814de1610f"
      },
      {
        "name": "12.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/e548d70f-7119-4180-8ffb-d698f8b39710.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fb48240341814de16102",
        "createdAt": "2025-03-16T16:24:47.733Z",
        "updatedAt": "2025-03-16T16:24:47.733Z",
        "id": "67d6fb48240341814de16102"
      },
      {
        "name": "13.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/f8115029-b85b-4a30-87c1-e48389e2f046.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fb48240341814de16103",
        "createdAt": "2025-03-16T16:24:47.733Z",
        "updatedAt": "2025-03-16T16:24:47.733Z",
        "id": "67d6fb48240341814de16103"
      },
      {
        "name": "14.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/861e61e9-3e5c-4e95-8bdc-d2ee8bad3b41.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fb48240341814de16104",
        "createdAt": "2025-03-16T16:24:47.733Z",
        "updatedAt": "2025-03-16T16:24:47.733Z",
        "id": "67d6fb48240341814de16104"
      },
      {
        "name": "18.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/642642db-c78c-43e5-baf2-2979562e7c42.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fb48240341814de16108",
        "createdAt": "2025-03-16T16:24:47.733Z",
        "updatedAt": "2025-03-16T16:24:47.733Z",
        "id": "67d6fb48240341814de16108"
      },
      {
        "name": "10.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/d9aa5ec4-b3ec-490b-b1b1-9344922d3253.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fb48240341814de16100",
        "createdAt": "2025-03-16T16:24:47.733Z",
        "updatedAt": "2025-03-16T16:24:47.733Z",
        "id": "67d6fb48240341814de16100"
      },
      {
        "name": "9.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/f0c0ed2e-fbab-4fed-ae40-d78c29b726a2.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fb48240341814de16110",
        "createdAt": "2025-03-16T16:24:47.733Z",
        "updatedAt": "2025-03-16T16:24:47.733Z",
        "id": "67d6fb48240341814de16110"
      },
      {
        "name": "11.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/669c419e-97fc-4693-ae47-8a2c93b2fdee.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d6fb48240341814de16101",
        "createdAt": "2025-03-16T16:24:47.733Z",
        "updatedAt": "2025-03-16T16:24:47.733Z",
        "id": "67d6fb48240341814de16101"
      }
    ],
    "createdAt": "2025-03-16T16:24:41.437Z",
    "updatedAt": "2025-03-16T16:24:47.733Z",
    "id": "qS6uolHdQ"
  },
  {
    "_id": "PC3hnf8UY",
    "name": "portals video tunnel - semi-defunct",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67d781a620172c39009b7c3d",
          "67d781a620172c39009b7c50",
          "67dafc41c0776ec34d3d4185",
          "67d781a620172c39009b7c51",
          "67d781a620172c39009b7c52"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d781a620172c39009b7c3c",
        "createdAt": "2025-03-19T17:42:35.655Z",
        "updatedAt": "2025-03-19T17:42:35.655Z",
        "id": "67d781a620172c39009b7c3c"
      },
      {
        "name": "index.html",
        "content": "<!--\n  👋 Hello! This is an ml5.js example made and shared with ❤️.\n  Learn more about the ml5.js project: https://ml5js.org/\n  ml5.js license and Code of Conduct: https://github.com/ml5js/ml5-next-gen/blob/main/LICENSE.md\n\n  This example demonstrates segmenting a person by body parts with ml5.bodySegmentation.\n-->\n\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ml5.js bodySegmentation Parts Example</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d781a620172c39009b7c50",
        "createdAt": "2025-03-19T17:42:35.655Z",
        "updatedAt": "2025-03-19T17:42:35.655Z",
        "id": "67d781a620172c39009b7c50"
      },
      {
        "name": "sketch.js",
        "content": "// pixel density function \n// https://p5js.org/reference/p5/pixelDensity/\n// \n\n// Body segmentation variables\nlet bodySegmentation;\nlet video;\nlet segmentation;\nlet personImage;\nlet tunnelBuffer;\n\nlet options = {\n  maskType: \"parts\",\n};\n\nlet portals = [];\nlet isSetupComplete = false;\n\nfunction preload() {\n  let images = 5;\n  for (let i = 1; i < images + 1; i++) {\n    let path = 'images/' + String(i) + '.jpeg';\n    loadImage(path, \n      img => {\n        portals.push(img);\n      }, \n      err => console.error(\"Failed to load:\", path, err)\n    );\n  }\n\n  bodySegmentation = ml5.bodySegmentation(\"BodyPix\", options);\n}\n\nfunction setup() {\n  createCanvas(640, 480);\n  \n  // Create the video\n  video = createCapture(VIDEO, videoReady);\n  video.size(640, 480);\n  video.hide();\n\n  // Create an image for segmented output\n  personImage = createImage(640, 480);\n  \n  // Create a buffer for the tunnel effect\n  tunnelBuffer = createGraphics(640, 480);\n}\n\nfunction videoReady() {\n  console.log(\"Video is ready\");\n  bodySegmentation.detectStart(video, gotResults);\n  isSetupComplete = true;\n}\n\nfunction draw() {\n  background(0);\n  \n  // Draw the background image\n  if (portals.length > 2) {\n    image(portals[2], 0, 0, 640, 480);\n  }\n\n  // Make sure everything is initialized before trying to use it\n  if (isSetupComplete && segmentation && video.loadedmetadata) {\n    // Alternative method using the video feed for tunnel effect\n    createVideoTunnelEffect();\n    image(personImage, 0, 0, width, height);\n  }\n}\n\n// Callback function for body segmentation\nfunction gotResults(result) {\n  segmentation = result;\n}\n\nfunction createVideoTunnelEffect() {\n  // Capture the current video frame\n  tunnelBuffer.clear();\n  tunnelBuffer.image(video, 0, 0, width/2, height/4);\n  let personFrame = tunnelBuffer.get();\n  \n  // Clear the tunnel buffer for creating the effect\n  tunnelBuffer.clear();\n  \n  // Number of layers for the tunnel effect\n  const numLayers = 10;\n  const scaleStep = 0.1; // 20% reduction per layer\n  \n  // Draw the layers from back to front (smallest to largest)\n  for (let i = 0; i <= numLayers - 1; i++) {\n    // Calculate scaling for this layer (gets smaller with each step)\n    let scaleFactor = 1 - (i * scaleStep);\n    let imgW = width * scaleFactor;\n    let imgH = height * scaleFactor;\n    \n    // Center the image to create the tunnel effect\n    let offsetX = (width - imgW) / 4;\n    let offsetY = (height - imgH) / 8;\n    \n    // Draw the current layer to the tunnel buffer\n    tunnelBuffer.image(personFrame, offsetX, offsetY, imgW, imgH);\n  }\n  \n  // Get the tunnel effect\n  let tunnelEffect = tunnelBuffer.get();\n  \n  // Apply mask to show the tunnel effect only where the person is\n  tunnelEffect.loadPixels();\n  segmentation.mask.loadPixels();\n  personImage.loadPixels();\n  \n  for (let i = 0; i < personImage.pixels.length; i += 4) {\n    // If this is a foreground pixel (not white in the mask)\n    if (!(segmentation.mask.pixels[i] === 255 && \n          segmentation.mask.pixels[i + 1] === 255 && \n          segmentation.mask.pixels[i + 2] === 255)) {\n      // Copy the tunnel effect pixel to the person image\n      personImage.pixels[i] = tunnelEffect.pixels[i];\n      personImage.pixels[i + 1] = tunnelEffect.pixels[i + 1];\n      personImage.pixels[i + 2] = tunnelEffect.pixels[i + 2];\n      personImage.pixels[i + 3] = 255; // Full opacity\n    } else {\n      // Make this pixel transparent\n      personImage.pixels[i + 3] = 0;\n    }\n  }\n  \n  personImage.updatePixels();\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67d781a620172c39009b7c51",
        "createdAt": "2025-03-19T17:42:35.655Z",
        "updatedAt": "2025-03-19T17:42:35.655Z",
        "id": "67d781a620172c39009b7c51"
      },
      {
        "name": "images",
        "content": "",
        "children": [
          "67d781a620172c39009b7c3e",
          "67d781a620172c39009b7c3f",
          "67d781a620172c39009b7c40",
          "67d781a620172c39009b7c41",
          "67d781a620172c39009b7c42",
          "67d781a620172c39009b7c43",
          "67d781a620172c39009b7c44",
          "67d781a620172c39009b7c45",
          "67d781a620172c39009b7c46",
          "67d781a620172c39009b7c47",
          "67d781a620172c39009b7c48",
          "67d781a620172c39009b7c49",
          "67d781a620172c39009b7c4a",
          "67d781a620172c39009b7c4b",
          "67d781a620172c39009b7c4c",
          "67d781a620172c39009b7c4d",
          "67d781a620172c39009b7c4e",
          "67d781a620172c39009b7c4f"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d781a620172c39009b7c3d",
        "createdAt": "2025-03-19T17:42:35.655Z",
        "updatedAt": "2025-03-19T17:42:35.655Z",
        "id": "67d781a620172c39009b7c3d"
      },
      {
        "name": "3.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/b467bf63-f140-40e0-ba7a-1aa83cb1cc93.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d781a620172c39009b7c49",
        "createdAt": "2025-03-19T17:42:35.655Z",
        "updatedAt": "2025-03-19T17:42:35.655Z",
        "id": "67d781a620172c39009b7c49"
      },
      {
        "name": "1.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/a833555f-9bcc-4dfc-bea1-8caeb0ed644d.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d781a620172c39009b7c3e",
        "createdAt": "2025-03-19T17:42:35.655Z",
        "updatedAt": "2025-03-19T17:42:35.655Z",
        "id": "67d781a620172c39009b7c3e"
      },
      {
        "name": "2.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/b938bc4e-08a4-4cc8-9e15-57e83e263036.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d781a620172c39009b7c48",
        "createdAt": "2025-03-19T17:42:35.655Z",
        "updatedAt": "2025-03-19T17:42:35.655Z",
        "id": "67d781a620172c39009b7c48"
      },
      {
        "name": "4.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/9b6b81cf-81e4-4982-9003-7cc5d75c4c86.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d781a620172c39009b7c4a",
        "createdAt": "2025-03-19T17:42:35.655Z",
        "updatedAt": "2025-03-19T17:42:35.655Z",
        "id": "67d781a620172c39009b7c4a"
      },
      {
        "name": "5.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/07a06d70-a0c3-440d-a2ca-b23befcf960e.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d781a620172c39009b7c4b",
        "createdAt": "2025-03-19T17:42:35.655Z",
        "updatedAt": "2025-03-19T17:42:35.655Z",
        "id": "67d781a620172c39009b7c4b"
      },
      {
        "name": "15.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/a365860c-4696-495f-9162-646d87768c30.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d781a620172c39009b7c44",
        "createdAt": "2025-03-19T17:42:35.655Z",
        "updatedAt": "2025-03-19T17:42:35.655Z",
        "id": "67d781a620172c39009b7c44"
      },
      {
        "name": "16.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/1eeba834-20a1-47e8-a9c4-9eb0a788f7d0.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d781a620172c39009b7c45",
        "createdAt": "2025-03-19T17:42:35.655Z",
        "updatedAt": "2025-03-19T17:42:35.655Z",
        "id": "67d781a620172c39009b7c45"
      },
      {
        "name": "17.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/bd31d886-4ac4-41fe-8dc2-a23f65bf36a8.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d781a620172c39009b7c46",
        "createdAt": "2025-03-19T17:42:35.655Z",
        "updatedAt": "2025-03-19T17:42:35.655Z",
        "id": "67d781a620172c39009b7c46"
      },
      {
        "name": "7.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/42f87884-94f5-4543-b3f5-8bec75fd14b3.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d781a620172c39009b7c4d",
        "createdAt": "2025-03-19T17:42:35.655Z",
        "updatedAt": "2025-03-19T17:42:35.655Z",
        "id": "67d781a620172c39009b7c4d"
      },
      {
        "name": "6.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/ec3eb249-f588-435d-bbde-97722be67205.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d781a620172c39009b7c4c",
        "createdAt": "2025-03-19T17:42:35.655Z",
        "updatedAt": "2025-03-19T17:42:35.655Z",
        "id": "67d781a620172c39009b7c4c"
      },
      {
        "name": "8.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/4d4e3527-22ac-45bd-9cc2-b6ed01abdda9.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d781a620172c39009b7c4e",
        "createdAt": "2025-03-19T17:42:35.655Z",
        "updatedAt": "2025-03-19T17:42:35.655Z",
        "id": "67d781a620172c39009b7c4e"
      },
      {
        "name": "12.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/c2723f4c-5c0f-424b-b443-bf60bd9eafbe.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d781a620172c39009b7c41",
        "createdAt": "2025-03-19T17:42:35.655Z",
        "updatedAt": "2025-03-19T17:42:35.655Z",
        "id": "67d781a620172c39009b7c41"
      },
      {
        "name": "13.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/0cc2d3fb-7904-4771-924b-d3eca07f5cff.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d781a620172c39009b7c42",
        "createdAt": "2025-03-19T17:42:35.655Z",
        "updatedAt": "2025-03-19T17:42:35.655Z",
        "id": "67d781a620172c39009b7c42"
      },
      {
        "name": "14.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/d613476d-4d8a-4a9f-a644-14e90fff0070.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d781a620172c39009b7c43",
        "createdAt": "2025-03-19T17:42:35.655Z",
        "updatedAt": "2025-03-19T17:42:35.655Z",
        "id": "67d781a620172c39009b7c43"
      },
      {
        "name": "18.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/fd2790c5-48e3-4d53-a5c3-dcc200cb9f8d.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d781a620172c39009b7c47",
        "createdAt": "2025-03-19T17:42:35.655Z",
        "updatedAt": "2025-03-19T17:42:35.655Z",
        "id": "67d781a620172c39009b7c47"
      },
      {
        "name": "10.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/b7b3f810-e81b-4cc7-b7fe-6f42b8a1f212.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d781a620172c39009b7c3f",
        "createdAt": "2025-03-19T17:42:35.655Z",
        "updatedAt": "2025-03-19T17:42:35.655Z",
        "id": "67d781a620172c39009b7c3f"
      },
      {
        "name": "9.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/6e94e7fb-f747-44c8-b2ff-3f1df07ff435.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d781a620172c39009b7c4f",
        "createdAt": "2025-03-19T17:42:35.655Z",
        "updatedAt": "2025-03-19T17:42:35.655Z",
        "id": "67d781a620172c39009b7c4f"
      },
      {
        "name": "11.jpeg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/8dd782be-17d0-4b4a-809c-b57ebc6c77dd.jpeg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d781a620172c39009b7c40",
        "createdAt": "2025-03-19T17:42:35.655Z",
        "updatedAt": "2025-03-19T17:42:35.655Z",
        "id": "67d781a620172c39009b7c40"
      },
      {
        "name": "vanishing.js",
        "content": "// Body segmentation variables\nlet bodySegmentation;\nlet video;\nlet segmentation;\nlet personImage;\n\nlet options = {\n  maskType: \"parts\",\n};\n\nlet portals = [];\nlet layeredImage; // off-screen graphics buffer for layering\n\nfunction preload() {\n  let images = 18;\n  for (let i = 1; i < images + 1; i++) {\n    let path = 'images/' + String(i) + '.jpeg';\n    loadImage(path, \n      img => {\n        portals.push(img);\n      }, \n      err => console.error(\"Failed to load:\", path, err)\n    );\n  }\n\n  bodySegmentation = ml5.bodySegmentation(\"BodyPix\", options);\n}\n\nfunction setup() {\n  createCanvas(640, 480);\n  // Create the video\n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n\n  bodySegmentation.detectStart(video, gotResults);\n\n  // Create an image for segmented output (if needed)\n  personImage = createImage(video.width, video.height);\n  \n  // Create a graphics buffer to draw our layered effect\n  layeredImage = createGraphics(width, height);\n}\n\nvar ii = 0;\n\nfunction draw() {\n  background(0);\n  \n  // Draw the background image normally\n  image(portals[2], 0, 0, 640, 480);\n  \n  // Display the segmented mask filled with layered images\n  if (segmentation) {\n    // Clear the off-screen graphics\n    layeredImage.clear();\n    \n    // Number of layers and scale decrement\n    let numLayers = 5;\n    // Here we assume the vanishing point is the center; adjust offsets if needed.\n    for (let j = 0; j < numLayers; j++) {\n      // Each layer is drawn at a decreased scale\n      let scaleFactor = 1 - j * 0.15; // adjust 0.15 to change the decrement\n      let imgW = width * scaleFactor;\n      let imgH = height * scaleFactor;\n      // Center the image so they converge toward the center (vanishing point)\n      let offsetX = (width - imgW) / 2;\n      let offsetY = (height - imgH) / 2;\n      \n      layeredImage.image(portals[2], offsetX, offsetY, imgW, imgH);\n    }\n    \n    // Get the layered composition as a p5.Image so we can apply the mask\n    let layeredImg = layeredImage.get();\n    layeredImg.mask(segmentation.mask);\n    \n    // Draw the masked layered image on top\n    image(layeredImg, 0, 0, width, height);\n  }\n}\n\n// callback function for body segmentation\nfunction gotResults(result) {\n  segmentation = result;\n}\n\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d781a620172c39009b7c52",
        "createdAt": "2025-03-19T17:42:35.655Z",
        "updatedAt": "2025-03-19T17:42:35.655Z",
        "id": "67d781a620172c39009b7c52"
      },
      {
        "name": "rippleMaskImg.js",
        "content": "// Body segmentation variables\nlet bodySegmentation;\nlet video;\nlet segmentation;\nlet personImage;\n\nlet options = {\n  maskType: \"parts\",\n};\n\nlet portals = [];\nlet fishEye;\n\nfunction preload() {\n  let images = 3;\n  for (let i = 1; i <= images; i++) {\n    let path = 'images/' + i + '.jpeg';\n    loadImage(path, img => {\n      img.resize(640, 480);\n      portals.push(img);\n    });\n  }\n\n  bodySegmentation = ml5.bodySegmentation(\"BodyPix\", options);\n}\n\nfunction setup() {\n  createCanvas(640, 480);\n  \n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n\n  bodySegmentation.detectStart(video, gotResults);\n\n  personImage = createImage(video.width, video.height);\n  \n  // **Create fisheye buffer**\n  fishEye = createGraphics(video.width, video.height);\n  \n  frameRate(30);\n}\n\nfunction draw() {\n  background(0);\n  \n  // **Apply fisheye effect every frame**\n  applyFisheyeEffect(portals[2], fishEye, width / 2, height / 2);\n  \n  // **Step 1: Display the fisheye-processed video**\n  image(portals[2], 0, 0, width, height);\n  //image(fishEye, 0, 0, width*2, height*4);\n\n  if (segmentation) {\n    // **Step 2: Apply the segmentation mask**\n    push();\n    copyForegroundPixels(fishEye, segmentation.mask, personImage);\n    pop();\n    image(personImage, 0, 0, width, height);\n  }\n}\n\n// Callback for body segmentation\nfunction gotResults(result) {\n  segmentation = result;\n}\n\n// **Optimized function for copying pixels based on segmentation**\nfunction copyForegroundPixels(imgSource, imgMask, imgResult) {\n  imgSource.loadPixels();\n  imgMask.loadPixels();\n  imgResult.loadPixels();\n\n  let totalPixels = imgResult.pixels.length;\n  const imgChannels = 4;\n\n  for (let i = 0; i < totalPixels; i += imgChannels) {\n    let maskR = imgMask.pixels[i];\n    \n    if (maskR === 255) {\n      imgResult.pixels[i + 3] = 0; // Transparent\n    } else {\n      imgResult.pixels[i] = imgSource.pixels[i];\n      imgResult.pixels[i + 1] = imgSource.pixels[i + 1];\n      imgResult.pixels[i + 2] = imgSource.pixels[i + 2];\n      imgResult.pixels[i + 3] = 255;\n    }\n  }\n  \n  imgResult.updatePixels();\n}\n\n// **Optimized fisheye function (now applied every frame)**\nfunction applyFisheyeEffect(input, output, centerX, centerY) {\n  input.loadPixels(); // **Get the latest frame from the video**\n  output.loadPixels();\n  \n  let maxDistance = dist(centerX, centerY, 0, 0);\n  let tempPixels = new Uint8ClampedArray(output.pixels); // Faster array processing\n\n  for (let y = 0; y < input.height; y++) {\n    for (let x = 0; x < input.width; x++) {\n      let dx = x - centerX;\n      let dy = y - centerY;\n      let distance = sqrt(dx * dx + dy * dy);\n      let angle = atan2(dy, dx);\n\n      // **Apply Centered Ripple Effect**\n      distance = distance + 20 * sin(distance / 2);\n\n      let tempX = floor(centerX + cos(angle) * distance);\n      let tempY = floor(centerY + sin(angle) * distance);\n\n      if (tempX >= 0 && tempX < input.width && tempY >= 0 && tempY < input.height) {\n        let srcIndex = (tempY * input.width + tempX) * 4;\n        let dstIndex = (y * input.width + x) * 4;\n        \n        tempPixels[dstIndex] = input.pixels[srcIndex];\n        tempPixels[dstIndex + 1] = input.pixels[srcIndex + 1];\n        tempPixels[dstIndex + 2] = input.pixels[srcIndex + 2];\n        tempPixels[dstIndex + 3] = 255;\n      }\n    }\n  }\n\n  output.pixels.set(tempPixels);\n  output.updatePixels();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67dafc41c0776ec34d3d4185",
        "createdAt": "2025-03-19T17:42:35.655Z",
        "updatedAt": "2025-03-19T17:42:35.655Z",
        "id": "67dafc41c0776ec34d3d4185"
      }
    ],
    "createdAt": "2025-03-17T01:57:59.031Z",
    "updatedAt": "2025-03-19T17:42:35.655Z",
    "id": "PC3hnf8UY"
  },
  {
    "_id": "qfQDHSGA1",
    "name": "preLoader",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "679c0c92217741bdeebba884",
          "679c0c92217741bdeebba885",
          "679c0c92217741bdeebba886"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "679c0c92217741bdeebba883",
        "createdAt": "2025-02-01T18:39:29.099Z",
        "updatedAt": "2025-02-01T18:39:29.099Z",
        "id": "679c0c92217741bdeebba883"
      },
      {
        "name": "sketch.js",
        "content": "let angle = 0;\nlet cval = 0;\nlet direction = 1;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n}\n\nfunction draw() {\n  blendMode(BLEND);\n  background(0, 10);\n  blendMode(DIFFERENCE);\n\n  let c1 = color(cval, 0, 255 - cval);\n  let c2 = color(255 - cval, 0, cval);\n\n  // Update color over time\n  // Update cval smoothly between 0 and 255\n\n  cval += direction;\n  if (cval >= 255 || cval <= 0) {\n    direction *= -1; // Reverse direction when hitting limits\n  }\n\n  let minDimension = min(width, height);\n  let spacing = minDimension / 8;\n  let x = width / 2;\n  let y = height / 2;\n  let amount1 = sin(angle) / 2 + 0.6;\n  let amount2 = cos(angle) / 2 + 0.6;\n\n  let thickness = (minDimension / 20) * amount1;\n  strokeWeight(thickness);\n\n  push();\n  stroke(255 - cval, 0, cval);\n  fill(cval, 255 - cval, 0);\n  translate(x, y); // rotate about center of canvas\n  rectMode(CENTER); // rotate square around its center point\n  rotate(angle); // clockwise\n  rect(0, 0, spacing * 3 * amount1, spacing * 3 * amount1);\n  pop();\n\n  push();\n  translate(x, y); // rotate about center of canvas\n  rectMode(CENTER);\n  stroke(255 - cval, 0, cval);\n  fill(cval, 255 - cval, 0);\n  // stroke(cval, 0, 255 - cval);\n  // fill(255 - cval, 0, cval);\n  rotate(-angle); // counterclockwise\n  rect(0, 0, spacing * 3 * amount2, spacing * 3 * amount2);\n  pop();\n\n  angle += 0.03; // set speed of rotation\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "679c0c92217741bdeebba885",
        "createdAt": "2025-02-01T18:39:29.099Z",
        "updatedAt": "2025-02-01T18:39:29.099Z",
        "id": "679c0c92217741bdeebba885"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679c0c92217741bdeebba884",
        "createdAt": "2025-02-01T18:39:29.099Z",
        "updatedAt": "2025-02-01T18:39:29.099Z",
        "id": "679c0c92217741bdeebba884"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "679c0c92217741bdeebba886",
        "createdAt": "2025-02-01T18:39:29.099Z",
        "updatedAt": "2025-02-01T18:39:29.099Z",
        "id": "679c0c92217741bdeebba886"
      }
    ],
    "createdAt": "2025-01-30T23:34:42.545Z",
    "updatedAt": "2025-02-01T18:39:29.099Z",
    "id": "qfQDHSGA1"
  },
  {
    "_id": "2_Fhz_WKP",
    "name": "rain copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67313ed3b8e109f2fbeb5a22",
          "67313ed3b8e109f2fbeb5a23",
          "67313ed3b8e109f2fbeb5a24"
        ],
        "fileType": "folder",
        "_id": "67313ed3b8e109f2fbeb5a21",
        "createdAt": "2024-11-10T23:16:40.476Z",
        "updatedAt": "2024-11-10T23:16:40.476Z",
        "id": "67313ed3b8e109f2fbeb5a21"
      },
      {
        "name": "sketch.js",
        "content": "var drop = []\n\nfunction setup() {\n  createCanvas(400, 400);\n  for(var i = 0; i < 200; i++) {\n    drop[i] = new Drop();\n}\n}\n\nfunction draw() {\n  background(0);\n  for(var i = 0; i < 200; i++) {\n  drop[i].show();\n  drop[i].update();\n}\n}\n\nfunction Drop() {\n  this.x = random(0, width);\n  this.y = random(0, -height);\n  \n  this.show = function() {\n    noStroke();\n    fill(255);\n    ellipse(this.x, this.y, random(1, 5), random(1, 5));   \n  }\n  this.update = function() {\n    this.speed = random(5, 10);\n    this.gravity = 1.05;\n    this.y = this.y + this.speed*this.gravity;  \n    \n    if (this.y > height) {\n      this.y = random(0, -height);\n      this.gravity = 0;\n}\n}\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67313ed3b8e109f2fbeb5a23",
        "createdAt": "2024-11-10T23:16:40.476Z",
        "updatedAt": "2024-11-10T23:16:40.476Z",
        "id": "67313ed3b8e109f2fbeb5a23"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "67313ed3b8e109f2fbeb5a22",
        "createdAt": "2024-11-10T23:16:40.476Z",
        "updatedAt": "2024-11-10T23:16:40.476Z",
        "id": "67313ed3b8e109f2fbeb5a22"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "67313ed3b8e109f2fbeb5a24",
        "createdAt": "2024-11-10T23:16:40.476Z",
        "updatedAt": "2024-11-10T23:16:40.476Z",
        "id": "67313ed3b8e109f2fbeb5a24"
      }
    ],
    "createdAt": "2024-11-10T23:16:35.749Z",
    "updatedAt": "2024-11-10T23:16:40.476Z",
    "id": "2_Fhz_WKP"
  },
  {
    "_id": "WNfX_FHZd",
    "name": "random-str",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67461e01719eb60b013caaf7",
          "67461e01719eb60b013caaf8",
          "67461e01719eb60b013caaf9"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67461e01719eb60b013caaf6",
        "createdAt": "2024-11-26T20:03:34.282Z",
        "updatedAt": "2024-11-26T20:03:34.282Z",
        "id": "67461e01719eb60b013caaf6"
      },
      {
        "name": "sketch.js",
        "content": "let str = \"I wish to wash my Irish wristwatch.\";\n\nlet index = 0;\n\nfunction setup() {\n  createCanvas(400, 400);\n  textAlign(CENTER);\n  textFont(\"Courier New\", 36);\n  textStyle(ITALIC);\n  background(random(255), random(255), random(255));\n}\n\nfunction draw() {\n  for (index = 0; index <= str.length; index++) {\n    let ch = str.charAt(index);\n    let x = random(20, width - 20);\n    let y = random(20, height - 20);\n    fill(random(0, 255), random(0, 255), random(0, 255));\n    text(ch, x, y);\n  }\n  noLoop();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67461e01719eb60b013caaf8",
        "createdAt": "2024-11-26T20:03:34.282Z",
        "updatedAt": "2024-11-26T20:03:34.282Z",
        "id": "67461e01719eb60b013caaf8"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67461e01719eb60b013caaf7",
        "createdAt": "2024-11-26T20:03:34.282Z",
        "updatedAt": "2024-11-26T20:03:34.282Z",
        "id": "67461e01719eb60b013caaf7"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67461e01719eb60b013caaf9",
        "createdAt": "2024-11-26T20:03:34.282Z",
        "updatedAt": "2024-11-26T20:03:34.282Z",
        "id": "67461e01719eb60b013caaf9"
      }
    ],
    "createdAt": "2024-11-26T19:14:09.332Z",
    "updatedAt": "2024-11-26T20:03:34.282Z",
    "id": "WNfX_FHZd"
  },
  {
    "_id": "KtYsjlJZ4",
    "name": "rect()",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66e316c7d2613a626e52f6aa",
          "66e316c7d2613a626e52f6ab",
          "66e316c7d2613a626e52f6ac"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66e316c7d2613a626e52f6a9",
        "createdAt": "2024-09-12T17:29:43.793Z",
        "updatedAt": "2024-09-12T17:29:43.793Z",
        "id": "66e316c7d2613a626e52f6a9"
      },
      {
        "name": "sketch.js",
        "content": "// function mouseMoved() {\n//   console.log(`Mouse X: ${mouseX}, Mouse Y: ${mouseY}`);\n// }\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  // rectangle arguments\n  rect(height/3,width/4,width/3,height/4, 10);\n  rect(mouseX,mouseY,mouseY,mouseX, 10, 0, 10,0);\n}\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66e316c7d2613a626e52f6ab",
        "createdAt": "2024-09-12T17:29:43.793Z",
        "updatedAt": "2024-09-12T17:29:43.793Z",
        "id": "66e316c7d2613a626e52f6ab"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66e316c7d2613a626e52f6aa",
        "createdAt": "2024-09-12T17:29:43.793Z",
        "updatedAt": "2024-09-12T17:29:43.793Z",
        "id": "66e316c7d2613a626e52f6aa"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66e316c7d2613a626e52f6ac",
        "createdAt": "2024-09-12T17:29:43.793Z",
        "updatedAt": "2024-09-12T17:29:43.793Z",
        "id": "66e316c7d2613a626e52f6ac"
      }
    ],
    "createdAt": "2024-09-12T16:28:55.546Z",
    "updatedAt": "2024-09-12T17:29:43.793Z",
    "id": "KtYsjlJZ4"
  },
  {
    "_id": "YX9oyQWjL",
    "name": "rect()2",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66e3200bd2613a626e52f6ae",
          "66e3200bd2613a626e52f6af",
          "66e3200bd2613a626e52f6b0"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66e3200bd2613a626e52f6ad",
        "createdAt": "2024-09-12T17:13:07.259Z",
        "updatedAt": "2024-09-12T17:13:07.259Z",
        "id": "66e3200bd2613a626e52f6ad"
      },
      {
        "name": "sketch.js",
        "content": "// function mouseMoved() {\n//   console.log(`Mouse X: ${mouseX}, Mouse Y: ${mouseY}`);\n// }\n\nfunction setup() {\n  createCanvas(200, 300);\n  rectMode(CENTER);\n}\n\nfunction draw() {\n  background(1, 9, 61);\n  fill(255);\n  rect(width/2,height/2,width/2,height/2);\n}\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66e3200bd2613a626e52f6af",
        "createdAt": "2024-09-12T17:13:07.259Z",
        "updatedAt": "2024-09-12T17:13:07.259Z",
        "id": "66e3200bd2613a626e52f6af"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66e3200bd2613a626e52f6ae",
        "createdAt": "2024-09-12T17:13:07.259Z",
        "updatedAt": "2024-09-12T17:13:07.259Z",
        "id": "66e3200bd2613a626e52f6ae"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66e3200bd2613a626e52f6b0",
        "createdAt": "2024-09-12T17:13:07.259Z",
        "updatedAt": "2024-09-12T17:13:07.259Z",
        "id": "66e3200bd2613a626e52f6b0"
      }
    ],
    "createdAt": "2024-09-12T17:08:27.941Z",
    "updatedAt": "2024-09-12T17:13:07.259Z",
    "id": "YX9oyQWjL"
  },
  {
    "_id": "r77y6dyPt",
    "name": "rectlerp",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66e34ef6d2613a626e52f6be",
          "66e34ef6d2613a626e52f6bf",
          "66e34ef6d2613a626e52f6c0"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66e34ef6d2613a626e52f6bd",
        "createdAt": "2024-09-12T20:48:30.808Z",
        "updatedAt": "2024-09-12T20:48:30.808Z",
        "id": "66e34ef6d2613a626e52f6bd"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400,400);\n}\n\n\nfunction draw() {\n  background(1, 9, 61);\n  translate(width/2,height/2)\n  \n  stroke(255);\n  \n  let x = width/4\n  let y = height/4\n\n  line(x,-y,x,y);\n  line(-x,-y,-x,y);\n  line(-x,y,x,y);\n  line(-x,-y,x,-y);\n\n  \n  x = lerp(x, mouseX, 0.01);\n  y = lerp(y, mouseY, 0.01);\n}\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66e34ef6d2613a626e52f6bf",
        "createdAt": "2024-09-12T20:48:30.808Z",
        "updatedAt": "2024-09-12T20:48:30.808Z",
        "id": "66e34ef6d2613a626e52f6bf"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66e34ef6d2613a626e52f6be",
        "createdAt": "2024-09-12T20:48:30.808Z",
        "updatedAt": "2024-09-12T20:48:30.808Z",
        "id": "66e34ef6d2613a626e52f6be"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66e34ef6d2613a626e52f6c0",
        "createdAt": "2024-09-12T20:48:30.808Z",
        "updatedAt": "2024-09-12T20:48:30.808Z",
        "id": "66e34ef6d2613a626e52f6c0"
      }
    ],
    "createdAt": "2024-09-12T20:28:38.513Z",
    "updatedAt": "2024-09-12T20:48:30.808Z",
    "id": "r77y6dyPt"
  },
  {
    "_id": "-NxzJ6m2J",
    "name": "redcanvas",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6722adc4294f2d2a6dc906c8",
          "6722adc4294f2d2a6dc906c7",
          "6722adc4294f2d2a6dc906c9"
        ],
        "fileType": "folder",
        "_id": "6722adc4294f2d2a6dc906ca",
        "createdAt": "2024-10-30T22:10:51.235Z",
        "updatedAt": "2024-10-30T22:10:51.235Z",
        "id": "6722adc4294f2d2a6dc906ca"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(200, 200);\n}\n\nfunction draw() {\n  for (x=0;x<=200;x++) {\n    for (y=0;y<200;y++){\n      stroke(255,0,0);\n      point(x,y);\n    }\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6722adc4294f2d2a6dc906c7",
        "createdAt": "2024-10-30T22:10:51.235Z",
        "updatedAt": "2024-10-30T22:10:51.235Z",
        "id": "6722adc4294f2d2a6dc906c7"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6722adc4294f2d2a6dc906c8",
        "createdAt": "2024-10-30T22:10:51.235Z",
        "updatedAt": "2024-10-30T22:10:51.235Z",
        "id": "6722adc4294f2d2a6dc906c8"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6722adc4294f2d2a6dc906c9",
        "createdAt": "2024-10-30T22:10:51.235Z",
        "updatedAt": "2024-10-30T22:10:51.235Z",
        "id": "6722adc4294f2d2a6dc906c9"
      }
    ],
    "updatedAt": "2024-10-30T22:10:51.235Z",
    "createdAt": "2024-10-30T22:10:41.171Z",
    "id": "-NxzJ6m2J"
  },
  {
    "_id": "_PdpAScdq",
    "name": "RedColumns",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66ec80d42633a374ccc8f402",
          "66ec80d42633a374ccc8f401",
          "66ec80d42633a374ccc8f403"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66ec80d42633a374ccc8f404",
        "createdAt": "2024-09-30T18:26:18.184Z",
        "updatedAt": "2024-09-30T18:26:18.184Z",
        "id": "66ec80d42633a374ccc8f404"
      },
      {
        "name": "sketch.js",
        "content": "let W;\nlet num = 20;\nlet mycolor = \"red\";\nlet isRed = false;\nlet lastCol = -1;\n\nfunction setup() {\n  createCanvas(400, 400);\n  W = width / num;\n}\n\nfunction draw() {\n  background(255);\n  for (i = 0; i < num; i++) {\n    let xpos = W * i;\n\n    if (mouseX > xpos && mouseX < xpos + W) {\n      \n      if (i == 0) {\n        if (lastCol!=0){\n        isRed = !isRed;\n          }\n      } else {\n        fill(mycolor)\n      }\n      lastCol=i;\n    } else {\n      fill('white')\n    }\n      \n      \n      \n      if ((i==0) && (isRed)){\n        fill(mycolor)\n      }\n      // fill(mycolor);\n      rect(xpos, 0, W, height);\n\n    }\n  \n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66ec80d42633a374ccc8f401",
        "createdAt": "2024-09-30T18:26:18.184Z",
        "updatedAt": "2024-09-30T18:26:18.184Z",
        "id": "66ec80d42633a374ccc8f401"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66ec80d42633a374ccc8f402",
        "createdAt": "2024-09-30T18:26:18.184Z",
        "updatedAt": "2024-09-30T18:26:18.184Z",
        "id": "66ec80d42633a374ccc8f402"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66ec80d42633a374ccc8f403",
        "createdAt": "2024-09-30T18:26:18.184Z",
        "updatedAt": "2024-09-30T18:26:18.184Z",
        "id": "66ec80d42633a374ccc8f403"
      }
    ],
    "updatedAt": "2024-09-30T18:26:18.184Z",
    "createdAt": "2024-09-19T20:39:05.805Z",
    "id": "_PdpAScdq"
  },
  {
    "_id": "nlQM-9nV_",
    "name": "RedColumns-2",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66ec8c462633a374ccc8f406",
          "66ec8c462633a374ccc8f407",
          "66ec8c462633a374ccc8f408"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66ec8c462633a374ccc8f405",
        "createdAt": "2024-09-26T16:49:31.301Z",
        "updatedAt": "2024-09-26T16:49:31.301Z",
        "id": "66ec8c462633a374ccc8f405"
      },
      {
        "name": "sketch.js",
        "content": "\nlet num = 3;\nlet c1;\nlet c2;\nlet c3;\nlet mycolor = \"red\";\nlet mycolor2 = \"white\";\nlet isRed = false;\n\nfunction setup() {\n  createCanvas(400, 400);\n  W = width / num;\n}\n\nfunction draw() {\n  background(255);\n  // fill('white');\n  if (mouseX > W && mouseX < 2*W && isRed == false) {\n      fill('red');\n    isRed == true\n    }\n  else {\n    fill('white');\n    isRed == false\n  }\n    \n  // c1 = rect(0,0,W,height);\n  c2 = rect(width/num,0,W,height);\n  // c3 = rect((2*width)/num,0,W,height);\n\n    \n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66ec8c462633a374ccc8f407",
        "createdAt": "2024-09-26T16:49:31.301Z",
        "updatedAt": "2024-09-26T16:49:31.301Z",
        "id": "66ec8c462633a374ccc8f407"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66ec8c462633a374ccc8f406",
        "createdAt": "2024-09-26T16:49:31.301Z",
        "updatedAt": "2024-09-26T16:49:31.301Z",
        "id": "66ec8c462633a374ccc8f406"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66ec8c462633a374ccc8f408",
        "createdAt": "2024-09-26T16:49:31.301Z",
        "updatedAt": "2024-09-26T16:49:31.301Z",
        "id": "66ec8c462633a374ccc8f408"
      }
    ],
    "createdAt": "2024-09-19T20:40:38.612Z",
    "updatedAt": "2024-09-26T16:49:31.301Z",
    "id": "nlQM-9nV_"
  },
  {
    "_id": "MfFKH-UOC",
    "name": "RGB Mixer copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67b4a0fea041ae8f09aa6826",
          "67b4a0fea041ae8f09aa6827",
          "67b4a0fea041ae8f09aa6828"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67b4a0fea041ae8f09aa6825",
        "createdAt": "2024-05-03T00:17:39.326Z",
        "updatedAt": "2024-05-03T00:17:39.326Z",
        "id": "67b4a0fea041ae8f09aa6825"
      },
      {
        "name": "sketch.js",
        "content": "let sliders = [];\n\nfunction setup() {\n  createCanvas(600, 600);\n\n  let colArgs = [\n    color(255, 0, 0), \n    color(0, 255, 0), \n    color(0, 0, 255)\n  ];\n\n  for (let i = 0; i < 3; i++) {\n    sliders[i] = new Slider(colArgs[i], i);\n  }\n}\n\nfunction draw() {\n  let r = sliders[0].val;\n  let g = sliders[1].val;\n  let b = sliders[2].val;\n  \n  background(r, g, b);\n\n  for (let slider of sliders) {\n    slider.display();\n\n    if (mouseX > slider.x && mouseX < slider.x + width / 3) {\n      let mappedY = map(mouseY, 0, height, height, 0);\n      slider.h = mappedY;\n      cursor(HAND);\n    }\n  }\n}\n\nclass Slider {\n  constructor(_color, _num) {\n    this.num = _num;\n    this.color = _color;\n    this.x = (width / 3) * _num;\n    this.h = 20;\n    this.val = 0;\n  }\n\n  display() {\n    noStroke();\n    fill(this.color);\n    rect(this.x, height, width / 3, -this.h);\n\n    fill(255);\n    textSize(20);\n    textAlign(CENTER);\n    this.val = floor(map(this.h, 0, height, 0, 255, true));\n    text(this.val, this.x + width / 6, 560);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67b4a0fea041ae8f09aa6827",
        "createdAt": "2024-05-03T00:17:39.326Z",
        "updatedAt": "2024-05-03T00:17:39.326Z",
        "id": "67b4a0fea041ae8f09aa6827"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b4a0fea041ae8f09aa6826",
        "createdAt": "2024-05-03T00:17:39.326Z",
        "updatedAt": "2024-05-03T00:17:39.326Z",
        "id": "67b4a0fea041ae8f09aa6826"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67b4a0fea041ae8f09aa6828",
        "createdAt": "2024-05-03T00:17:39.326Z",
        "updatedAt": "2024-05-03T00:17:39.326Z",
        "id": "67b4a0fea041ae8f09aa6828"
      }
    ],
    "createdAt": "2025-02-18T15:02:22.174Z",
    "updatedAt": "2025-02-18T15:02:22.174Z",
    "id": "MfFKH-UOC"
  },
  {
    "_id": "6jYUZ6uAI",
    "name": "rippleEffect",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67313f1ab9ced8ab3dd5a8a5",
          "67313f1ab9ced8ab3dd5a8a4",
          "67313f1ab9ced8ab3dd5a8a6"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67313f1ab9ced8ab3dd5a8a7",
        "createdAt": "2024-11-10T23:48:11.457Z",
        "updatedAt": "2024-11-10T23:48:11.457Z",
        "id": "67313f1ab9ced8ab3dd5a8a7"
      },
      {
        "name": "sketch.js",
        "content": "let goRipple = 0;\nlet circleX;\nlet circleY;\nlet circleSize = 0;\nlet opacity = 255;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  noFill();\n  strokeWeight(5);\n  circleX = width / 2;\n  circleY = height / 2;\n  // circleSize = 0;\n}\n\nfunction draw() {\n  background(0);\n\n  myRipple();\n}\n\nfunction mousePressed() {\n  circleX = random(0, windowWidth);\n  circleY = random(0, windowHeight);\n  circleSize = 0;\n  opacity = 255;\n}\n\nfunction myRipple() {\n  // if (goRipple == 1) {\n  circleSize += 10;\n  opacity -= 5;\n\n  stroke(random(0, 255), 0, 255, opacity);\n  circle(circleX, circleY, circleSize);\n  circle(circleX, circleY, circleSize * 0.75);\n  circle(circleX, circleY, circleSize * 0.5);\n  // }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67313f1ab9ced8ab3dd5a8a4",
        "createdAt": "2024-11-10T23:48:11.457Z",
        "updatedAt": "2024-11-10T23:48:11.457Z",
        "id": "67313f1ab9ced8ab3dd5a8a4"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67313f1ab9ced8ab3dd5a8a5",
        "createdAt": "2024-11-10T23:48:11.457Z",
        "updatedAt": "2024-11-10T23:48:11.457Z",
        "id": "67313f1ab9ced8ab3dd5a8a5"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67313f1ab9ced8ab3dd5a8a6",
        "createdAt": "2024-11-10T23:48:11.457Z",
        "updatedAt": "2024-11-10T23:48:11.457Z",
        "id": "67313f1ab9ced8ab3dd5a8a6"
      }
    ],
    "updatedAt": "2024-11-10T23:48:11.457Z",
    "createdAt": "2024-11-10T23:39:28.693Z",
    "id": "6jYUZ6uAI"
  },
  {
    "_id": "19tH6xg5v",
    "name": "rippleMask",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67d973deed53e7246a34571c",
          "67d973deed53e7246a34571e"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d973deed53e7246a345707",
        "createdAt": "2025-03-20T00:06:49.411Z",
        "updatedAt": "2025-03-20T00:06:49.411Z",
        "id": "67d973deed53e7246a345707"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ml5.js bodySegmentation Parts Example</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.4/p5.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@1/dist/ml5.min.js\"></script>\n  </head>\n  <body>\n    <script src=\"rippleMask.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d973deed53e7246a34571c",
        "createdAt": "2025-03-20T00:06:49.411Z",
        "updatedAt": "2025-03-20T00:06:49.411Z",
        "id": "67d973deed53e7246a34571c"
      },
      {
        "name": "rippleMask.js",
        "content": "let bodySegmentation;\nlet video;\nlet segmentation;\nlet personImage;\n\nlet options = {\n  maskType: \"person\",\n};\n\nlet portals = [];\nlet fishEye;\n\nfunction preload() {\n  bodySegmentation = ml5.bodySegmentation(\"SelfieSegmentation\", options);\n}\n\nfunction setup() {\n  createCanvas(640, 480);\n\n  video = createCapture(VIDEO);\n  video.size(640, 480);\n  video.hide();\n\n  bodySegmentation.detectStart(video, gotResults);\n\n  personImage = createImage(video.width, video.height);\n  fishEye1 = createGraphics(video.width, video.height);\n  fishEye2 = createGraphics(video.width, video.height);\n\n  frameRate(30);\n}\n\nfunction draw() {\n  background(0);\n\n  if (segmentation) {\n    applyAnimatedFisheyeEffect(video, fishEye1, width / 2, height / 2);\n\n    translate(width, 0);\n    scale(-1, 1);\n\n    image(fishEye1, 0, 0, width * 2, height * 4);\n    video.mask(segmentation.mask);\n    image(video, 0, 0);\n  }\n}\n\n// Callback for body segmentation\nfunction gotResults(result) {\n  segmentation = result;\n}\n\n// Animated Fisheye Effect\nfunction applyAnimatedFisheyeEffect(input, output, centerX, centerY) {\n  input.loadPixels();\n  output.loadPixels();\n\n  let maxDistance = dist(centerX, centerY, 0, 0);\n  let tempPixels = new Uint8ClampedArray(output.pixels);\n\n  let time = frameCount / 10; // **Animate the ripple effect over time**\n\n  for (let y = 0; y < input.height; y++) {\n    for (let x = 0; x < input.width; x++) {\n      let dx = x - centerX;\n      let dy = y - centerY;\n      let distance = sqrt(dx * dx + dy * dy);\n      let angle = atan2(dy, dx);\n\n      // **Animate the ripple effect**\n      distance = distance + 100 * sin(distance / 10 + time); // **Time-based movement**\n\n      let tempX = floor(centerX + cos(angle) * distance);\n      let tempY = floor(centerY + sin(angle) * distance);\n\n      if (\n        tempX >= 0 &&\n        tempX < input.width &&\n        tempY >= 0 &&\n        tempY < input.height\n      ) {\n        let srcIndex = (tempY * input.width + tempX) * 4;\n        let dstIndex = (y * input.width + x) * 4;\n\n        tempPixels[dstIndex] = input.pixels[srcIndex];\n        tempPixels[dstIndex + 1] = input.pixels[srcIndex + 1];\n        tempPixels[dstIndex + 2] = input.pixels[srcIndex + 2];\n        tempPixels[dstIndex + 3] = 255;\n      }\n    }\n  }\n\n  output.pixels.set(tempPixels);\n  output.updatePixels();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67d973deed53e7246a34571e",
        "createdAt": "2025-03-20T00:06:49.411Z",
        "updatedAt": "2025-03-20T00:06:49.411Z",
        "id": "67d973deed53e7246a34571e"
      }
    ],
    "createdAt": "2025-03-18T13:23:43.769Z",
    "updatedAt": "2025-03-20T00:06:49.411Z",
    "id": "19tH6xg5v"
  },
  {
    "_id": "ubcBM2GOq",
    "name": "ripplewaveinspo_SKYSEO",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66fec75a717a00527b84be6a",
          "66fec75a717a00527b84be6b",
          "66fec75a717a00527b84be6c"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66fec75a717a00527b84be69",
        "createdAt": "2024-10-22T12:58:22.635Z",
        "updatedAt": "2024-10-22T12:58:22.635Z",
        "id": "66fec75a717a00527b84be69"
      },
      {
        "name": "sketch.js",
        "content": "let num = 25;\nlet dim;\nlet speed = 2;\nlet size;\nlet frequency = 10;\n\nlet margin = 30;\n\nfunction setup() {\n  createCanvas(500, 500);\n  size = (width - margin * 2) / num;\n  angleMode(DEGREES);\n  rectMode(CENTER);\n}\n\nfunction draw() {\n  background(0);\n  for (let i = 0; i < num; i++) {\n    for (let j = 0; j < num; j++) {\n      let x = margin + size / 2 + i * size;\n      let y = margin + size / 2 + j * size;\n\n      f =\n        sin(-frameCount *2* speed + dist(250, 250, x, y) * frequency) *\n          speed +\n        cos(-frameCount * 2*speed);\n      noFill();\n      strokeWeight(2);\n      stroke(dist(250,250, x, y), j * 2, 255);\n      rect(x, y, f*size/2);\n      circle(x, y, (f * size) / 2);\n\n    }\n  }\n}\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66fec75a717a00527b84be6b",
        "createdAt": "2024-10-22T12:58:22.635Z",
        "updatedAt": "2024-10-22T12:58:22.635Z",
        "id": "66fec75a717a00527b84be6b"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fec75a717a00527b84be6a",
        "createdAt": "2024-10-22T12:58:22.635Z",
        "updatedAt": "2024-10-22T12:58:22.635Z",
        "id": "66fec75a717a00527b84be6a"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66fec75a717a00527b84be6c",
        "createdAt": "2024-10-22T12:58:22.635Z",
        "updatedAt": "2024-10-22T12:58:22.635Z",
        "id": "66fec75a717a00527b84be6c"
      }
    ],
    "createdAt": "2024-10-03T16:33:30.353Z",
    "updatedAt": "2024-10-22T12:58:22.635Z",
    "id": "ubcBM2GOq"
  },
  {
    "_id": "hWTwcw7td",
    "name": "Rorshach Test",
    "updatedAt": "2024-04-22T15:24:31.430Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "661ffbe755f6fb1b59bf235c",
          "661ffbe755f6fb1b59bf235b",
          "661ffbe755f6fb1b59bf235d"
        ],
        "fileType": "folder",
        "_id": "661ffbe755f6fb1b59bf235e",
        "createdAt": "2024-04-22T15:24:31.430Z",
        "updatedAt": "2024-04-22T15:24:31.430Z",
        "isSelectedFile": false,
        "id": "661ffbe755f6fb1b59bf235e"
      },
      {
        "name": "sketch.js",
        "content": "/**\n * form mophing process by connected random agents\n *\n * MOUSE\n * click               : start a new circle\n * position x/y        : direction of floating\n *\n * KEYS\n * 1-2                 : fill styles\n * 3                   : freeze. loop on/off\n * 5                   : clear display\n * 4                   : save png\n */\n'use strict';\n\nvar formResolution = 15;\nvar stepSize = 2;\nvar distortionFactor = 1;\nvar initRadius = 50;\nvar centerX;\nvar centerY;\nvar x = [];\nvar y = [];\n\nlet input;\n\nvar filled = false;\nvar freeze = false;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n\n  // init shape\n  centerX = width / 2;\n  centerY = height / 2;\n  var angle = radians(360 / formResolution);\n  for (var i = 0; i < formResolution; i++) {\n    x.push(cos(angle * i) * initRadius);\n    y.push(sin(angle * i) * initRadius);\n  }\n\n  stroke(0, 50);\n  strokeWeight(0.75);\n  \n  input = createInput('');\n  input.position(0, 0);\n  \n  background(255);\n}\n\nfunction draw() {\n  // floating towards mouse position\n  centerX += (mouseX - centerX) * 0.01;\n  centerY += (mouseY - centerY) * 0.01;\n\n  // calculate new points\n  for (var i = 0; i < formResolution; i++) {\n    x[i] += random(-stepSize, stepSize);\n    y[i] += random(-stepSize, stepSize);\n    // uncomment the following line to show position of the agents\n    // ellipse(x[i] + centerX, y[i] + centerY, 5, 5);\n  }\n\n  if (filled) {\n    fill(0);\n  } else {\n    noFill();\n  }\n\n  beginShape();\n  // first controlpoint\n  curveVertex(x[formResolution - 1] + centerX, y[formResolution - 1] + centerY);\n\n  // only these points are drawn\n  for (var i = 0; i < formResolution; i++) {\n    curveVertex(x[i] + centerX, y[i] + centerY);\n  }\n  curveVertex(x[0] + centerX, y[0] + centerY);\n\n  // end controlpoint\n  curveVertex(x[1] + centerX, y[1] + centerY);\n  endShape();\n  \n  beginShape();\n  // second controlpoint\n  curveVertex(x[formResolution - 1] + (width - centerX), y[formResolution - 1] + centerY);\n\n  // only these points are drawn\n  for (var i = 0; i < formResolution; i++) {\n    curveVertex(x[i] + (width - centerX), y[i] + centerY);\n  }\n  curveVertex(x[0] + (width - centerX), y[0] + centerY);\n\n  // end controlpoint\n  curveVertex(x[1] + (width - centerX), y[1] + centerY);\n  endShape();\n}\n\nfunction mousePressed() {\n  // init shape on mouse position\n  centerX = mouseX;\n  centerY = mouseY;\n  var angle = radians(360 / formResolution);\n  var radius = initRadius * random(0.5, 1);\n  for (var i = 0; i < formResolution; i++) {\n    x[i] = cos(angle * i) * initRadius;\n    y[i] = sin(angle * i) * initRadius;\n  }\n}\n\nfunction keyReleased() {\n  if (key == '4' || key == '4') saveCanvas(input.value() + \"-Rorshach\", 'png');\n  if (key == '5' || key == '5') background(255);\n  if (key == '1') filled = false;\n  if (key == '2') filled = true;\n\n  // pauze/play draw loop\n  if (key == '3' || key == '3') freeze = !freeze;\n  if (freeze) {\n    noLoop();\n  } else {\n    loop();\n  }\n}",
        "children": [],
        "fileType": "file",
        "_id": "661ffbe755f6fb1b59bf235b",
        "isSelectedFile": true,
        "createdAt": "2024-04-22T15:24:31.430Z",
        "updatedAt": "2024-04-22T15:24:31.430Z",
        "id": "661ffbe755f6fb1b59bf235b"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "661ffbe755f6fb1b59bf235c",
        "createdAt": "2024-04-22T15:24:31.430Z",
        "updatedAt": "2024-04-22T15:24:31.430Z",
        "isSelectedFile": false,
        "id": "661ffbe755f6fb1b59bf235c"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "661ffbe755f6fb1b59bf235d",
        "createdAt": "2024-04-22T15:24:31.430Z",
        "updatedAt": "2024-04-22T15:24:31.430Z",
        "isSelectedFile": false,
        "id": "661ffbe755f6fb1b59bf235d"
      }
    ],
    "createdAt": "2024-04-17T16:43:51.515Z",
    "id": "hWTwcw7td"
  },
  {
    "_id": "F0KI4rxeMH",
    "name": "RUdaft? (punkhands)",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "673e33cfc64643ffe64f3767",
          "673e33cfc64643ffe64f3768",
          "673e33cfc64643ffe64f3769",
          "673e33cfc64643ffe64f376a",
          "673e33cfc64643ffe64f376b",
          "673e33cfc64643ffe64f376c",
          "673e33cfc64643ffe64f376d",
          "673e33cfc64643ffe64f376e",
          "673e33cfc64643ffe64f376f",
          "673e33cfc64643ffe64f3770",
          "673e33cfc64643ffe64f3771",
          "673e33cfc64643ffe64f3772",
          "673e33cfc64643ffe64f3773",
          "673e33cfc64643ffe64f3774"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "673e33cfc64643ffe64f3766",
        "createdAt": "2024-11-21T18:46:03.650Z",
        "updatedAt": "2024-11-21T18:46:03.650Z",
        "id": "673e33cfc64643ffe64f3766"
      },
      {
        "name": "sketch.js",
        "content": "let gameTimer = 0;\nlet isGameActive = false;\nlet lastPlatformHit = null;\nlet score = 0;\nconst PERFECT_TIMING = {\n  \"work it\": 0, // Starting point\n  \"make it\": 2000, // Should hit 2 seconds after start\n  \"do it\": 4000, // Should hit 4 seconds after start\n  \"makes us\": 6000, // Should hit 6 seconds after start\n  harder: 8000, // Should hit 8 seconds after start\n  better: 10000, // Should hit 10 seconds after start\n  faster: 12000, // Should hit 12 seconds after start\n  stronger: 14000, // Should hit 14 seconds after start\n};\n\n// How much time deviation is allowed (in milliseconds)\nconst TIMING_WINDOW = 5000; // ±5000ms window for \"perfect\" timing\n\n// The correct sequence of platform texts\nconst CORRECT_SEQUENCE = [\n  \"work it\",\n  \"make it\",\n  \"do it\",\n  \"makes us\",\n  \"harder\",\n  \"better\",\n  \"faster\",\n  \"stronger\",\n];\n\nlet floor,\n  platform1,\n  platform2,\n  platform3,\n  platform4,\n  platform5,\n  platform6,\n  platform7,\n  platform8;\nlet img, img2;\nlet p1, p2;\nlet gravity = 0.5; // Gravity pulls the sprite down\nlet jumpPower = -10; // Initial velocity for jump\nlet isOnGround = true; // Tracks if the sprite is on the ground\n\n// Sound variables\nlet sound1, sound2, sound3, sound4, sound5, sound6, sound7, sound8;\nlet platformCooldowns = new Map(); // Track cooldown for each platform\nconst COOLDOWN_TIME = 1000; // Cooldown time in milliseconds\n\nfunction preload() {\n  // Load sound files\n  soundFormats(\"mp3\", \"wav\");\n  sound1 = loadSound(\"workit.mp3\");\n  sound2 = loadSound(\"makeit.mp3\");\n  sound3 = loadSound(\"doit.mp3\");\n  sound4 = loadSound(\"makesus.mp3\");\n  sound5 = loadSound(\"older.mp3\");\n  sound6 = loadSound(\"better.mp3\");\n  sound7 = loadSound(\"faster.mp3\");\n  sound8 = loadSound(\"stronger.mp3\");\n  youwin = loadSound(\"dadadadadada.mp3\");\n\n  // Set volumes\n  [sound1, sound2, sound3, sound4, sound5, sound6, sound7, sound8].forEach(\n    (sound) => {\n      sound.setVolume(0.3);\n    }\n  );\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  textSize(18);\n  textAlign(CENTER);\n  fill(0, 0, 100);\n  textFont(\"Courier New\");\n  textStyle(BOLD);\n  stroke(0, 0, 100);\n  strokeWeight(2);\n\n  // Initialize checkboxes for each platform (one per platform)\n  let startX = width / 2 - 220; // Start at the center of the screen\n  let startY = 30; // Place them just below the top of the screen\n\n  for (let i = 0; i < CORRECT_SEQUENCE.length; i++) {\n    let checkbox = createCheckbox(\"\", false);\n    checkbox.position(startX + i * 60, startY);\n    checkboxes.push(checkbox);\n  }\n\n  p1 = createSprite(width / 4 - 50, 30);\n  p2 = createSprite((3 * width) / 4 + 50, 30);\n\n  // Add a \"ground\" sprite\n  ground = createSprite(width / 2, height, width, 10);\n  ground.collider = \"static\"; // Ground won't move when collided\n  wall1 = createSprite(0, height / 2, 10, height);\n  wall1.collider = \"static\";\n  wall2 = createSprite(width, height / 2, 10, height);\n  wall2.collider = \"static\";\n  ceiling = createSprite(width / 2, 0, width, 10);\n  ceiling.collider = \"static\";\n\n  // Create platforms\n  function createPlatform(x, y, color, text, sound) {\n    let platform = new Sprite(x, y, 100, 20, \"static\");\n    platform.color = color;\n    platform.text = text;\n    platform.sound = sound;\n    return platform;\n  }\n\n  // Left side platforms\n  platform1 = createPlatform(\n    width / 2 - 400,\n    height / 2 - 150,\n    \"yellow\",\n    \"work it\",\n    sound1\n  );\n  platform2 = createPlatform(\n    width / 2 - 300,\n    height / 2 - 50,\n    \"magenta\",\n    \"make it\",\n    sound2\n  );\n  platform3 = createPlatform(\n    width / 2 - 200,\n    height / 2 + 50,\n    \"lime\",\n    \"do it\",\n    sound3\n  );\n  platform4 = createPlatform(\n    width / 2 - 100,\n    height / 2 + 150,\n    \"red\",\n    \"makes us\",\n    sound4\n  );\n\n  // Right side platforms\n  platform5 = createPlatform(\n    width / 2 + 400,\n    height / 2 - 150,\n    \"yellow\",\n    \"harder\",\n    sound5\n  );\n  platform6 = createPlatform(\n    width / 2 + 300,\n    height / 2 - 50,\n    \"magenta\",\n    \"better\",\n    sound6\n  );\n  platform7 = createPlatform(\n    width / 2 + 200,\n    height / 2 + 50,\n    \"lime\",\n    \"faster\",\n    sound7\n  );\n  platform8 = createPlatform(\n    width / 2 + 100,\n    height / 2 + 150,\n    \"red\",\n    \"stronger\",\n    sound8\n  );\n}\n\nfunction draw() {\n  background(250, 250, 250, 10);\n\n  if (isGameActive) {\n    gameTimer = Date.now() - platformCooldowns.get(platform1);\n  }\n\n  playersMove();\n  checkPlatformCollisions();\n\n  // Apply the color to the sprite\n\n  let r = (frameCount + 100) % 255;\n  let g = (frameCount + 200) % 255;\n  let b = (frameCount + 300) % 255;\n\n  p1.color = color(r, g, b);\n  p1.stroke = color(g, b, r);\n  p2.color = color(b, r, g);\n  p2.stroke = color(r, b, g);\n\n  ground.color = color(b, g, r);\n  ceiling.color = color(g, b, r);\n  wall1.color = color(b, r, g);\n  wall2.color = color(r, b, g);\n\n  // Display game info on screen\n  push();\n  translate(0, 20);\n  textSize(20);\n  textAlign(CENTER);\n  fill(0, 0, 100);\n  textFont(\"Courier New\");\n  strokeWeight(0);\n  textStyle(BOLD);\n  if (isGameActive) {\n    push();\n    rectMode(CENTER);\n    fill(150, 150, 250);\n    stroke(r, g, b);\n    strokeWeight(8);\n    rect(width / 2, 115, 300, 125, 10);\n    pop();\n    text(`Time: ${(gameTimer / 1000).toFixed(2)}s`, width / 2, 90);\n    text(`Score: ${score}`, width / 2, 120);\n    text(\n      `Next Platform: ${CORRECT_SEQUENCE[currentSequenceIndex]}`,\n      width / 2,\n      150\n    );\n  } else {\n    push();\n    rectMode(CENTER);\n    fill(150, 150, 250);\n    stroke(r, g, b);\n    strokeWeight(8);\n    rect(width / 2, 115, 300, 70, 10);\n    pop();\n    text('Hit \"work it\" to start!', width / 2, 120);\n  }\n  pop();\n\n  for (let i = 0; i < checkboxes.length; i++) {\n    if (i < currentSequenceIndex) {\n      checkboxes[i].checked(true);\n      checkboxes[i].style(\"background-color\", \"navy\");\n    } else {\n      checkboxes[i].checked(false);\n      checkboxes[i].style(\"background-color\", \"#ccc\");\n    }\n  }\n}\n\nfunction playersMove() {\n  // Apply gravity to the sprite\n  p2.velocity.y += gravity;\n\n  // Left movement\n  if (keyIsDown(LEFT_ARROW)) {\n    p2.velocity.x = -5;\n  }\n  // Right movement\n  else if (keyIsDown(RIGHT_ARROW)) {\n    p2.velocity.x = 5;\n  }\n  // Stop horizontal movement when no key is pressed\n  else {\n    p2.velocity.x = 0;\n  }\n\n  // Jump\n  if (keyIsDown(UP_ARROW)) {\n    p2.velocity.y = jumpPower;\n  }\n\n  // Check collision with the ground\n  p2.collide(ground, () => {\n    p2.velocity.y = 0;\n  });\n\n  p1.velocity.y += gravity;\n\n  // Left movement\n  if (keyIsDown(65)) {\n    p1.velocity.x = -5;\n  }\n  // Right movement\n  else if (keyIsDown(68)) {\n    p1.velocity.x = 5;\n  }\n  // Stop horizontal movement when no key is pressed\n  else {\n    p1.velocity.x = 0;\n  }\n\n  // Jump\n  if (keyIsDown(87)) {\n    p1.velocity.y = jumpPower;\n  }\n\n  // Check collision with the ground\n  p1.collide(ground, () => {\n    p1.velocity.y = 0;\n  });\n}\n\nlet checkboxes = [];\n\nlet currentSequenceIndex = 0;\n\nfunction checkPlatformCollisions() {\n  const platforms = [\n    { sprite: platform1, sound: sound1 },\n    { sprite: platform2, sound: sound2 },\n    { sprite: platform3, sound: sound3 },\n    { sprite: platform4, sound: sound4 },\n    { sprite: platform5, sound: sound5 },\n    { sprite: platform6, sound: sound6 },\n    { sprite: platform7, sound: sound7 },\n    { sprite: platform8, sound: sound8 },\n  ];\n\n  const allSprites = [p1, p2];\n\n  for (let platform of platforms) {\n    for (let sprite of allSprites) {\n      if (platform.sprite.colliding(sprite)) {\n        const now = Date.now();\n        const lastCollision = platformCooldowns.get(platform.sprite) || 0;\n\n        if (now - lastCollision >= COOLDOWN_TIME) {\n          platform.sound.play();\n          platformCooldowns.set(platform.sprite, now);\n\n          // If we hit the \"work it\" platform and the game isn't active, start the game\n          if (platform.sprite.text === \"work it\" && !isGameActive) {\n            startGame();\n          }\n          // If the game is active, check the timing\n          else if (isGameActive) {\n            checkTiming(platform.sprite.text);\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction startGame() {\n  isGameActive = true;\n  gameTimer = 0;\n  currentSequenceIndex = 1;\n  score = 0;\n  console.log(\n    \"Game started! Hit the platforms in sequence with the right timing!\"\n  );\n}\n\nfunction checkTiming(platformText) {\n  // Check if this is the platform we're expecting\n  console.log(currentSequenceIndex);\n  if (platformText !== CORRECT_SEQUENCE[currentSequenceIndex]) {\n    console.log(\"Wrong platform! Game over!\");\n    endGame(false);\n    return;\n  }\n\n  // Get the expected timing for this platform\n  const expectedTiming = PERFECT_TIMING[platformText];\n  const timingDifference = Math.abs(gameTimer - expectedTiming);\n\n  if (timingDifference <= TIMING_WINDOW) {\n    // Perfect timing!\n    score += 100;\n    console.log(`Perfect timing! Score: ${score}`);\n  } else {\n    // Hit the right platform but timing was off\n    console.log(`Timing off by ${timingDifference}ms`);\n    endGame(false);\n    return;\n  }\n\n  currentSequenceIndex++;\n\n  // Check if we've completed the sequence\n  if (currentSequenceIndex >= CORRECT_SEQUENCE.length) {\n    console.log(\"Congratulations! Perfect sequence!\");\n    endGame(true);\n  }\n}\nfunction endGame(won) {\n  isGameActive = false;\n  currentSequenceIndex = 0;\n  checkboxes.forEach((checkbox) => {\n    checkbox.checked(false);\n    checkbox.style(\"background-color\", \"#ccc\");\n  });\n\n  if (won) {\n    console.log(`You won! Final score: ${score}`);\n    youwin.play();\n  } else {\n    console.log(`Game over! Final score: ${score}`);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "673e33cfc64643ffe64f3771",
        "createdAt": "2024-11-21T18:46:03.650Z",
        "updatedAt": "2024-11-21T18:46:03.650Z",
        "id": "673e33cfc64643ffe64f3771"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://p5play.org/v3/planck.min.js\"></script>\n<script src=\"https://p5play.org/v3/p5play.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e33cfc64643ffe64f376d",
        "createdAt": "2024-11-21T18:46:03.650Z",
        "updatedAt": "2024-11-21T18:46:03.650Z",
        "id": "673e33cfc64643ffe64f376d"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e33cfc64643ffe64f3773",
        "createdAt": "2024-11-21T18:46:03.650Z",
        "updatedAt": "2024-11-21T18:46:03.650Z",
        "id": "673e33cfc64643ffe64f3773"
      },
      {
        "name": "IMG_2127.jpg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/45506835-b7df-498b-9401-fd7375bf645a.jpg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e33cfc64643ffe64f3767",
        "createdAt": "2024-11-21T18:46:03.650Z",
        "updatedAt": "2024-11-21T18:46:03.650Z",
        "id": "673e33cfc64643ffe64f3767"
      },
      {
        "name": "IMG_2350.jpg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/73a52c20-31d1-4756-997e-8c09e8e99220.jpg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e33cfc64643ffe64f3768",
        "createdAt": "2024-11-21T18:46:03.650Z",
        "updatedAt": "2024-11-21T18:46:03.650Z",
        "id": "673e33cfc64643ffe64f3768"
      },
      {
        "name": "workit.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/fd672a16-920a-4ffe-a1da-6842a8814498.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e33cfc64643ffe64f3774",
        "createdAt": "2024-11-21T18:46:03.650Z",
        "updatedAt": "2024-11-21T18:46:03.650Z",
        "id": "673e33cfc64643ffe64f3774"
      },
      {
        "name": "makeit.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/6db33390-1563-464d-8633-d2ecdb8ef0ed.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e33cfc64643ffe64f376e",
        "createdAt": "2024-11-21T18:46:03.650Z",
        "updatedAt": "2024-11-21T18:46:03.650Z",
        "id": "673e33cfc64643ffe64f376e"
      },
      {
        "name": "better.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/a5e53691-7039-429a-8bf7-c716837e937f.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e33cfc64643ffe64f3769",
        "createdAt": "2024-11-21T18:46:03.650Z",
        "updatedAt": "2024-11-21T18:46:03.650Z",
        "id": "673e33cfc64643ffe64f3769"
      },
      {
        "name": "doit.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/82a03b14-8e54-480b-b006-ebaebedfaced.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e33cfc64643ffe64f376b",
        "createdAt": "2024-11-21T18:46:03.650Z",
        "updatedAt": "2024-11-21T18:46:03.650Z",
        "id": "673e33cfc64643ffe64f376b"
      },
      {
        "name": "faster.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/bf7d63c0-7821-4e45-8408-f8aad6b1859d.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e33cfc64643ffe64f376c",
        "createdAt": "2024-11-21T18:46:03.650Z",
        "updatedAt": "2024-11-21T18:46:03.650Z",
        "id": "673e33cfc64643ffe64f376c"
      },
      {
        "name": "makesus.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/c97e83e4-6907-426c-ac01-923ef70e8d58.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e33cfc64643ffe64f376f",
        "createdAt": "2024-11-21T18:46:03.650Z",
        "updatedAt": "2024-11-21T18:46:03.650Z",
        "id": "673e33cfc64643ffe64f376f"
      },
      {
        "name": "older.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/7167960a-1433-4372-a6d7-f01b67665e18.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e33cfc64643ffe64f3770",
        "createdAt": "2024-11-21T18:46:03.650Z",
        "updatedAt": "2024-11-21T18:46:03.650Z",
        "id": "673e33cfc64643ffe64f3770"
      },
      {
        "name": "stronger.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/16656f6b-92db-4a4d-8fee-45dc81c5e6c9.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e33cfc64643ffe64f3772",
        "createdAt": "2024-11-21T18:46:03.650Z",
        "updatedAt": "2024-11-21T18:46:03.650Z",
        "id": "673e33cfc64643ffe64f3772"
      },
      {
        "name": "dadadadadada.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/e4ad8702-daf8-4fa2-a474-43456fdad7dd.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e33cfc64643ffe64f376a",
        "createdAt": "2024-11-21T18:46:03.650Z",
        "updatedAt": "2024-11-21T18:46:03.650Z",
        "id": "673e33cfc64643ffe64f376a"
      }
    ],
    "createdAt": "2024-11-20T19:09:04.740Z",
    "updatedAt": "2024-11-21T18:46:03.650Z",
    "id": "F0KI4rxeMH"
  },
  {
    "_id": "1gZcIXjjs",
    "name": "RUdaft? (punkhands) [DAVE'S COPY]",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "673e34c9c64643ffe64f3785",
          "673e34c9c64643ffe64f3786",
          "673e34c9c64643ffe64f3787",
          "673e34c9c64643ffe64f3788",
          "673e34c9c64643ffe64f3789",
          "673e34c9c64643ffe64f378a",
          "673e34c9c64643ffe64f378b",
          "673e34c9c64643ffe64f378c",
          "673e34c9c64643ffe64f378d",
          "673e34c9c64643ffe64f378e",
          "673e34c9c64643ffe64f378f",
          "673e34c9c64643ffe64f3790",
          "673e34c9c64643ffe64f3791",
          "673e34c9c64643ffe64f3792",
          "673e353fc3c926d29c940307"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "673e34c9c64643ffe64f3784",
        "createdAt": "2024-11-21T17:58:56.856Z",
        "updatedAt": "2024-11-21T17:58:56.856Z",
        "id": "673e34c9c64643ffe64f3784"
      },
      {
        "name": "sketch.js",
        "content": "let gameTimer = 0;\nlet isGameActive = false;\nlet lastPlatformHit = null;\nlet score = 0;\nconst PERFECT_TIMING = {\n  \"work it\": 0, // Starting point\n  \"make it\": 2000, // Should hit 2 seconds after start\n  \"do it\": 4000, // Should hit 4 seconds after start\n  \"makes us\": 6000, // Should hit 6 seconds after start\n  harder: 8000, // Should hit 8 seconds after start\n  better: 10000, // Should hit 10 seconds after start\n  faster: 12000, // Should hit 12 seconds after start\n  stronger: 14000, // Should hit 14 seconds after start\n};\n\n// How much time deviation is allowed (in milliseconds)\nconst TIMING_WINDOW = 5000; // ±5000ms window for \"perfect\" timing\n\n// The correct sequence of platform texts\nconst CORRECT_SEQUENCE = [\n  \"work it\",\n  \"make it\",\n  \"do it\",\n  \"makes us\",\n  \"harder\",\n  \"better\",\n  \"faster\",\n  \"stronger\",\n];\n\nlet floor,\n  platform1,\n  platform2,\n  platform3,\n  platform4,\n  platform5,\n  platform6,\n  platform7,\n  platform8;\nlet img, img2;\nlet p1, p2;\nlet gravity = 0.5; // Gravity pulls the sprite down\nlet jumpPower = -10; // Initial velocity for jump\nlet isOnGround = true; // Tracks if the sprite is on the ground\n\n// Sound variables\nlet sound1, sound2, sound3, sound4, sound5, sound6, sound7, sound8;\nlet platformCooldowns = new Map(); // Track cooldown for each platform\nconst COOLDOWN_TIME = 1000; // Cooldown time in milliseconds\n\nfunction preload() {\n  // Load sound files\n  soundFormats(\"mp3\", \"wav\");\n  sound1 = loadSound(\"workit.mp3\");\n  sound2 = loadSound(\"makeit.mp3\");\n  sound3 = loadSound(\"doit.mp3\");\n  sound4 = loadSound(\"makesus.mp3\");\n  sound5 = loadSound(\"older.mp3\");\n  sound6 = loadSound(\"better.mp3\");\n  sound7 = loadSound(\"faster.mp3\");\n  sound8 = loadSound(\"stronger.mp3\");\n  youwin = loadSound(\"youwin.mp3\");\n\n  // Set volumes\n  [sound1, sound2, sound3, sound4, sound5, sound6, sound7, sound8].forEach(\n    (sound) => {\n      sound.setVolume(0.3);\n    }\n  );\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  textSize(18);\n  textAlign(CENTER);\n  fill(0, 0, 100);\n  textFont(\"Courier New\");\n  textStyle(BOLD);\n  stroke(0, 0, 100);\n  strokeWeight(2);\n\n  // Initialize checkboxes for each platform (one per platform)\n  let startX = width / 2 - 220; // Start at the center of the screen\n  let startY = 30; // Place them just below the top of the screen\n\n  for (let i = 0; i < CORRECT_SEQUENCE.length; i++) {\n    let checkbox = createCheckbox(\"\", false);\n    checkbox.position(startX + i * 60, startY);\n    checkboxes.push(checkbox);\n  }\n\n  p1 = createSprite(width / 4 - 50, 30);\n  p2 = createSprite((3 * width) / 4 + 50, 30);\n\n  // Add a \"ground\" sprite\n  ground = createSprite(width / 2, height, width, 10);\n  ground.collider = \"static\"; // Ground won't move when collided\n  wall1 = createSprite(0, height / 2, 10, height);\n  wall1.collider = \"static\";\n  wall2 = createSprite(width, height / 2, 10, height);\n  wall2.collider = \"static\";\n  ceiling = createSprite(width / 2, 0, width, 10);\n  ceiling.collider = \"static\";\n\n  // Create platforms\n  function createPlatform(x, y, color, text, sound) {\n    let platform = new Sprite(x, y, 100, 20, \"static\");\n    platform.color = color;\n    platform.text = text;\n    platform.sound = sound;\n    return platform;\n  }\n\n  // Left side platforms\n  platform1 = createPlatform(\n    width / 2 - 400,\n    height / 2 - 150,\n    \"yellow\",\n    \"work it\",\n    sound1\n  );\n  platform2 = createPlatform(\n    width / 2 - 300,\n    height / 2 - 50,\n    \"magenta\",\n    \"make it\",\n    sound2\n  );\n  platform3 = createPlatform(\n    width / 2 - 200,\n    height / 2 + 50,\n    \"lime\",\n    \"do it\",\n    sound3\n  );\n  platform4 = createPlatform(\n    width / 2 - 100,\n    height / 2 + 150,\n    \"red\",\n    \"makes us\",\n    sound4\n  );\n\n  // Right side platforms\n  platform5 = createPlatform(\n    width / 2 + 400,\n    height / 2 - 150,\n    \"yellow\",\n    \"harder\",\n    sound5\n  );\n  platform6 = createPlatform(\n    width / 2 + 300,\n    height / 2 - 50,\n    \"magenta\",\n    \"better\",\n    sound6\n  );\n  platform7 = createPlatform(\n    width / 2 + 200,\n    height / 2 + 50,\n    \"lime\",\n    \"faster\",\n    sound7\n  );\n  platform8 = createPlatform(\n    width / 2 + 100,\n    height / 2 + 150,\n    \"red\",\n    \"stronger\",\n    sound8\n  );\n}\n\nfunction draw() {\n  background(250, 250, 250, 10);\n\n  if (isGameActive) {\n    gameTimer = Date.now() - platformCooldowns.get(platform1);\n  }\n\n  playersMove();\n  checkPlatformCollisions();\n\n  // Apply the color to the sprite\n\n  let r = (frameCount + 100) % 255;\n  let g = (frameCount + 200) % 255;\n  let b = (frameCount + 300) % 255;\n\n  p1.color = color(r, g, b);\n  p1.stroke = color(g, b, r);\n  p2.color = color(b, r, g);\n  p2.stroke = color(r, b, g);\n\n  ground.color = color(b, g, r);\n  ceiling.color = color(g, b, r);\n  wall1.color = color(b, r, g);\n  wall2.color = color(r, b, g);\n\n  // Display game info on screen\n  push();\n  translate(0, 20);\n  textSize(20);\n  textAlign(CENTER);\n  fill(0, 0, 100);\n  textFont(\"Courier New\");\n  strokeWeight(0);\n  textStyle(BOLD);\n  if (isGameActive) {\n    push();\n    rectMode(CENTER);\n    fill(150, 150, 250);\n    stroke(r, g, b);\n    strokeWeight(8);\n    rect(width / 2, 115, 300, 125, 10);\n    pop();\n    text(`Time: ${(gameTimer / 1000).toFixed(2)}s`, width / 2, 90);\n    text(`Score: ${score}`, width / 2, 120);\n    text(\n      `Next Platform: ${CORRECT_SEQUENCE[currentSequenceIndex]}`,\n      width / 2,\n      150\n    );\n  } else {\n    push();\n    rectMode(CENTER);\n    fill(150, 150, 250);\n    stroke(r, g, b);\n    strokeWeight(8);\n    rect(width / 2, 115, 300, 70, 10);\n    pop();\n    text('Hit \"work it\" to start!', width / 2, 120);\n  }\n  pop();\n\n  for (let i = 0; i < checkboxes.length; i++) {\n    if (i < currentSequenceIndex) {\n      checkboxes[i].checked(true);\n      checkboxes[i].style(\"background-color\", \"navy\");\n    } else {\n      checkboxes[i].checked(false);\n      checkboxes[i].style(\"background-color\", \"#ccc\");\n    }\n  }\n}\n\nfunction playersMove() {\n  // Apply gravity to the sprite\n  p2.velocity.y += gravity;\n\n  // Left movement\n  if (keyIsDown(LEFT_ARROW)) {\n    p2.velocity.x = -5;\n  }\n  // Right movement\n  else if (keyIsDown(RIGHT_ARROW)) {\n    p2.velocity.x = 5;\n  }\n  // Stop horizontal movement when no key is pressed\n  else {\n    p2.velocity.x = 0;\n  }\n\n  // Jump\n  if (keyIsDown(UP_ARROW)) {\n    p2.velocity.y = jumpPower;\n  }\n\n  // Check collision with the ground\n  p2.collide(ground, () => {\n    p2.velocity.y = 0;\n  });\n\n  p1.velocity.y += gravity;\n\n  // Left movement\n  if (keyIsDown(65)) {\n    p1.velocity.x = -5;\n  }\n  // Right movement\n  else if (keyIsDown(68)) {\n    p1.velocity.x = 5;\n  }\n  // Stop horizontal movement when no key is pressed\n  else {\n    p1.velocity.x = 0;\n  }\n\n  // Jump\n  if (keyIsDown(87)) {\n    p1.velocity.y = jumpPower;\n  }\n\n  // Check collision with the ground\n  p1.collide(ground, () => {\n    p1.velocity.y = 0;\n  });\n}\n\nlet checkboxes = [];\n\nlet currentSequenceIndex = 0;\n\nfunction checkPlatformCollisions() {\n  const platforms = [\n    { sprite: platform1, sound: sound1 },\n    { sprite: platform2, sound: sound2 },\n    { sprite: platform3, sound: sound3 },\n    { sprite: platform4, sound: sound4 },\n    { sprite: platform5, sound: sound5 },\n    { sprite: platform6, sound: sound6 },\n    { sprite: platform7, sound: sound7 },\n    { sprite: platform8, sound: sound8 },\n  ];\n\n  const allSprites = [p1, p2];\n\n  for (let platform of platforms) {\n    for (let sprite of allSprites) {\n      if (platform.sprite.colliding(sprite)) {\n        const now = Date.now();\n        const lastCollision = platformCooldowns.get(platform.sprite) || 0;\n\n        if (now - lastCollision >= COOLDOWN_TIME) {\n          platform.sound.play();\n          platformCooldowns.set(platform.sprite, now);\n\n          // If we hit the \"work it\" platform and the game isn't active, start the game\n          if (platform.sprite.text === \"work it\" && !isGameActive) {\n            startGame();\n          }\n          // If the game is active, check the timing\n          else if (isGameActive) {\n            checkTiming(platform.sprite.text);\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction startGame() {\n  isGameActive = true;\n  gameTimer = 0;\n  currentSequenceIndex = 1;\n  score = 0;\n  console.log(\n    \"Game started! Hit the platforms in sequence with the right timing!\"\n  );\n}\n\nfunction checkTiming(platformText) {\n  // Check if this is the platform we're expecting\n  console.log(currentSequenceIndex);\n  if (platformText !== CORRECT_SEQUENCE[currentSequenceIndex]) {\n    console.log(\"Wrong platform! Game over!\");\n    endGame(false);\n    return;\n  }\n\n  // Get the expected timing for this platform\n  const expectedTiming = PERFECT_TIMING[platformText];\n  const timingDifference = Math.abs(gameTimer - expectedTiming);\n\n  if (timingDifference <= TIMING_WINDOW) {\n    // Perfect timing!\n    score += 100;\n    console.log(`Perfect timing! Score: ${score}`);\n  } else {\n    // Hit the right platform but timing was off\n    console.log(`Timing off by ${timingDifference}ms`);\n    endGame(false);\n    return;\n  }\n\n  currentSequenceIndex++;\n\n  // Check if we've completed the sequence\n  if (currentSequenceIndex >= CORRECT_SEQUENCE.length) {\n    console.log(\"Congratulations! Perfect sequence!\");\n    endGame(true);\n  }\n}\nfunction endGame(won) {\n  isGameActive = false;\n  currentSequenceIndex = 0;\n  checkboxes.forEach((checkbox) => {\n    checkbox.checked(false);\n    checkbox.style(\"background-color\", \"#ccc\");\n  });\n\n  if (won) {\n    console.log(`You won! Final score: ${score}`);\n    youwin.play();\n  } else {\n    console.log(`Game over! Final score: ${score}`);\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "673e34c9c64643ffe64f378f",
        "createdAt": "2024-11-21T17:58:56.856Z",
        "updatedAt": "2024-11-21T17:58:56.856Z",
        "id": "673e34c9c64643ffe64f378f"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://p5play.org/v3/planck.min.js\"></script>\n<script src=\"https://p5play.org/v3/p5play.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e34c9c64643ffe64f378b",
        "createdAt": "2024-11-21T17:58:56.856Z",
        "updatedAt": "2024-11-21T17:58:56.856Z",
        "id": "673e34c9c64643ffe64f378b"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e34c9c64643ffe64f3791",
        "createdAt": "2024-11-21T17:58:56.856Z",
        "updatedAt": "2024-11-21T17:58:56.856Z",
        "id": "673e34c9c64643ffe64f3791"
      },
      {
        "name": "IMG_2127.jpg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/8df4d648-ed42-4ba6-8de2-c132039cd88f.jpg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e34c9c64643ffe64f3785",
        "createdAt": "2024-11-21T17:58:56.856Z",
        "updatedAt": "2024-11-21T17:58:56.856Z",
        "id": "673e34c9c64643ffe64f3785"
      },
      {
        "name": "IMG_2350.jpg",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/051fd64e-5621-42e9-91a7-7543007d2799.jpg",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e34c9c64643ffe64f3786",
        "createdAt": "2024-11-21T17:58:56.856Z",
        "updatedAt": "2024-11-21T17:58:56.856Z",
        "id": "673e34c9c64643ffe64f3786"
      },
      {
        "name": "workit.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/7225beaa-dc58-48bb-859f-291d233b83fe.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e34c9c64643ffe64f3792",
        "createdAt": "2024-11-21T17:58:56.856Z",
        "updatedAt": "2024-11-21T17:58:56.856Z",
        "id": "673e34c9c64643ffe64f3792"
      },
      {
        "name": "makeit.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/126c90ca-08b1-4c54-938e-adefb787791e.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e34c9c64643ffe64f378c",
        "createdAt": "2024-11-21T17:58:56.856Z",
        "updatedAt": "2024-11-21T17:58:56.856Z",
        "id": "673e34c9c64643ffe64f378c"
      },
      {
        "name": "better.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/1c05c037-f97c-4a39-9d12-8c1f5d2af507.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e34c9c64643ffe64f3787",
        "createdAt": "2024-11-21T17:58:56.856Z",
        "updatedAt": "2024-11-21T17:58:56.856Z",
        "id": "673e34c9c64643ffe64f3787"
      },
      {
        "name": "doit.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/f4f2f0dc-91a5-4fab-89b0-2e731b412921.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e34c9c64643ffe64f3789",
        "createdAt": "2024-11-21T17:58:56.856Z",
        "updatedAt": "2024-11-21T17:58:56.856Z",
        "id": "673e34c9c64643ffe64f3789"
      },
      {
        "name": "faster.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/0e21129e-64f1-4be1-b712-4bd22220c85b.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e34c9c64643ffe64f378a",
        "createdAt": "2024-11-21T17:58:56.856Z",
        "updatedAt": "2024-11-21T17:58:56.856Z",
        "id": "673e34c9c64643ffe64f378a"
      },
      {
        "name": "makesus.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/1a87cd20-9cb9-48c7-8939-a62787223974.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e34c9c64643ffe64f378d",
        "createdAt": "2024-11-21T17:58:56.856Z",
        "updatedAt": "2024-11-21T17:58:56.856Z",
        "id": "673e34c9c64643ffe64f378d"
      },
      {
        "name": "older.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/359e9a8a-fa30-49a7-b1b2-272c47576098.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e34c9c64643ffe64f378e",
        "createdAt": "2024-11-21T17:58:56.856Z",
        "updatedAt": "2024-11-21T17:58:56.856Z",
        "id": "673e34c9c64643ffe64f378e"
      },
      {
        "name": "stronger.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/648f2a7a-3918-4fad-85f0-fb4bcbaf2eba.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e34c9c64643ffe64f3790",
        "createdAt": "2024-11-21T17:58:56.856Z",
        "updatedAt": "2024-11-21T17:58:56.856Z",
        "id": "673e34c9c64643ffe64f3790"
      },
      {
        "name": "dadadadadada.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/41539fbb-6e34-49bf-907f-dd99848c9694.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e34c9c64643ffe64f3788",
        "createdAt": "2024-11-21T17:58:56.856Z",
        "updatedAt": "2024-11-21T17:58:56.856Z",
        "id": "673e34c9c64643ffe64f3788"
      },
      {
        "name": "youwin.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/5c3a561d-4018-4f2c-b2f4-3d67f17bb84b.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "673e353fc3c926d29c940307",
        "createdAt": "2024-11-21T17:58:56.856Z",
        "updatedAt": "2024-11-21T17:58:56.856Z",
        "id": "673e353fc3c926d29c940307"
      }
    ],
    "createdAt": "2024-11-20T19:13:14.692Z",
    "updatedAt": "2024-11-21T17:58:56.856Z",
    "id": "1gZcIXjjs"
  },
  {
    "_id": "mgWmC7PwD",
    "name": "Select Cameras copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "675daf8ac9f9d46ddec35935",
          "675daf8ac9f9d46ddec35936",
          "675daf8ac9f9d46ddec35937"
        ],
        "fileType": "folder",
        "_id": "675daf8ac9f9d46ddec35934",
        "createdAt": "2024-12-14T16:30:32.228Z",
        "updatedAt": "2024-12-14T16:30:32.228Z",
        "id": "675daf8ac9f9d46ddec35934"
      },
      {
        "name": "sketch.js",
        "content": "let myVideo;\n\nfunction setup() {\n  navigator.mediaDevices.enumerateDevices()\n    .then(gotDevices);\n}\nconst devices = [];\n\nfunction gotDevices(deviceInfos) {\n  for (let i = 0; i !== deviceInfos.length; ++i) {\n    const deviceInfo = deviceInfos[i];\n    if (deviceInfo.kind == 'videoinput') {\n      devices.push({\n        label: deviceInfo.label,\n        id: deviceInfo.deviceId\n      });\n    }\n  }\n  // console.log(devices);\n  let supportedConstraints = navigator.mediaDevices.getSupportedConstraints();\n  // console.log(supportedConstraints);\n  var constraints = {\n    video: {\n      deviceId: {\n        exact: devices[1].id\n      },\n    }\n  };\n  createCapture(constraints);\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "675daf8ac9f9d46ddec35936",
        "createdAt": "2024-12-14T16:30:32.228Z",
        "updatedAt": "2024-12-14T16:30:32.228Z",
        "id": "675daf8ac9f9d46ddec35936"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.8.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.8.0/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.8.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "675daf8ac9f9d46ddec35935",
        "createdAt": "2024-12-14T16:30:32.228Z",
        "updatedAt": "2024-12-14T16:30:32.228Z",
        "id": "675daf8ac9f9d46ddec35935"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "675daf8ac9f9d46ddec35937",
        "createdAt": "2024-12-14T16:30:32.228Z",
        "updatedAt": "2024-12-14T16:30:32.228Z",
        "id": "675daf8ac9f9d46ddec35937"
      }
    ],
    "createdAt": "2024-12-14T16:17:14.230Z",
    "updatedAt": "2024-12-14T16:30:32.228Z",
    "id": "mgWmC7PwD"
  },
  {
    "_id": "__-XlQIxw",
    "name": "Self-Sketch",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66d9e340f32ea32daebbd4dd",
          "66d9e340f32ea32daebbd4dc",
          "66d9e340f32ea32daebbd4de"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66d9e340f32ea32daebbd4df",
        "createdAt": "2024-09-12T16:35:12.087Z",
        "updatedAt": "2024-09-12T16:35:12.087Z",
        "id": "66d9e340f32ea32daebbd4df"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n  angleMode(DEGREES);\n}\n\nfunction draw() {\n  background(1, 9, 61);\n  \n  // dark hair\n  fill(28, 6, 6);\n  stroke(255, 255, 255)\n  strokeWeight(0.4);\n  rect(140,100,110,150,55,55,0,0);\n  \n  // face\n  fill(224, 196, 184);\n  ellipse(195, 165, 90, 100);\n  \n  // my bangs\n  fill(28, 6, 6);\n  noStroke()\n  rect(150,114,90,39,250,250,0,0);\n  \n  // eyes\n  fill(255);\n  stroke(1, 22, 92)\n  strokeWeight(1);\n  ellipse(177, 165, 15, 15);\n  ellipse(213, 165, 11, 11);\n  \n  fill(0);\n  noStroke()\n  ellipse(177, 165, 5, 5);\n  ellipse(213, 165, 4, 4);\n  \n  // nose\n  stroke(184, 152, 140);\n  strokeWeight(3);\n  line(195,175,190,185)\n  line(190,185,195,185)\n  \n  //blush\n  fill(232,86,104,50);\n  noStroke()\n  ellipse(170, 180, 11, 11);\n  ellipse(220, 180, 11, 11);\n  \n  // smile\n  fill(102, 11, 22);\n  arc(198, 194, 25, 25, 0, 180);\n  \n  // neck and chest\n  fill(224, 196, 184);\n  rect(184,210,25,25);\n  rect(157,225,80,50,15,15,0,0);\n  \n  // arms & legs\n  stroke(224, 196, 184);\n  strokeWeight(20);\n  line(165,240,140,300)\n  line(229,240,260,300)\n  \n  line(180,320,180,375)\n  line(220,320,220,375)\n  \n  // dress\n  noStroke();\n  fill(102, 11, 22);\n  quad(170, 242, 225, 242, 255, 350, 145, 350);\n  stroke(102, 11, 22);\n  strokeWeight(5);\n  line(172, 245,182,223)\n  line(223, 245,211,223)\n  \n  // clouds\n  noStroke();\n  fill(255)\n  ellipse(85, 75, 50, 50);\n  ellipse(60, 50, 50, 50);\n  ellipse(45, 75, 50, 50);\n  ellipse(95, 45, 50, 50);\n  \n  ellipse(360, 75, 50, 50);\n  ellipse(360, 45, 50, 50);\n  ellipse(320, 75, 50, 50);\n  ellipse(325, 45, 50, 50);\n  \n  ellipse(277, 100, 15, 15);\n  ellipse(255, 120, 11, 11);\n \n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66d9e340f32ea32daebbd4dc",
        "createdAt": "2024-09-12T16:35:12.087Z",
        "updatedAt": "2024-09-12T16:35:12.087Z",
        "id": "66d9e340f32ea32daebbd4dc"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66d9e340f32ea32daebbd4dd",
        "createdAt": "2024-09-12T16:35:12.087Z",
        "updatedAt": "2024-09-12T16:35:12.087Z",
        "id": "66d9e340f32ea32daebbd4dd"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66d9e340f32ea32daebbd4de",
        "createdAt": "2024-09-12T16:35:12.087Z",
        "updatedAt": "2024-09-12T16:35:12.087Z",
        "id": "66d9e340f32ea32daebbd4de"
      }
    ],
    "updatedAt": "2024-09-12T16:35:12.087Z",
    "createdAt": "2024-09-05T18:01:09.074Z",
    "id": "__-XlQIxw"
  },
  {
    "_id": "Mwur8MqSK",
    "name": "Self-SketchFUNCTIONS",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67059697998532522ff1d6ff",
          "67059697998532522ff1d700",
          "67059697998532522ff1d701"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67059697998532522ff1d6fe",
        "createdAt": "2024-10-08T20:42:48.393Z",
        "updatedAt": "2024-10-08T20:42:48.393Z",
        "id": "67059697998532522ff1d6fe"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n  angleMode(DEGREES);\n}\n\nfunction draw() {\n  background(1, 9, 61);\n  \n  drawHair(); \n  drawFace();\n  drawBangs(); \n  drawEyes(177,165,15);\n  drawNose();\n  drawBlush();\n  drawSmile();\n  drawNeckChest();\n  drawArmsLegs(); \n  drawDress(); \n  drawClouds();\n \n}\n\nfunction drawEyes(x,y,w) {\n\n  fill(255);\n  stroke(1, 22, 92)\n  strokeWeight(1);\n  circle(x, y, w);\n  circle(x+36, y, w-4);  \n  fill(0);\n  noStroke()\n  circle(x, y, w-10);\n  circle(x+36, y, w-11);\n}\n\nfunction drawHair() {\n  fill(28, 6, 6);\n  stroke(255, 255, 255)\n  strokeWeight(0.4);\n  rect(140,100,110,150,55,55,0,0);\n}\nfunction drawFace() {\n  fill(224, 196, 184);\n  ellipse(195, 165, 90, 100);\n}\nfunction drawBangs() {\n  fill(28, 6, 6);\n  noStroke()\n  rect(150,114,90,39,250,250,0,0);\n}\n\nfunction drawNose() {\n  stroke(184, 152, 140);\n  strokeWeight(3);\n  line(195,175,190,185)\n  line(190,185,195,185)\n}\nfunction drawBlush() {\n  fill(232,86,104,50);\n  noStroke()\n  ellipse(170, 180, 11, 11);\n  ellipse(220, 180, 11, 11);\n}\n\nfunction drawSmile() {\n  fill(102, 11, 22);\n  arc(198, 194, 25, 25, 0, 180);\n}\nfunction drawNeckChest(){\n  fill(224, 196, 184);\n  rect(184,210,25,25);\n  rect(157,225,80,50,15,15,0,0);\n}\n\nfunction drawArmsLegs() {\n  stroke(224, 196, 184);\n  strokeWeight(20);\n  line(165,240,140,300)\n  line(229,240,260,300)  \n  line(180,320,180,375)\n  line(220,320,220,375)\n}\n\nfunction drawDress() {\n   noStroke();\n  fill(102, 11, 22);\n  quad(170, 242, 225, 242, 255, 350, 145, 350);\n  stroke(102, 11, 22);\n  strokeWeight(5);\n  line(172, 245,182,223)\n  line(223, 245,211,223)\n}\nfunction drawClouds() {\n  noStroke();\n  fill(255)\n  ellipse(85, 75, 50, 50);\n  ellipse(60, 50, 50, 50);\n  ellipse(45, 75, 50, 50);\n  ellipse(95, 45, 50, 50);\n  \n  ellipse(360, 75, 50, 50);\n  ellipse(360, 45, 50, 50);\n  ellipse(320, 75, 50, 50);\n  ellipse(325, 45, 50, 50);\n  \n  ellipse(277, 100, 15, 15);\n  ellipse(255, 120, 11, 11);\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67059697998532522ff1d700",
        "createdAt": "2024-10-08T20:42:48.393Z",
        "updatedAt": "2024-10-08T20:42:48.393Z",
        "id": "67059697998532522ff1d700"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67059697998532522ff1d6ff",
        "createdAt": "2024-10-08T20:42:48.393Z",
        "updatedAt": "2024-10-08T20:42:48.393Z",
        "id": "67059697998532522ff1d6ff"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67059697998532522ff1d701",
        "createdAt": "2024-10-08T20:42:48.393Z",
        "updatedAt": "2024-10-08T20:42:48.393Z",
        "id": "67059697998532522ff1d701"
      }
    ],
    "createdAt": "2024-10-08T20:31:19.149Z",
    "updatedAt": "2024-10-08T20:42:48.393Z",
    "id": "Mwur8MqSK"
  },
  {
    "_id": "IBGa1Iedt",
    "name": "sketch1",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66da5514d34ca56ac685397b",
          "66da5514d34ca56ac685397c",
          "66da5514d34ca56ac685397d"
        ],
        "fileType": "folder",
        "_id": "66da5514d34ca56ac685397a",
        "createdAt": "2024-09-06T01:05:49.423Z",
        "updatedAt": "2024-09-06T01:05:49.423Z",
        "id": "66da5514d34ca56ac685397a"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400,400);\n  background(255);\n}\n\nfunction draw() {\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66da5514d34ca56ac685397c",
        "createdAt": "2024-09-06T01:05:49.423Z",
        "updatedAt": "2024-09-06T01:05:49.423Z",
        "id": "66da5514d34ca56ac685397c"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "66da5514d34ca56ac685397b",
        "createdAt": "2024-09-06T01:05:49.423Z",
        "updatedAt": "2024-09-06T01:05:49.423Z",
        "id": "66da5514d34ca56ac685397b"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "66da5514d34ca56ac685397d",
        "createdAt": "2024-09-06T01:05:49.423Z",
        "updatedAt": "2024-09-06T01:05:49.423Z",
        "id": "66da5514d34ca56ac685397d"
      }
    ],
    "createdAt": "2024-09-06T01:04:20.344Z",
    "updatedAt": "2024-09-06T01:05:49.423Z",
    "id": "IBGa1Iedt"
  },
  {
    "_id": "uoDcY_AXF",
    "name": "sketch2",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "66da5582552084db507a519c",
          "66da5582552084db507a519d",
          "66da5582552084db507a519e"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "66da5582552084db507a519b",
        "createdAt": "2024-09-06T01:17:50.998Z",
        "updatedAt": "2024-09-06T01:17:50.998Z",
        "id": "66da5582552084db507a519b"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n  background(220);\n}\n\nlet x = 50;\n\n// x++; could either go here or inside the draw function, depending on if you want the box to be moving as the code refreshes or if you only want it to move based on user interaction. \n\n\nfunction draw() {\n  x++;\n  \n  // y wasn't defined, so I gave it a dimension\n  rect(x, 150, 50, 50);\n  \n  if(mouseX > x && mouseX < x + 50) {\n    x = mouseX;\n  }\n  \n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "66da5582552084db507a519d",
        "createdAt": "2024-09-06T01:17:50.998Z",
        "updatedAt": "2024-09-06T01:17:50.998Z",
        "id": "66da5582552084db507a519d"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.7.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.7.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66da5582552084db507a519c",
        "createdAt": "2024-09-06T01:17:50.998Z",
        "updatedAt": "2024-09-06T01:17:50.998Z",
        "id": "66da5582552084db507a519c"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "66da5582552084db507a519e",
        "createdAt": "2024-09-06T01:17:50.998Z",
        "updatedAt": "2024-09-06T01:17:50.998Z",
        "id": "66da5582552084db507a519e"
      }
    ],
    "createdAt": "2024-09-06T01:06:10.913Z",
    "updatedAt": "2024-09-06T01:17:50.998Z",
    "id": "uoDcY_AXF"
  },
  {
    "_id": "oJN15GVcu",
    "name": "Sound copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "672eaaa62b5481302b4e190e",
          "672eaaa62b5481302b4e190f",
          "672eaaa62b5481302b4e1910",
          "672eaaa62b5481302b4e1911",
          "672eaaa62b5481302b4e1912",
          "672eaaa62b5481302b4e1913",
          "672eaaa62b5481302b4e1914",
          "672eaaa62b5481302b4e1915"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "672eaaa62b5481302b4e190d",
        "createdAt": "2024-11-10T23:47:48.661Z",
        "updatedAt": "2024-11-10T23:47:48.661Z",
        "id": "672eaaa62b5481302b4e190d"
      },
      {
        "name": "sketch.js",
        "content": "let sun;\nlet fft;\nlet amp;\n\n\nfunction preload() {\n  sun = loadSound(\"beach.mp3\");\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  sun.loop();\n\n  fft = new p5.FFT();\n  fft.setInput(sun);\n  \n}\n\nfunction mousePressed() {\n  if (sun.isPlaying()) {\n    sun.pause();\n  } else {\n    sun.loop();\n  }\n}\n\nfunction draw() {\n  background(0);\n  fft.analyze();\n  amp = fft.getEnergy(20,200);\n  \n  if (amp > 210){\n    ellipse(200,200,40,40)\n  } else {\n    ellipse(200,200,20,20)\n  }\n  \n  print(amp)\n  \n\n}\n\n// resize canvas & full screen\n\nfunction mousePressed() {\n  if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {\n    let fs = fullscreen();\n    fullscreen(!fs);\n  }\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n  fft = new p5.FFT();\n  fft.setInput(sun);\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "672eaaa62b5481302b4e1912",
        "createdAt": "2024-11-10T23:47:48.661Z",
        "updatedAt": "2024-11-10T23:47:48.661Z",
        "id": "672eaaa62b5481302b4e1912"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672eaaa62b5481302b4e1910",
        "createdAt": "2024-11-10T23:47:48.661Z",
        "updatedAt": "2024-11-10T23:47:48.661Z",
        "id": "672eaaa62b5481302b4e1910"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672eaaa62b5481302b4e1913",
        "createdAt": "2024-11-10T23:47:48.661Z",
        "updatedAt": "2024-11-10T23:47:48.661Z",
        "id": "672eaaa62b5481302b4e1913"
      },
      {
        "name": "sunshine.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/1ba9e92b-b5cf-4b6c-949e-c0b8bca8a13d.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672eaaa62b5481302b4e1914",
        "createdAt": "2024-11-10T23:47:48.661Z",
        "updatedAt": "2024-11-10T23:47:48.661Z",
        "id": "672eaaa62b5481302b4e1914"
      },
      {
        "name": "shiver-short.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/ed71cf1b-5748-46d8-a28d-6d2fa0a54176.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672eaaa62b5481302b4e1911",
        "createdAt": "2024-11-10T23:47:48.661Z",
        "updatedAt": "2024-11-10T23:47:48.661Z",
        "id": "672eaaa62b5481302b4e1911"
      },
      {
        "name": "beach.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/485fa8be-f56b-445b-8810-ad53d9050799.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672eaaa62b5481302b4e190e",
        "createdAt": "2024-11-10T23:47:48.661Z",
        "updatedAt": "2024-11-10T23:47:48.661Z",
        "id": "672eaaa62b5481302b4e190e"
      },
      {
        "name": "sweet.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/7fbe3e3d-5a2b-4a35-996a-2f70b558506e.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672eaaa62b5481302b4e1915",
        "createdAt": "2024-11-10T23:47:48.661Z",
        "updatedAt": "2024-11-10T23:47:48.661Z",
        "id": "672eaaa62b5481302b4e1915"
      },
      {
        "name": "data.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/4a54a823-3dfa-4d74-b105-41969684f0f5.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672eaaa62b5481302b4e190f",
        "createdAt": "2024-11-10T23:47:48.661Z",
        "updatedAt": "2024-11-10T23:47:48.661Z",
        "id": "672eaaa62b5481302b4e190f"
      }
    ],
    "createdAt": "2024-11-09T00:19:51.295Z",
    "updatedAt": "2024-11-10T23:47:48.661Z",
    "id": "oJN15GVcu"
  },
  {
    "_id": "aA7Suir-g",
    "name": "soundStorm",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6740d38850c9077d2c970d6b",
          "672ea4db2b5481302b4e1905",
          "672ea4db2b5481302b4e1906",
          "672ea4db2b5481302b4e1907",
          "672ea4db2b5481302b4e1908",
          "672ea4db2b5481302b4e1909",
          "672ea4db2b5481302b4e190a",
          "672ea4db2b5481302b4e190b",
          "672ea4db2b5481302b4e190c"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "672ea4db2b5481302b4e1904",
        "createdAt": "2024-11-22T20:41:53.971Z",
        "updatedAt": "2024-11-22T20:41:53.971Z",
        "id": "672ea4db2b5481302b4e1904"
      },
      {
        "name": "sketch.js",
        "content": "// you need to standardize variables for serial communication\n\nlet song;\nlet fft;\nlet num;\nlet light = 0;\nlet lightA = 0;\nlet lightB = 0;\nlet lightC = 0;\nlet rippleA = 0;\nlet rippleB = 0;\nlet rippleC = 0;\nlet FR = 60; // 10 to 60\nlet blur = 3;\nlet BGbutton = 0;\nlet grain;\nlet alpha = 0.0; // 0 to 1\n// background colors\nlet hue1 = 0; // 0 to 360\nlet sat1 = 0; // 0 to 100\nlet br1 = 0; // 0 to 230\n// effect colors\nlet hue2 = 360; // 0 to 360\nlet sat2 = 100; // 0 to 100\nlet br2 = 230; // 0 to 230\nlet hue2A, hue2B, hue2C;\n\nfunction preload() {\n  song = loadSound(\"beach.mp3\");\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  createFilmGrain(0, 0, windowWidth, windowHeight, 500, 3);\n  xCoord2 = 0;\n  yCoord2 = windowHeight / 2;\n  circleX = -100;\n  circleY = -100;\n  colorMode(HSB, 360, 100, 230, 100);\n  num = windowWidth * 5;\n  song.loop();\n\n  fft = new p5.FFT();\n  fft.setInput(song);\n  for (var i = 0; i < 200; i++) {\n    drop[i] = new Drop();\n  }\n  for (let i = 0; i <= num; i++) {\n    bballs.push(\n      new Ball(\n        i / 2,\n        random(5, 25),\n        random(20, 50),\n        random(0.3, 0.5),\n        // random(240, 360),\n        random(100, 200)\n      )\n    );\n  }\n}\n\nfunction draw() {\n  fft.analyze();\n  amp = fft.getEnergy(10, 1050);\n  frameRate(FR);\n  background(hue1, sat1, br1);\n\n  hue2A = random(abs(120 - hue2), hue2);\n  hue2B = random(abs(120 - hue2), abs(240 - hue2));\n  hue2C = random(abs(240 - hue2), abs(360 - hue2));\n\n  myLight(200, 100, 230);\n  myLightA(hue2A, sat2, br2);\n  myLightB(hue2B, sat2, br2);\n  myLightC(hue2C, sat2, br2);\n\n  for (let i = 0; i < num; i++) {\n    bballs[i].draw();\n  }\n\n  for (var i = 0; i < 200; i++) {\n    drop[i].show();\n    drop[i].update();\n  }\n\n  myRipple1(hue2A, sat2, br2);\n  myRipple2(hue2B, sat2, br2);\n  myRipple3(hue2C, sat2, br2);\n\n  filter(BLUR, blur);\n  if (BGbutton === 1) {\n    filter(INVERT);\n  }\n\n  updateGrain();\n  displayGrain();\n}\n\nfunction keyPressed() {\n  if (key === \" \" && song.isPlaying()) {\n    song.pause();\n  } else if (key === \" \") {\n    song.loop();\n  } else if (keyCode === LEFT_ARROW) {\n    song.stop();\n    song.loop();\n  } else if (rippleA === 0 && key === \"a\") {\n    X1 = random(0, windowWidth);\n    Y1 = random(windowHeight / 5, windowHeight);\n    circleSize1 = 0;\n    opacity1 = 255;\n  } else if (rippleB === 0 && key === \"s\") {\n    X2 = random(0, windowWidth);\n    Y2 = random(windowHeight / 5, windowHeight);\n    circleSize2 = 0;\n    opacity2 = 255;\n  } else if (rippleC === 0 && key === \"d\") {\n    X3 = random(0, windowWidth);\n    Y3 = random(windowHeight / 5, windowHeight);\n    circleSize3 = 0;\n    opacity3 = 255;\n  } else if (light === 0 && keyCode === ENTER) {\n    light = 1;\n  } else if (lightA === 0 && key === \"z\") {\n    lightA = 1;\n  } else if (lightB === 0 && key === \"x\") {\n    lightB = 1;\n  } else if (lightC === 0 && key === \"c\") {\n    lightC = 1;\n  }\n}\n\n// resize canvas & full screen\n\nfunction mousePressed() {\n  if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {\n    let fs = fullscreen();\n    fullscreen(!fs);\n  }\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n  createFilmGrain(0, 0, windowWidth, windowHeight, 100, 3);\n  xCoord2 = 0;\n  yCoord2 = windowHeight / 2;\n  fft = new p5.FFT();\n  mic = new p5.AudioIn();\n  mic.start();\n  fft.setInput(song);\n  wavefWidth = windowWidth;\n  for (var i = 0; i < 200; i++) {\n    drop[i] = new Drop();\n  }\n}\n\nvar drop = [];\n\nfunction Drop() {\n  this.x = random(0, windowWidth);\n  this.y = random(0, -windowHeight);\n\n  this.show = function () {\n    stroke(hue2B, sat2, 230);\n    noStroke();\n    strokeWeight(0.5);\n    fill(hue2B, sat2, 230);\n    ellipse(this.x, this.y, random(5, 10), random(5, 10));\n  };\n  this.update = function () {\n    this.speed = amp / 5;\n    this.gravity = 1.05;\n    this.y = this.y + this.speed * this.gravity;\n\n    if (this.y > windowHeight) {\n      this.y = random(0, -windowHeight);\n      this.gravity = 0;\n    }\n  };\n}\n\nlet bballs = [];\n\nclass Ball {\n  constructor(xpos, ypos, w, dy, limit) {\n    this.xpos = xpos;\n    this.ypos = ypos;\n    this.w = w;\n    this.dy = dy;\n    this.color = random(abs(60 - hue2), hue2);\n    this.limit = limit;\n  }\n\n  draw() {\n    this.move(this.dy);\n\n    noStroke();\n    fill(this.color, 100, amp, 10);\n    circle(this.xpos, this.ypos, this.w);\n  }\n\n  move() {\n    if (this.ypos + this.w / 2 >= this.limit || this.ypos - this.w / 2 <= -20) {\n      this.dy = -this.dy;\n    }\n    this.ypos += this.dy;\n  }\n}\n\nlet X1 = 0;\nlet Y1 = 0;\nlet X2 = 0;\nlet Y2 = 0;\nlet X3 = 0;\nlet Y3 = 0;\nlet circleSize1 = 0;\nlet circleSize2 = 0;\nlet circleSize3 = 0;\nlet opacity1 = 255;\nlet opacity2 = 255;\nlet opacity3 = 255;\n\nfunction myRipple1(H, S, B) {\n  circleSize1 += 10;\n  opacity1 -= 3;\n  noFill();\n  strokeWeight(10);\n  stroke(H, S, B, opacity1);\n  circle(X1, Y1, circleSize1);\n  circle(X1, Y1, circleSize1 * 0.75);\n  circle(X1, Y1, circleSize1 * 0.5);\n}\n\nfunction myRipple2(H, S, B) {\n  circleSize2 += 10;\n  opacity2 -= 3;\n  noFill();\n  strokeWeight(10);\n  stroke(H, S, B, opacity2);\n  circle(X2, Y2, circleSize2);\n  circle(X2, Y2, circleSize2 * 0.75);\n  circle(X2, Y2, circleSize2 * 0.5);\n}\nfunction myRipple3(H, S, B) {\n  circleSize3 += 10;\n  opacity3 -= 3;\n  noFill();\n  strokeWeight(10);\n  stroke(H, S, B, opacity3);\n  circle(X3, Y3, circleSize3);\n  circle(X3, Y3, circleSize3 * 0.75);\n  circle(X3, Y3, circleSize3 * 0.5);\n}\n\nvar xCoord1 = 0;\nvar yCoord1 = 0;\nvar xCoord2 = 0;\nvar yCoord2 = 0;\n\nfunction myLight(H, S, B) {\n  for (var i = 0; i < 300; i++) {\n    xCoord1 = xCoord2;\n    yCoord1 = yCoord2;\n    xCoord2 = xCoord1 + int(random(-20, 20));\n    yCoord2 = yCoord1 + int(random(-10, 20));\n    if (light === 1) {\n      stroke(H, S, B);\n    } else {\n      noStroke();\n    }\n    strokeWeight(random(3, 5));\n    strokeJoin(MITER);\n    line(xCoord1, yCoord1, xCoord2, yCoord2);\n\n    if (\n      (xCoord2 > windowWidth) |\n      (xCoord2 < 0) |\n      (yCoord2 > windowHeight) |\n      (yCoord2 < 0)\n    ) {\n      xCoord2 = int(random(0, windowWidth));\n      yCoord2 = 0;\n    }\n  }\n}\n\nfunction keyReleased() {\n  if (light === 1 && keyCode === ENTER) {\n    light = 0;\n  } else if (lightA === 1 && key === \"z\") {\n    lightA = 0;\n  } else if (lightB === 1 && key === \"x\") {\n    lightB = 0;\n  } else if (lightC === 1 && key === \"c\") {\n    lightC = 0;\n  }\n}\n\nfunction myLightA(H, S, B) {\n  for (var i = 0; i < 300; i++) {\n    xCoord1 = xCoord2;\n    yCoord1 = yCoord2;\n    xCoord2 = xCoord1 + int(random(-20, 20));\n    yCoord2 = yCoord1 + int(random(-10, 20));\n    strokeWeight(random(3, 5));\n    strokeJoin(MITER);\n    line(xCoord1, yCoord1, xCoord2, yCoord2);\n\n    if (\n      (xCoord2 > windowWidth) |\n      (xCoord2 < 0) |\n      (yCoord2 > windowHeight) |\n      (yCoord2 < 0)\n    ) {\n      if (lightA === 1) {\n        strokeWeight(10);\n        stroke(H, S, B);\n      } else {\n        noStroke();\n      }\n      xCoord2 = int(random(0, windowWidth));\n      yCoord2 = 0;\n    }\n  }\n}\n\nfunction myLightB(H, S, B) {\n  for (var i = 0; i < 300; i++) {\n    xCoord1 = xCoord2;\n    yCoord1 = yCoord2;\n    xCoord2 = xCoord1 + int(random(-20, 20));\n    yCoord2 = yCoord1 + int(random(-10, 20));\n    strokeWeight(random(3, 5));\n    strokeJoin(MITER);\n    line(xCoord1, yCoord1, xCoord2, yCoord2);\n\n    if (\n      (xCoord2 > windowWidth) |\n      (xCoord2 < 0) |\n      (yCoord2 > windowHeight) |\n      (yCoord2 < 0)\n    ) {\n      if (lightB === 1) {\n        strokeWeight(10);\n        stroke(H, S, B);\n      } else {\n        noStroke();\n      }\n      xCoord2 = int(random(0, windowWidth));\n      yCoord2 = 0;\n    }\n  }\n}\n\nfunction myLightC(H, S, B) {\n  for (var i = 0; i < 300; i++) {\n    xCoord1 = xCoord2;\n    yCoord1 = yCoord2;\n    xCoord2 = xCoord1 + int(random(-20, 20));\n    yCoord2 = yCoord1 + int(random(-10, 20));\n    strokeWeight(random(3, 5));\n    strokeJoin(MITER);\n    line(xCoord1, yCoord1, xCoord2, yCoord2);\n\n    if (\n      (xCoord2 > windowWidth) |\n      (xCoord2 < 0) |\n      (yCoord2 > windowHeight) |\n      (yCoord2 < 0)\n    ) {\n      if (lightC === 1) {\n        strokeWeight(10);\n        stroke(H, S, B);\n      } else {\n        noStroke();\n      }\n      xCoord2 = int(random(0, windowWidth));\n      yCoord2 = 0;\n    }\n  }\n}\n\nfunction updateGrain() {\n  grain.update();\n}\n\nfunction displayGrain() {\n  grain.display();\n}\n\nfunction createFilmGrain(x, y, w, h, patternSize, sampleSize) {\n  grain = new FilmGrainEffect(x, y, w, h, patternSize, sampleSize, alpha);\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "672ea4db2b5481302b4e1909",
        "createdAt": "2024-11-22T20:41:53.971Z",
        "updatedAt": "2024-11-22T20:41:53.971Z",
        "id": "672ea4db2b5481302b4e1909"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"FilmGrainEffect.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672ea4db2b5481302b4e1907",
        "createdAt": "2024-11-22T20:41:53.971Z",
        "updatedAt": "2024-11-22T20:41:53.971Z",
        "id": "672ea4db2b5481302b4e1907"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672ea4db2b5481302b4e190a",
        "createdAt": "2024-11-22T20:41:53.971Z",
        "updatedAt": "2024-11-22T20:41:53.971Z",
        "id": "672ea4db2b5481302b4e190a"
      },
      {
        "name": "sunshine.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/ada4840b-8057-46e9-b3d3-cc3a7cc0456b.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672ea4db2b5481302b4e190b",
        "createdAt": "2024-11-22T20:41:53.971Z",
        "updatedAt": "2024-11-22T20:41:53.971Z",
        "id": "672ea4db2b5481302b4e190b"
      },
      {
        "name": "shiver-short.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/696c10ca-28e5-43ad-b941-8996d1f39bc5.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672ea4db2b5481302b4e1908",
        "createdAt": "2024-11-22T20:41:53.971Z",
        "updatedAt": "2024-11-22T20:41:53.971Z",
        "id": "672ea4db2b5481302b4e1908"
      },
      {
        "name": "beach.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/424bb6ab-d979-46c1-a85c-a9c47d54a90a.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672ea4db2b5481302b4e1905",
        "createdAt": "2024-11-22T20:41:53.971Z",
        "updatedAt": "2024-11-22T20:41:53.971Z",
        "id": "672ea4db2b5481302b4e1905"
      },
      {
        "name": "sweet.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/8a35f3dd-e451-493d-9789-f9f7bac40800.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672ea4db2b5481302b4e190c",
        "createdAt": "2024-11-22T20:41:53.971Z",
        "updatedAt": "2024-11-22T20:41:53.971Z",
        "id": "672ea4db2b5481302b4e190c"
      },
      {
        "name": "data.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/9ac2d88d-599d-4f7c-82be-76f37a6edbe9.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672ea4db2b5481302b4e1906",
        "createdAt": "2024-11-22T20:41:53.971Z",
        "updatedAt": "2024-11-22T20:41:53.971Z",
        "id": "672ea4db2b5481302b4e1906"
      },
      {
        "name": "FilmGrainEffect.js",
        "content": "class Effects {\n  static counter = 0;\n}\n\nclass FilmGrainEffect {\n  static counter = 0;\n  static index = 0;\n\n  constructor(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.id = \"FilmGrain_\" + Effects.counter++;\n    this.reset(x, y, w, h, patternSize, sampleSize, patternAlpha);\n  }\n\n  reset(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.samples = [];\n    this.currentSampleSet = [];\n    this.patternRefreshInterval = 4;\n    FilmGrainEffect.counter = 0;\n    FilmGrainEffect.index = 0;\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.p = patternSize;\n    this.s = sampleSize;\n    this.a = map(patternAlpha, 0, 1, 0, 255);\n    for (let i = 0; i < sampleSize; i++) {\n      this.samples.push(\n        this.pattern(this.x, this.y, this.w, this.h, this.p, this.a)\n      );\n    }\n  }\n\n  add(effect) {}\n\n  pattern(x, y, w, h, patternSize, patternAlpha) {\n    // luodaan uusi p5 canvas || create new p5 canvas\n    let pg = createGraphics(patternSize, patternSize);\n    pg.pixelDensity(1);\n\n    // luodaan kohina | create noise\n    pg.loadPixels();\n    for (var _y = 0; _y < patternSize; _y += 1) {\n      for (var _x = 0; _x < patternSize; _x += 1) {\n        let i = (_x + _y * patternSize) * 4;\n        let value = (Math.random() * 255) | 0;\n        pg.pixels[i] = value;\n        pg.pixels[i + 1] = value;\n        pg.pixels[i + 2] = value;\n        pg.pixels[i + 3] = patternAlpha;\n      }\n    }\n    pg.updatePixels();\n\n    // lasketaan kohinapalojen paikat ja tallennetaan ne | calculate position of noise pieces and save them\n    let xlen = w / patternSize;\n    let ylen = h / patternSize;\n\n    let samples = [];\n    for (let i = 0; i < ylen; i++) {\n      for (let j = 0; j < xlen; j++) {\n        let _x = x + patternSize * j;\n        let _y = y + patternSize * i;\n        samples.push({\n          canvas: pg,\n          x: _x,\n          y: _y,\n          w: patternSize,\n          h: patternSize,\n        });\n      }\n    }\n    \n    return samples;\n  }\n\n  update(data) {\n    if (FilmGrainEffect.counter++ === this.patternRefreshInterval) {\n      FilmGrainEffect.counter = 0;\n      FilmGrainEffect.index++;\n      if (!this.samples[FilmGrainEffect.index]) {\n        FilmGrainEffect.index = 0;\n      }\n    }\n    this.currentSampleSet = this.samples[FilmGrainEffect.index];\n  }\n\n  display() {\n    for (let sample of this.currentSampleSet) {\n      image(sample.canvas, sample.x, sample.y, sample.w, sample.h);\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.currentSampleSet;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6740d38850c9077d2c970d6b",
        "createdAt": "2024-11-22T20:41:53.971Z",
        "updatedAt": "2024-11-22T20:41:53.971Z",
        "id": "6740d38850c9077d2c970d6b"
      }
    ],
    "createdAt": "2024-11-08T23:55:08.610Z",
    "updatedAt": "2024-11-22T20:41:53.971Z",
    "id": "aA7Suir-g"
  },
  {
    "_id": "KgWmTYjuL",
    "name": "soundStorm - final",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6740eb457db270c1f50ecd2d",
          "6740eb457db270c1f50ecd2e",
          "6740eb457db270c1f50ecd2f",
          "6740eb457db270c1f50ecd30",
          "6740eb457db270c1f50ecd31",
          "6740eb457db270c1f50ecd32",
          "6740eb457db270c1f50ecd33",
          "6740eb457db270c1f50ecd34",
          "6740eb457db270c1f50ecd35"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6740eb457db270c1f50ecd2c",
        "createdAt": "2024-11-23T17:08:47.615Z",
        "updatedAt": "2024-11-23T17:08:47.615Z",
        "id": "6740eb457db270c1f50ecd2c"
      },
      {
        "name": "sketch.js",
        "content": "// ------------------- Variables -------------------\n\n// Sound and FFT analysis\nlet song;\nlet fft;\nlet amp, mappedAmp;\n\n// Serial communication variables\nlet num;\nlet light = 0,\n  lightA = 0,\n  lightB = 0,\n  lightC = 0;\nlet rippleA = 0,\n  rippleB = 0,\n  rippleC = 0;\n\n// Frame rate and visual effects\nlet FR = 60; // Frame rate (10 to 60)\nlet blur = 3;\nlet BGbutton = 0;\n\n// Grain and transparency\nlet grain;\nlet alpha = 0.0; // Transparency (0 to 1)\n\nlet rot1 = 0,\n  rot2 = 0;\n\n// Background colors (HSB mode)\nlet hue1 = 0,\n  sat1 = 0,\n  br1 = 0; // Hue, Saturation, Brightness\n\n// Effect colors (HSB mode)\nlet hue2 = 0,\n  sat2 = 100,\n  br2 = 100; // Hue, Saturation, Brightness\nlet hue2A, hue2B, hue2C; // Variants of hue2 for effects\n\n// Ball and ripple properties\nlet bballs = [];\nlet drop = [];\nlet X1 = 0,\n  Y1 = 0,\n  X2 = 0,\n  Y2 = 0,\n  X3 = 0,\n  Y3 = 0;\nlet circleSize1 = 0,\n  circleSize2 = 0,\n  circleSize3 = 0;\nlet opacity1 = 255,\n  opacity2 = 255,\n  opacity3 = 255;\n\n// Line animation coordinates\nlet xCoord1 = 0,\n  yCoord1 = 0,\n  xCoord2 = 0,\n  yCoord2 = 0;\n\n// ------------------- Preload Function -------------------\nfunction preload() {\n  song = loadSound(\"beach.mp3\"); // Load the sound file\n}\n\n// ------------------- Setup Function -------------------\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  createFilmGrain(0, 0, windowWidth, windowHeight, 500, 3);\n\n  // Initialize variables and modes\n  xCoord2 = 0;\n  yCoord2 = windowHeight / 2;\n  colorMode(HSB, 360, 100, 100, 100);\n  num = windowWidth * 5;\n\n  // Start the song and FFT analysis\n  song.loop();\n  fft = new p5.FFT();\n  fft.setInput(song);\n\n  // Initialize drops and balls\n  for (let i = 0; i < 200; i++) drop[i] = new Drop();\n  for (let i = 0; i <= num; i++) {\n    bballs.push(\n      new Ball(\n        i / 2,\n        random(5, 25),\n        random(20, 50),\n        random(0.3, 0.5),\n        random(100, 200)\n      )\n    );\n  }\n}\n\n// ------------------- Draw Function -------------------\nfunction draw() {\n  fft.analyze();\n  // Get amplitude energy from FFT\n  amp = fft.getEnergy(10, 1050);\n\n  // Map amp value to the range 0-100\n  mappedAmp = map(amp, 0, 255, 0, 100);\n\n  frameRate(FR);\n\n  // Set the background color\n  background(0);\n  hue1 = map(rot1, 0, 23, 0, 360);\n  hue2 = map(rot2, 0, 23, 0, 360);\n  // Generate hue variants for effects\n  hue2A = random((hue2 + 0) % 360, (hue2 + 50) % 360);\n  hue2B = random((hue2 + 120) % 360, (hue2 + 190) % 360);\n  hue2C = random((hue2 + 240) % 360, (hue2 + 350) % 360);\n\n  // Draw light effects\n  myLight(200, 100, 230);\n  myLightA(hue2A, sat2, br2);\n  myLightB(hue2B, sat2, br2);\n  myLightC(hue2C, sat2, br2);\n\n  // Update and show drops\n  for (let i = 0; i < 200; i++) {\n    drop[i].show();\n    drop[i].update();\n  }\n\n  // Draw bouncing balls\n  for (let i = 0; i < num; i++) bballs[i].draw();\n\n  // Draw ripple effects\n  myRipple1(hue2A, sat2, br2);\n  myRipple2(hue2B, sat2, br2);\n  myRipple3(hue2C, sat2, br2);\n\n  // Apply post-processing effects\n  filter(BLUR, blur);\n  if (BGbutton === 1) filter(INVERT);\n\n  // Display grain effect\n  updateGrain();\n  displayGrain();\n}\n\n// ------------------- Key Pressed Functions -------------------\nfunction keyPressed() {\n  // Toggle song play/pause with space\n  if (key === \" \" && song.isPlaying()) song.pause();\n  else if (key === \" \") song.loop();\n  // Reset song with left arrow\n  else if (keyCode === LEFT_ARROW) {\n    song.stop();\n    song.loop();\n  }\n\n  // Trigger ripple effects\n  else if (rippleA === 0 && key === \"a\") setRipple1();\n  else if (rippleB === 0 && key === \"s\") setRipple2();\n  else if (rippleC === 0 && key === \"d\") setRipple3();\n  // Toggle lights\n  else if (keyCode === ENTER && light === 0) light = 1;\n  else if (key === \"z\" && lightA === 0) lightA = 1;\n  else if (key === \"x\" && lightB === 0) lightB = 1;\n  else if (key === \"c\" && lightC === 0) lightC = 1;\n}\n\nfunction keyReleased() {\n  if (keyCode === ENTER && light === 1) light = 0;\n  else if (key === \"z\" && lightA === 1) lightA = 0;\n  else if (key === \"x\" && lightB === 1) lightB = 0;\n  else if (key === \"c\" && lightC === 1) lightC = 0;\n}\n\n// ------------------- Mouse Interaction Functions -------------------\nfunction mousePressed() {\n  if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {\n    fullscreen(!fullscreen());\n  }\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n  createFilmGrain(0, 0, windowWidth, windowHeight, 100, 3);\n\n  fft = new p5.FFT();\n  fft.setInput(song);\n  for (let i = 0; i < 200; i++) drop[i] = new Drop();\n}\n\n// ------------------- Utility Functions -------------------\n\nfunction myLight(H, S, B) {\n  for (var i = 0; i < 300; i++) {\n    xCoord1 = xCoord2;\n    yCoord1 = yCoord2;\n    xCoord2 = xCoord1 + int(random(-20, 20));\n    yCoord2 = yCoord1 + int(random(-10, 20));\n    if (light === 1) {\n      stroke(H, S, B);\n    } else {\n      noStroke();\n    }\n    strokeWeight(random(3, 5));\n    strokeJoin(MITER);\n    line(xCoord1, yCoord1, xCoord2, yCoord2);\n\n    if (\n      (xCoord2 > windowWidth) |\n      (xCoord2 < 0) |\n      (yCoord2 > windowHeight) |\n      (yCoord2 < 0)\n    ) {\n      xCoord2 = int(random(0, windowWidth));\n      yCoord2 = 0;\n    }\n  }\n}\nfunction myLightA(H, S, B) {\n  for (var i = 0; i < 300; i++) {\n    xCoord1 = xCoord2;\n    yCoord1 = yCoord2;\n    xCoord2 = xCoord1 + int(random(-20, 20));\n    yCoord2 = yCoord1 + int(random(-10, 20));\n    strokeWeight(random(3, 5));\n    strokeJoin(MITER);\n    line(xCoord1, yCoord1, xCoord2, yCoord2);\n\n    if (\n      (xCoord2 > windowWidth) |\n      (xCoord2 < 0) |\n      (yCoord2 > windowHeight) |\n      (yCoord2 < 0)\n    ) {\n      if (lightA === 1) {\n        strokeWeight(10);\n        stroke(H, S, B);\n      } else {\n        noStroke();\n      }\n      xCoord2 = int(random(0, windowWidth));\n      yCoord2 = 0;\n    }\n  }\n}\n\nfunction myLightB(H, S, B) {\n  for (var i = 0; i < 300; i++) {\n    xCoord1 = xCoord2;\n    yCoord1 = yCoord2;\n    xCoord2 = xCoord1 + int(random(-20, 20));\n    yCoord2 = yCoord1 + int(random(-10, 20));\n    strokeWeight(random(3, 5));\n    strokeJoin(MITER);\n    line(xCoord1, yCoord1, xCoord2, yCoord2);\n\n    if (\n      (xCoord2 > windowWidth) |\n      (xCoord2 < 0) |\n      (yCoord2 > windowHeight) |\n      (yCoord2 < 0)\n    ) {\n      if (lightB === 1) {\n        strokeWeight(10);\n        stroke(H, S, B);\n      } else {\n        noStroke();\n      }\n      xCoord2 = int(random(0, windowWidth));\n      yCoord2 = 0;\n    }\n  }\n}\n\nfunction myLightC(H, S, B) {\n  for (var i = 0; i < 300; i++) {\n    xCoord1 = xCoord2;\n    yCoord1 = yCoord2;\n    xCoord2 = xCoord1 + int(random(-20, 20));\n    yCoord2 = yCoord1 + int(random(-10, 20));\n    strokeWeight(random(3, 5));\n    strokeJoin(MITER);\n    line(xCoord1, yCoord1, xCoord2, yCoord2);\n\n    if (\n      (xCoord2 > windowWidth) |\n      (xCoord2 < 0) |\n      (yCoord2 > windowHeight) |\n      (yCoord2 < 0)\n    ) {\n      if (lightC === 1) {\n        strokeWeight(10);\n        stroke(H, S, B);\n      } else {\n        noStroke();\n      }\n      xCoord2 = int(random(0, windowWidth));\n      yCoord2 = 0;\n    }\n  }\n}\n\n// Set properties for Ripple1\nfunction setRipple1() {\n  X1 = random(0, windowWidth);\n  Y1 = random(windowHeight / 5, windowHeight);\n  circleSize1 = 0;\n  opacity1 = 255;\n}\n\n// Set properties for Ripple2\nfunction setRipple2() {\n  X2 = random(0, windowWidth);\n  Y2 = random(windowHeight / 5, windowHeight);\n  circleSize2 = 0;\n  opacity2 = 255;\n}\n\n// Set properties for Ripple3\nfunction setRipple3() {\n  X3 = random(0, windowWidth);\n  Y3 = random(windowHeight / 5, windowHeight);\n  circleSize3 = 0;\n  opacity3 = 255;\n}\n\nfunction myRipple1(H, S, B) {\n  circleSize1 += 10;\n  opacity1 -= 3;\n  noFill();\n  strokeWeight(10);\n  stroke(H, S, B, opacity1);\n  circle(X1, Y1, circleSize1);\n  circle(X1, Y1, circleSize1 * 0.75);\n  circle(X1, Y1, circleSize1 * 0.5);\n}\n\nfunction myRipple2(H, S, B) {\n  circleSize2 += 10;\n  opacity2 -= 3;\n  noFill();\n  strokeWeight(10);\n  stroke(H, S, B, opacity2);\n  circle(X2, Y2, circleSize2);\n  circle(X2, Y2, circleSize2 * 0.75);\n  circle(X2, Y2, circleSize2 * 0.5);\n}\nfunction myRipple3(H, S, B) {\n  circleSize3 += 10;\n  opacity3 -= 3;\n  noFill();\n  strokeWeight(10);\n  stroke(H, S, B, opacity3);\n  circle(X3, Y3, circleSize3);\n  circle(X3, Y3, circleSize3 * 0.75);\n  circle(X3, Y3, circleSize3 * 0.5);\n}\n\n// Update and display the grain effect\nfunction updateGrain() {\n  grain.update();\n}\n\nfunction displayGrain() {\n  grain.display();\n}\n\n// Create a film grain effect\nfunction createFilmGrain(x, y, w, h, patternSize, sampleSize) {\n  grain = new FilmGrainEffect(x, y, w, h, patternSize, sampleSize, alpha);\n}\n\n// ------------------- Classes -------------------\n\n// Drop class (animated falling shapes)\nfunction Drop() {\n  this.x = random(0, windowWidth);\n  this.y = random(0, -windowHeight);\n\n  this.show = function () {\n    stroke(hue2B, sat2, 100);\n    strokeWeight(0.5);\n    fill(hue2B, sat2, 100);\n    ellipse(this.x, this.y, random(5, 10), random(5, 10));\n  };\n\n  this.update = function () {\n    this.speed = amp / 5;\n    this.gravity = 1.05;\n    this.y += this.speed * this.gravity;\n\n    if (this.y > windowHeight) {\n      this.y = random(0, -windowHeight);\n      this.gravity = 0;\n    }\n  };\n}\n\n// Ball class (bouncing balls)\nclass Ball {\n  constructor(xpos, ypos, w, dy, limit) {\n    this.xpos = xpos;\n    this.ypos = ypos;\n    this.w = w;\n    this.dy = dy;\n    this.color = random((hue2 + 240) % 360, (hue2 + 350) % 360);\n    this.limit = limit;\n  }\n\n  draw() {\n    this.move(this.dy);\n    noStroke();\n    fill(this.color, 100, mappedAmp, 10);\n    circle(this.xpos, this.ypos, this.w);\n  }\n\n  move() {\n    if (this.ypos + this.w / 2 >= this.limit || this.ypos - this.w / 2 <= -20) {\n      this.dy = -this.dy;\n    }\n    this.ypos += this.dy;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6740eb457db270c1f50ecd32",
        "createdAt": "2024-11-23T17:08:47.615Z",
        "updatedAt": "2024-11-23T17:08:47.615Z",
        "id": "6740eb457db270c1f50ecd32"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"FilmGrainEffect.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6740eb457db270c1f50ecd30",
        "createdAt": "2024-11-23T17:08:47.615Z",
        "updatedAt": "2024-11-23T17:08:47.615Z",
        "id": "6740eb457db270c1f50ecd30"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6740eb457db270c1f50ecd33",
        "createdAt": "2024-11-23T17:08:47.615Z",
        "updatedAt": "2024-11-23T17:08:47.615Z",
        "id": "6740eb457db270c1f50ecd33"
      },
      {
        "name": "sunshine.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/bc084100-9346-4322-96a9-1f8c06f85d53.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6740eb457db270c1f50ecd34",
        "createdAt": "2024-11-23T17:08:47.615Z",
        "updatedAt": "2024-11-23T17:08:47.615Z",
        "id": "6740eb457db270c1f50ecd34"
      },
      {
        "name": "shiver-short.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/b68c8977-b54a-4230-81ed-f41bfd6910c5.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6740eb457db270c1f50ecd31",
        "createdAt": "2024-11-23T17:08:47.615Z",
        "updatedAt": "2024-11-23T17:08:47.615Z",
        "id": "6740eb457db270c1f50ecd31"
      },
      {
        "name": "beach.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/e9e3a94b-3466-43de-8fa2-7e5e725dca17.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6740eb457db270c1f50ecd2e",
        "createdAt": "2024-11-23T17:08:47.615Z",
        "updatedAt": "2024-11-23T17:08:47.615Z",
        "id": "6740eb457db270c1f50ecd2e"
      },
      {
        "name": "sweet.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/29011292-1cbb-4c8e-8913-cd402b1b335c.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6740eb457db270c1f50ecd35",
        "createdAt": "2024-11-23T17:08:47.615Z",
        "updatedAt": "2024-11-23T17:08:47.615Z",
        "id": "6740eb457db270c1f50ecd35"
      },
      {
        "name": "data.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/ce9fcc86-8a07-4a10-931f-bb37f1a6aa90.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6740eb457db270c1f50ecd2f",
        "createdAt": "2024-11-23T17:08:47.615Z",
        "updatedAt": "2024-11-23T17:08:47.615Z",
        "id": "6740eb457db270c1f50ecd2f"
      },
      {
        "name": "FilmGrainEffect.js",
        "content": "class Effects {\n  static counter = 0;\n}\n\nclass FilmGrainEffect {\n  static counter = 0;\n  static index = 0;\n\n  constructor(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.id = \"FilmGrain_\" + Effects.counter++;\n    this.reset(x, y, w, h, patternSize, sampleSize, patternAlpha);\n  }\n\n  reset(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.samples = [];\n    this.currentSampleSet = [];\n    this.patternRefreshInterval = 4;\n    FilmGrainEffect.counter = 0;\n    FilmGrainEffect.index = 0;\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.p = patternSize;\n    this.s = sampleSize;\n    this.a = map(patternAlpha, 0, 1, 0, 255);\n    for (let i = 0; i < sampleSize; i++) {\n      this.samples.push(\n        this.pattern(this.x, this.y, this.w, this.h, this.p, this.a)\n      );\n    }\n  }\n\n  add(effect) {}\n\n  pattern(x, y, w, h, patternSize, patternAlpha) {\n    // luodaan uusi p5 canvas || create new p5 canvas\n    let pg = createGraphics(patternSize, patternSize);\n    pg.pixelDensity(1);\n\n    // luodaan kohina | create noise\n    pg.loadPixels();\n    for (var _y = 0; _y < patternSize; _y += 1) {\n      for (var _x = 0; _x < patternSize; _x += 1) {\n        let i = (_x + _y * patternSize) * 4;\n        let value = (Math.random() * 255) | 0;\n        pg.pixels[i] = value;\n        pg.pixels[i + 1] = value;\n        pg.pixels[i + 2] = value;\n        pg.pixels[i + 3] = patternAlpha;\n      }\n    }\n    pg.updatePixels();\n\n    // lasketaan kohinapalojen paikat ja tallennetaan ne | calculate position of noise pieces and save them\n    let xlen = w / patternSize;\n    let ylen = h / patternSize;\n\n    let samples = [];\n    for (let i = 0; i < ylen; i++) {\n      for (let j = 0; j < xlen; j++) {\n        let _x = x + patternSize * j;\n        let _y = y + patternSize * i;\n        samples.push({\n          canvas: pg,\n          x: _x,\n          y: _y,\n          w: patternSize,\n          h: patternSize,\n        });\n      }\n    }\n    \n    return samples;\n  }\n\n  update(data) {\n    if (FilmGrainEffect.counter++ === this.patternRefreshInterval) {\n      FilmGrainEffect.counter = 0;\n      FilmGrainEffect.index++;\n      if (!this.samples[FilmGrainEffect.index]) {\n        FilmGrainEffect.index = 0;\n      }\n    }\n    this.currentSampleSet = this.samples[FilmGrainEffect.index];\n  }\n\n  display() {\n    for (let sample of this.currentSampleSet) {\n      image(sample.canvas, sample.x, sample.y, sample.w, sample.h);\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.currentSampleSet;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6740eb457db270c1f50ecd2d",
        "createdAt": "2024-11-23T17:08:47.615Z",
        "updatedAt": "2024-11-23T17:08:47.615Z",
        "id": "6740eb457db270c1f50ecd2d"
      }
    ],
    "createdAt": "2024-11-22T20:36:22.707Z",
    "updatedAt": "2024-11-23T17:08:47.615Z",
    "id": "KgWmTYjuL"
  },
  {
    "_id": "nL5Cfv6Oi",
    "name": "soundWaves",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6740ef7ad76e3ae5eebbde75",
          "672d46a3d08389c5aed83487",
          "672e7d9bd2aa5413189f2e77",
          "672d2da960115d5452f5c679",
          "672d2f74afb25c257e7a8be6",
          "672d2da960115d5452f5c678",
          "672d2da960115d5452f5c67a",
          "672d2db360115d5452f5c67c",
          "672d558843a926adeafd4b48"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "672d2da960115d5452f5c67b",
        "createdAt": "2024-11-22T22:50:06.909Z",
        "updatedAt": "2024-11-22T22:50:06.909Z",
        "id": "672d2da960115d5452f5c67b"
      },
      {
        "name": "sketch.js",
        "content": "let song;\nlet fft;\nlet pointSize = 2;\nlet wavefX = 0;\nlet wavefWidth;\n\n// Frame rate and visual effects\nlet FR = 10; // Frame rate (10 to 60)\nlet blur = 0;\nlet BGbutton = 0;\n\n// Grain and transparency\nlet grain;\nlet alpha = 0.0; // Transparency (0 to 1)\n\n// Background colors (HSB mode)\nlet hue1 = 0,\n  sat1 = 0,\n  br1 = 0; // Hue, Saturation, Brightness\n\n// Effect colors (HSB mode)\nlet hue2 = 0,\n  sat2 = 100,\n  br2 = 100; // Hue, Saturation, Brightness\nlet hue2A, hue2B, hue2C; // Variants of hue2 for effects\n\nfunction preload() {\n  song = loadSound(\"beach.mp3\");\n}\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  colorMode(HSB, 360, 100, 100, 100);\n  createFilmGrain(0, 0, windowWidth, windowHeight, 500, 3);\n  song.loop();\n\n  fft = new p5.FFT();\n\n  fft.setInput(song);\n  wavefWidth = windowWidth;\n}\n\nfunction mousePressed() {\n  if (sun.isPlaying()) {\n    song.pause();\n  } else {\n    song.loop();\n  }\n}\n\nfunction draw() {\n  frameRate(FR);\n  background(hue1, sat1, br1, 50);\n  // Generate hue variants for effects\n  hue2A = (hue2 + 240) % 360;\n  hue2B = (hue2 + 290) % 360;\n  hue2C = (hue2 + 330) % 360;\n\n  myWave(hue2B, sat2, br2);\n  wavePoints(hue2A, hue2C, sat2, br2);\n\n  if (blur > 0) {\n    filter(BLUR, blur);\n  }\n\n  if (BGbutton === 1) filter(INVERT);\n\n  // Display grain effect\n  updateGrain();\n  displayGrain();\n}\n\n// resize canvas & full screen\n\nfunction mousePressed() {\n  if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {\n    let fs = fullscreen();\n    fullscreen(!fs);\n  }\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n  createFilmGrain(0, 0, windowWidth, windowHeight, 500, 3);\n\n  fft = new p5.FFT();\n\n  fft.setInput(song);\n  wavefWidth = windowWidth;\n}\n\nfunction wavePoints(H1, H2, S, B) {\n  let waveArray = fft.waveform();\n\n  for (let i = 0; i < wavefWidth; i++) {\n    let waveIndex = floor(map(i, 0, wavefWidth, 0, waveArray.length));\n\n    x = i;\n    y = waveArray[waveIndex] * 200 + windowHeight / 2;\n\n    noStroke();\n    pointSize = random(2, 4);\n    fill(H1, S, B);\n    rect(x, y - 100, pointSize);\n    fill(H2, S, B);\n    rect(x, y + 100, pointSize);\n  }\n}\n\nfunction myWave(H, S, B) {\n  let myWaveform = fft.waveform();\n  noFill();\n  stroke(H, S, B);\n  strokeWeight(2);\n  beginShape();\n  for (let w = 0; w < myWaveform.length; w++) {\n    let wh = myWaveform[w] / 2;\n    let y = map(wh, -1, 1, 0, windowHeight);\n    let x = map(w, 0, myWaveform.length, 0, windowWidth);\n    vertex(x, y);\n  }\n  endShape();\n}\n\n// Update and display the grain effect\nfunction updateGrain() {\n  grain.update();\n}\n\nfunction displayGrain() {\n  grain.display();\n}\n\n// Create a film grain effect\nfunction createFilmGrain(x, y, w, h, patternSize, sampleSize) {\n  grain = new FilmGrainEffect(x, y, w, h, patternSize, sampleSize, alpha);\n}\n\nfunction keyPressed() {\n  // Toggle song play/pause with space\n  if (key === \" \" && song.isPlaying()) song.pause();\n  else if (key === \" \") song.loop();\n  // Reset song with left arrow\n  else if (keyCode === LEFT_ARROW) {\n    song.stop();\n    song.loop();\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "672d2da960115d5452f5c678",
        "createdAt": "2024-11-22T22:50:06.909Z",
        "updatedAt": "2024-11-22T22:50:06.909Z",
        "id": "672d2da960115d5452f5c678"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"FilmGrainEffect.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672d2da960115d5452f5c679",
        "createdAt": "2024-11-22T22:50:06.909Z",
        "updatedAt": "2024-11-22T22:50:06.909Z",
        "id": "672d2da960115d5452f5c679"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672d2da960115d5452f5c67a",
        "createdAt": "2024-11-22T22:50:06.909Z",
        "updatedAt": "2024-11-22T22:50:06.909Z",
        "id": "672d2da960115d5452f5c67a"
      },
      {
        "name": "sunshine.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/8cadde6d-93aa-420d-89ef-51e7ea487f30.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672d2db360115d5452f5c67c",
        "createdAt": "2024-11-22T22:50:06.909Z",
        "updatedAt": "2024-11-22T22:50:06.909Z",
        "id": "672d2db360115d5452f5c67c"
      },
      {
        "name": "shiver-short.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/dfd8586e-f5ad-401c-be62-e5ca9f25b921.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672d2f74afb25c257e7a8be6",
        "createdAt": "2024-11-22T22:50:06.909Z",
        "updatedAt": "2024-11-22T22:50:06.909Z",
        "id": "672d2f74afb25c257e7a8be6"
      },
      {
        "name": "beach.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/11bf7701-4540-4dde-a1c5-35dd6fc0a752.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672d46a3d08389c5aed83487",
        "createdAt": "2024-11-22T22:50:06.909Z",
        "updatedAt": "2024-11-22T22:50:06.909Z",
        "id": "672d46a3d08389c5aed83487"
      },
      {
        "name": "sweet.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/20f9b2b8-b68e-444b-a754-465a82bbf586.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672d558843a926adeafd4b48",
        "createdAt": "2024-11-22T22:50:06.909Z",
        "updatedAt": "2024-11-22T22:50:06.909Z",
        "id": "672d558843a926adeafd4b48"
      },
      {
        "name": "data.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/e97e1f3c-e737-4d49-b447-77abf30bae19.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672e7d9bd2aa5413189f2e77",
        "createdAt": "2024-11-22T22:50:06.909Z",
        "updatedAt": "2024-11-22T22:50:06.909Z",
        "id": "672e7d9bd2aa5413189f2e77"
      },
      {
        "name": "FilmGrainEffect.js",
        "content": "class Effects {\n  static counter = 0;\n}\n\nclass FilmGrainEffect {\n  static counter = 0;\n  static index = 0;\n\n  constructor(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.id = \"FilmGrain_\" + Effects.counter++;\n    this.reset(x, y, w, h, patternSize, sampleSize, patternAlpha);\n  }\n\n  reset(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.samples = [];\n    this.currentSampleSet = [];\n    this.patternRefreshInterval = 4;\n    FilmGrainEffect.counter = 0;\n    FilmGrainEffect.index = 0;\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.p = patternSize;\n    this.s = sampleSize;\n    this.a = map(patternAlpha, 0, 1, 0, 255);\n    for (let i = 0; i < sampleSize; i++) {\n      this.samples.push(\n        this.pattern(this.x, this.y, this.w, this.h, this.p, this.a)\n      );\n    }\n  }\n\n  add(effect) {}\n\n  pattern(x, y, w, h, patternSize, patternAlpha) {\n    // luodaan uusi p5 canvas || create new p5 canvas\n    let pg = createGraphics(patternSize, patternSize);\n    pg.pixelDensity(1);\n\n    // luodaan kohina | create noise\n    pg.loadPixels();\n    for (var _y = 0; _y < patternSize; _y += 1) {\n      for (var _x = 0; _x < patternSize; _x += 1) {\n        let i = (_x + _y * patternSize) * 4;\n        let value = (Math.random() * 255) | 0;\n        pg.pixels[i] = value;\n        pg.pixels[i + 1] = value;\n        pg.pixels[i + 2] = value;\n        pg.pixels[i + 3] = patternAlpha;\n      }\n    }\n    pg.updatePixels();\n\n    // lasketaan kohinapalojen paikat ja tallennetaan ne | calculate position of noise pieces and save them\n    let xlen = w / patternSize;\n    let ylen = h / patternSize;\n\n    let samples = [];\n    for (let i = 0; i < ylen; i++) {\n      for (let j = 0; j < xlen; j++) {\n        let _x = x + patternSize * j;\n        let _y = y + patternSize * i;\n        samples.push({\n          canvas: pg,\n          x: _x,\n          y: _y,\n          w: patternSize,\n          h: patternSize,\n        });\n      }\n    }\n    \n    return samples;\n  }\n\n  update(data) {\n    if (FilmGrainEffect.counter++ === this.patternRefreshInterval) {\n      FilmGrainEffect.counter = 0;\n      FilmGrainEffect.index++;\n      if (!this.samples[FilmGrainEffect.index]) {\n        FilmGrainEffect.index = 0;\n      }\n    }\n    this.currentSampleSet = this.samples[FilmGrainEffect.index];\n  }\n\n  display() {\n    for (let sample of this.currentSampleSet) {\n      image(sample.canvas, sample.x, sample.y, sample.w, sample.h);\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.currentSampleSet;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6740ef7ad76e3ae5eebbde75",
        "createdAt": "2024-11-22T22:50:06.909Z",
        "updatedAt": "2024-11-22T22:50:06.909Z",
        "id": "6740ef7ad76e3ae5eebbde75"
      }
    ],
    "updatedAt": "2024-11-22T22:50:06.909Z",
    "createdAt": "2024-11-07T21:14:49.316Z",
    "id": "nL5Cfv6Oi"
  },
  {
    "_id": "1qK_rziHR",
    "name": "soundWaves - final",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67410b0426640d7452939a3e",
          "67410b0426640d7452939a3f",
          "67410b0426640d7452939a40",
          "67410b0426640d7452939a41",
          "67410b0426640d7452939a42",
          "67410b0426640d7452939a43",
          "67410b0426640d7452939a44",
          "67410b0426640d7452939a45",
          "67410b0426640d7452939a46"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67410b0426640d7452939a3d",
        "createdAt": "2024-11-23T17:07:24.312Z",
        "updatedAt": "2024-11-23T17:07:24.312Z",
        "id": "67410b0426640d7452939a3d"
      },
      {
        "name": "sketch.js",
        "content": "// ------------------- Variables -------------------\n\n// Sound and FFT analysis\nlet song;\nlet fft;\n\n// Waveform visualization\nlet pointSize = 2;\nlet wavefX = 0;\nlet wavefWidth;\n\n// Frame rate and visual effects\nlet FR = 10; // Frame rate (10 to 60)\nlet blur = 0;\nlet BGbutton = 0; // Background inversion toggle\n\n// Grain and transparency\nlet grain;\nlet alpha = 0.0; // Transparency (0 to 1)\n\nlet rot1 = 0,\n  rot2 = 0;\n\n// Background colors (HSB mode)\nlet hue1 = 0,\n  sat1 = 0,\n  br1 = 0; // Hue, Saturation, Brightness\n\n// Effect colors (HSB mode)\nlet hue2 = 0,\n  sat2 = 100,\n  br2 = 100; // Hue, Saturation, Brightness\nlet hue2A, hue2B, hue2C; // Variants of hue2 for effects\n\n// ------------------- Preload Function -------------------\nfunction preload() {\n  // Load the sound file\n  song = loadSound(\"beach.mp3\");\n}\n\n// ------------------- Setup Function -------------------\nfunction setup() {\n  // Create canvas and initialize color mode\n  createCanvas(windowWidth, windowHeight);\n  colorMode(HSB, 360, 100, 100, 100);\n\n  // Create film grain effect and start the song\n  createFilmGrain(0, 0, windowWidth, windowHeight, 500, 3);\n  song.loop();\n\n  // Initialize FFT for waveform analysis\n  fft = new p5.FFT();\n  fft.setInput(song);\n\n  // Set waveform width to match canvas width\n  wavefWidth = windowWidth;\n}\n\n// ------------------- Draw Function -------------------\nfunction draw() {\n  // Set frame rate and draw the background\n  frameRate(FR);\n  hue1 = map(rot1, 0, 23, 0, 360);\n  hue2 = map(rot2, 0, 23, 0, 360);\n  background(hue1, sat1, br1, 40); // Transparent background with alpha\n\n  // Generate hue variants for visual effects\n  hue2A = (hue2 + 240) % 360;\n  hue2B = (hue2 + 290) % 360;\n  hue2C = (hue2 + 330) % 360;\n\n  // Draw waveform and points\n  myWave(hue2B, sat2, br2);\n  wavePoints(hue2A, hue2C, sat2, br2);\n\n  // Apply visual effects if enabled\n  if (blur > 0) filter(BLUR, blur);\n  if (BGbutton === 1) filter(INVERT);\n\n  // Display grain effect\n  updateGrain();\n  displayGrain();\n}\n\n// ------------------- Mouse Interaction -------------------\n\n// Toggle fullscreen on mouse press\nfunction mousePressed() {\n  if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {\n    fullscreen(!fullscreen());\n  }\n}\n\n// ------------------- Resize Handling -------------------\nfunction windowResized() {\n  // Resize canvas and recreate film grain\n  resizeCanvas(windowWidth, windowHeight);\n  createFilmGrain(0, 0, windowWidth, windowHeight, 500, 3);\n\n  // Reinitialize FFT\n  fft = new p5.FFT();\n  fft.setInput(song);\n\n  // Update waveform width\n  wavefWidth = windowWidth;\n}\n\n// ------------------- Waveform Functions -------------------\n\n// Draw waveform points with color variations\nfunction wavePoints(H1, H2, S, B) {\n  let waveArray = fft.waveform();\n\n  for (let i = 0; i < wavefWidth; i++) {\n    // Map pixel positions to waveform data\n    let waveIndex = floor(map(i, 0, wavefWidth, 0, waveArray.length));\n\n    // Calculate point coordinates\n    let x = i;\n    let y = waveArray[waveIndex] * 200 + windowHeight / 2;\n\n    // Draw points with alternating colors\n    noStroke();\n    pointSize = random(2, 4);\n    fill(H1, S, B);\n    rect(x, y - 100, pointSize);\n    fill(H2, S, B);\n    rect(x, y + 100, pointSize);\n  }\n}\n\n// Draw the waveform as a line\nfunction myWave(H, S, B) {\n  let myWaveform = fft.waveform();\n\n  // Set up the line style\n  noFill();\n  stroke(H, S, B);\n  strokeWeight(2);\n\n  // Draw the waveform\n  beginShape();\n  for (let w = 0; w < myWaveform.length; w++) {\n    let wh = myWaveform[w] / 2; // Normalize waveform values\n    let y = map(wh, -1, 1, 0, windowHeight); // Map to canvas height\n    let x = map(w, 0, myWaveform.length, 0, windowWidth); // Map to canvas width\n    vertex(x, y);\n  }\n  endShape();\n}\n\n// ------------------- Grain Effect Functions -------------------\n\n// Update the grain effect\nfunction updateGrain() {\n  grain.update();\n}\n\n// Display the grain effect\nfunction displayGrain() {\n  grain.display();\n}\n\n// Create a film grain effect\nfunction createFilmGrain(x, y, w, h, patternSize, sampleSize) {\n  grain = new FilmGrainEffect(x, y, w, h, patternSize, sampleSize, alpha);\n}\n\n// ------------------- Key Interaction -------------------\n\n// Key handling for song control\nfunction keyPressed() {\n  // Toggle song play/pause with space\n  if (key === \" \" && song.isPlaying()) song.pause();\n  else if (key === \" \") song.loop();\n  // Restart song with left arrow\n  else if (keyCode === LEFT_ARROW) {\n    song.stop();\n    song.loop();\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67410b0426640d7452939a43",
        "createdAt": "2024-11-23T17:07:24.312Z",
        "updatedAt": "2024-11-23T17:07:24.312Z",
        "id": "67410b0426640d7452939a43"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"FilmGrainEffect.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67410b0426640d7452939a41",
        "createdAt": "2024-11-23T17:07:24.312Z",
        "updatedAt": "2024-11-23T17:07:24.312Z",
        "id": "67410b0426640d7452939a41"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67410b0426640d7452939a44",
        "createdAt": "2024-11-23T17:07:24.312Z",
        "updatedAt": "2024-11-23T17:07:24.312Z",
        "id": "67410b0426640d7452939a44"
      },
      {
        "name": "sunshine.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/59243a7b-b05f-4434-9562-de76dd083d3d.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67410b0426640d7452939a45",
        "createdAt": "2024-11-23T17:07:24.312Z",
        "updatedAt": "2024-11-23T17:07:24.312Z",
        "id": "67410b0426640d7452939a45"
      },
      {
        "name": "shiver-short.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/2189c506-8d9b-446d-bf29-cda75d0b9788.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67410b0426640d7452939a42",
        "createdAt": "2024-11-23T17:07:24.312Z",
        "updatedAt": "2024-11-23T17:07:24.312Z",
        "id": "67410b0426640d7452939a42"
      },
      {
        "name": "beach.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/d7e5d539-8269-4788-b809-ff1fe892ca68.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67410b0426640d7452939a3f",
        "createdAt": "2024-11-23T17:07:24.312Z",
        "updatedAt": "2024-11-23T17:07:24.312Z",
        "id": "67410b0426640d7452939a3f"
      },
      {
        "name": "sweet.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/8d4ede02-9ba8-4322-8b4c-be2e8d0720fb.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67410b0426640d7452939a46",
        "createdAt": "2024-11-23T17:07:24.312Z",
        "updatedAt": "2024-11-23T17:07:24.312Z",
        "id": "67410b0426640d7452939a46"
      },
      {
        "name": "data.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/7319a0d2-703e-45c6-872a-be7f9c01e114.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67410b0426640d7452939a40",
        "createdAt": "2024-11-23T17:07:24.312Z",
        "updatedAt": "2024-11-23T17:07:24.312Z",
        "id": "67410b0426640d7452939a40"
      },
      {
        "name": "FilmGrainEffect.js",
        "content": "class Effects {\n  static counter = 0;\n}\n\nclass FilmGrainEffect {\n  static counter = 0;\n  static index = 0;\n\n  constructor(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.id = \"FilmGrain_\" + Effects.counter++;\n    this.reset(x, y, w, h, patternSize, sampleSize, patternAlpha);\n  }\n\n  reset(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.samples = [];\n    this.currentSampleSet = [];\n    this.patternRefreshInterval = 4;\n    FilmGrainEffect.counter = 0;\n    FilmGrainEffect.index = 0;\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.p = patternSize;\n    this.s = sampleSize;\n    this.a = map(patternAlpha, 0, 1, 0, 255);\n    for (let i = 0; i < sampleSize; i++) {\n      this.samples.push(\n        this.pattern(this.x, this.y, this.w, this.h, this.p, this.a)\n      );\n    }\n  }\n\n  add(effect) {}\n\n  pattern(x, y, w, h, patternSize, patternAlpha) {\n    // luodaan uusi p5 canvas || create new p5 canvas\n    let pg = createGraphics(patternSize, patternSize);\n    pg.pixelDensity(1);\n\n    // luodaan kohina | create noise\n    pg.loadPixels();\n    for (var _y = 0; _y < patternSize; _y += 1) {\n      for (var _x = 0; _x < patternSize; _x += 1) {\n        let i = (_x + _y * patternSize) * 4;\n        let value = (Math.random() * 255) | 0;\n        pg.pixels[i] = value;\n        pg.pixels[i + 1] = value;\n        pg.pixels[i + 2] = value;\n        pg.pixels[i + 3] = patternAlpha;\n      }\n    }\n    pg.updatePixels();\n\n    // lasketaan kohinapalojen paikat ja tallennetaan ne | calculate position of noise pieces and save them\n    let xlen = w / patternSize;\n    let ylen = h / patternSize;\n\n    let samples = [];\n    for (let i = 0; i < ylen; i++) {\n      for (let j = 0; j < xlen; j++) {\n        let _x = x + patternSize * j;\n        let _y = y + patternSize * i;\n        samples.push({\n          canvas: pg,\n          x: _x,\n          y: _y,\n          w: patternSize,\n          h: patternSize,\n        });\n      }\n    }\n    \n    return samples;\n  }\n\n  update(data) {\n    if (FilmGrainEffect.counter++ === this.patternRefreshInterval) {\n      FilmGrainEffect.counter = 0;\n      FilmGrainEffect.index++;\n      if (!this.samples[FilmGrainEffect.index]) {\n        FilmGrainEffect.index = 0;\n      }\n    }\n    this.currentSampleSet = this.samples[FilmGrainEffect.index];\n  }\n\n  display() {\n    for (let sample of this.currentSampleSet) {\n      image(sample.canvas, sample.x, sample.y, sample.w, sample.h);\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.currentSampleSet;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67410b0426640d7452939a3e",
        "createdAt": "2024-11-23T17:07:24.312Z",
        "updatedAt": "2024-11-23T17:07:24.312Z",
        "id": "67410b0426640d7452939a3e"
      }
    ],
    "createdAt": "2024-11-22T22:51:49.860Z",
    "updatedAt": "2024-11-23T17:07:24.312Z",
    "id": "1qK_rziHR"
  },
  {
    "_id": "Xmz5q42NY",
    "name": "spectrum",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6722b4b825a5a99464f47bc1",
          "6722b4b825a5a99464f47bc2",
          "6722b4b825a5a99464f47bc3"
        ],
        "fileType": "folder",
        "_id": "6722b4b825a5a99464f47bc0",
        "createdAt": "2024-10-31T16:53:07.523Z",
        "updatedAt": "2024-10-31T16:53:07.523Z",
        "id": "6722b4b825a5a99464f47bc0"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n  colorMode(HSB);\n}\n\nfunction draw() {\n  // background(360, 100, 100);\n  for (let x = 0; x < width; x++) {\n    for (let y = 0; y < height; y++) {\n      strokeWeight(2);\n      stroke(360 * (x / width), 100 * (1 - y / height), 100);\n      point(x, y);\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6722b4b825a5a99464f47bc2",
        "createdAt": "2024-10-31T16:53:07.523Z",
        "updatedAt": "2024-10-31T16:53:07.523Z",
        "id": "6722b4b825a5a99464f47bc2"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.10.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6722b4b825a5a99464f47bc1",
        "createdAt": "2024-10-31T16:53:07.523Z",
        "updatedAt": "2024-10-31T16:53:07.523Z",
        "id": "6722b4b825a5a99464f47bc1"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6722b4b825a5a99464f47bc3",
        "createdAt": "2024-10-31T16:53:07.523Z",
        "updatedAt": "2024-10-31T16:53:07.523Z",
        "id": "6722b4b825a5a99464f47bc3"
      }
    ],
    "createdAt": "2024-10-30T22:35:36.840Z",
    "updatedAt": "2024-10-31T16:53:07.523Z",
    "id": "Xmz5q42NY"
  },
  {
    "_id": "WsCUaqjFK",
    "name": "Succinct jump",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67a0d6ef1f0c96000e078160",
          "67a0d6ef1f0c96000e07815f",
          "67a0d6ef1f0c96000e078161"
        ],
        "fileType": "folder",
        "_id": "67a0d6ef1f0c96000e078162",
        "createdAt": "2025-02-03T15:17:36.093Z",
        "updatedAt": "2025-02-03T15:17:36.093Z",
        "id": "67a0d6ef1f0c96000e078162"
      },
      {
        "name": "sketch.js",
        "content": "/*\nInspired by Jongmin Park's sketch from Programming for Artists @ CUNY CCNY Spring 2022\n*/\n\nfunction setup() {\n  createCanvas(600, 600);\n  noStroke();\n}\n\nfunction draw() {\n  \n  let x = mouseX;\n  let y = mouseY;\n  \n  if (mouseIsPressed) {\n    background(80, 150);\n    fill(255, 150);\n  } else {\n    background(150, 80);\n    fill(0, 150);\n  }\n  \n  circle(x, height / 2, y);\n\n  let inverseX = width + mouseX;\n  let inverseY = height - mouseY;\n\n  circle(inverseX, height / 2, inverseY);\n\n  if (mouseY < height / 3) {\n    fill(20, 150);\n    rect(0, 0, width, height / 3);\n  } else if (mouseY < height / 3) {\n    fill(80, 150);\n    rect(0, height / 3, width, height);\n  } else {\n    fill(140, 150);\n    rect(0, height / 3 * 2, width, height / 3);\n  }\n}",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67a0d6ef1f0c96000e07815f",
        "createdAt": "2025-02-03T15:17:36.093Z",
        "updatedAt": "2025-02-03T15:17:36.093Z",
        "id": "67a0d6ef1f0c96000e07815f"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "67a0d6ef1f0c96000e078160",
        "createdAt": "2025-02-03T15:17:36.093Z",
        "updatedAt": "2025-02-03T15:17:36.093Z",
        "id": "67a0d6ef1f0c96000e078160"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "67a0d6ef1f0c96000e078161",
        "createdAt": "2025-02-03T15:17:36.093Z",
        "updatedAt": "2025-02-03T15:17:36.093Z",
        "id": "67a0d6ef1f0c96000e078161"
      }
    ],
    "updatedAt": "2025-02-03T15:17:36.094Z",
    "createdAt": "2025-02-03T15:17:36.094Z",
    "id": "WsCUaqjFK"
  },
  {
    "_id": "2m3G6YlVi",
    "name": "Tempo / Speed COPY",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67ab9e327596111246dee102",
          "67ab9e327596111246dee103",
          "67ab9e327596111246dee106",
          "67ab9e327596111246dee107"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67ab9e327596111246dee101",
        "createdAt": "2025-02-11T19:24:13.945Z",
        "updatedAt": "2025-02-11T19:24:13.945Z",
        "id": "67ab9e327596111246dee101"
      },
      {
        "name": "sketch.js",
        "content": "// Play the kick drum once per second\n\n\n// Create a Player object and load the \"kick.mp3\" file\nconst kick = new Tone.Player(\"samples/505/kick.mp3\");\n\n// Connect the player output to the computer's audio output\nkick.toDestination();\n\n// Set the tempo / speed, which is measured in 'beats per minute', or bpm.\n// Try setting the bpm to different values\nTone.Transport.bpm.value = 120;\n// Our speed is now 120 beats per minute = 2 beats per second. \n// --> each beat lasts 0.5 seconds.\n// --> quarter note duration is set to 0.5 seconds \n// (by default, Tone sets the time signature to be 4/4. \n// the denominator says that the duration of the beat is the duration of a quarter note)\n\n// Create a loop: call the function playBeat every quarter note \n// \"4n\" stands for quarter note. Try replacing \"4n\" with \"2n\", \"8n\", \"16n\" \nTone.Transport.scheduleRepeat(playPulse, \"4n\");\n// See documentation here: https://github.com/Tonejs/Tone.js/wiki/Time\n\nfunction playPulse(time){\n  kick.start(time);\n}\n\n// Interface: p5 functions\nfunction setup(){  \n  btn = createButton(\"play\");\n  btn.mousePressed(togglePlay);\n  btn.position(0, 0);\n}\n\nfunction togglePlay(){\n  if(Tone.Transport.state == \"started\"){\n    Tone.Transport.pause();\n    btn.html(\"play\");\n  }\n  else{\n    Tone.Transport.start();\n    btn.html(\"pause\");\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67ab9e327596111246dee106",
        "createdAt": "2025-02-11T19:24:13.945Z",
        "updatedAt": "2025-02-11T19:24:13.945Z",
        "id": "67ab9e327596111246dee106"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/tone/14.8.9/Tone.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ab9e327596111246dee102",
        "createdAt": "2025-02-11T19:24:13.945Z",
        "updatedAt": "2025-02-11T19:24:13.945Z",
        "id": "67ab9e327596111246dee102"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ab9e327596111246dee107",
        "createdAt": "2025-02-11T19:24:13.945Z",
        "updatedAt": "2025-02-11T19:24:13.945Z",
        "id": "67ab9e327596111246dee107"
      },
      {
        "name": "samples",
        "content": "",
        "children": [
          "67ab9e327596111246dee104"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67ab9e327596111246dee103",
        "createdAt": "2025-02-11T19:24:13.945Z",
        "updatedAt": "2025-02-11T19:24:13.945Z",
        "id": "67ab9e327596111246dee103"
      },
      {
        "name": "505",
        "content": "",
        "children": [
          "67ab9e327596111246dee105"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67ab9e327596111246dee104",
        "createdAt": "2025-02-11T19:24:13.945Z",
        "updatedAt": "2025-02-11T19:24:13.945Z",
        "id": "67ab9e327596111246dee104"
      },
      {
        "name": "kick.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/28cb9155-5eb7-4384-96c2-19388b54a11d.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67ab9e327596111246dee105",
        "createdAt": "2025-02-11T19:24:13.945Z",
        "updatedAt": "2025-02-11T19:24:13.945Z",
        "id": "67ab9e327596111246dee105"
      }
    ],
    "createdAt": "2025-02-11T19:00:02.720Z",
    "updatedAt": "2025-02-11T19:24:13.945Z",
    "id": "2m3G6YlVi"
  },
  {
    "_id": "hmyCLota9",
    "name": "Tone.Oscillator starter",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67d9a6e0f917067d8864aa47",
          "67d9a6e0f917067d8864aa48",
          "67d9a6e0f917067d8864aa49"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67d9a6e0f917067d8864aa46",
        "createdAt": "2025-03-18T17:19:22.112Z",
        "updatedAt": "2025-03-18T17:19:22.112Z",
        "id": "67d9a6e0f917067d8864aa46"
      },
      {
        "name": "sketch.js",
        "content": "// Tone.Oscillator allows you to deal with multiple oscillators at the same time\nlet osc = new Tone.Oscillator(261.63, \"sine\");\nosc.volume.value = -12;\n\nlet ampEnv1 = new Tone.AmplitudeEnvelope({\n  attack: 0.01,\n  decay: 0.6,\n  sustain: 0.1,\n  release: 0.8,\n});\n\nosc.connect(ampEnv1);\nampEnv1.toMaster();\nosc.start();\n\nfunction setup() {}\n\nfunction updateVolume() {\n  osc.volume.rampTo(this.value());\n}\n\nfunction draw() {\n  background(220);\n}\n\nfunction keyPressed() {\n  ampEnv1.triggerAttack();\n}\n\nfunction keyReleased() {\n  ampEnv1.triggerRelease();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67d9a6e0f917067d8864aa48",
        "createdAt": "2025-03-18T17:19:22.112Z",
        "updatedAt": "2025-03-18T17:19:22.112Z",
        "id": "67d9a6e0f917067d8864aa48"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.2/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/tone/13.0.1/Tone.min.js\" type=\"text/javascript\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d9a6e0f917067d8864aa47",
        "createdAt": "2025-03-18T17:19:22.112Z",
        "updatedAt": "2025-03-18T17:19:22.112Z",
        "id": "67d9a6e0f917067d8864aa47"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67d9a6e0f917067d8864aa49",
        "createdAt": "2025-03-18T17:19:22.112Z",
        "updatedAt": "2025-03-18T17:19:22.112Z",
        "id": "67d9a6e0f917067d8864aa49"
      }
    ],
    "createdAt": "2025-03-18T17:01:20.891Z",
    "updatedAt": "2025-03-18T17:19:22.112Z",
    "id": "hmyCLota9"
  },
  {
    "_id": "ppvLe_mKm",
    "name": "tongue-twister",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67462145719eb60b013caafb",
          "67462145719eb60b013caafc",
          "67462145719eb60b013caafd",
          "6746217ec17ab28bd539fa9e"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67462145719eb60b013caafa",
        "createdAt": "2024-11-26T20:03:41.445Z",
        "updatedAt": "2024-11-26T20:03:41.445Z",
        "id": "67462145719eb60b013caafa"
      },
      {
        "name": "sketch.js",
        "content": "let myTwister;\nlet allWords = [];\n\nfunction preload() {\n  myTwister = loadStrings(\"/twister.txt\");\n}\n\nfunction setup() {\n  createCanvas(625, 200);\n  background(200);\n  textFont(\"Courier New\", 14);\n  textStyle(BOLDITALIC);\n  background(0);\n}\n\nfunction draw() {\n  // split lines\n  for (let i = 0; i < myTwister.length; i++) {\n    let words = splitTokens(myTwister[i]);\n    for (let j = 0; j < words.length; j++) {\n      append(allWords, words[j]);\n    }\n  }\n  shuffle(allWords, true);\n\n  // five lines of text with 10-13 words per line\n  let y = 40;\n  for (let i = 0; i < 5; i++) {\n    let lineLength = int(random(10, 13)); // Random length between 10 and 13 words\n    let lineWords = allWords.splice(0, lineLength); // get words\n    let newLine = join(lineWords, \" \"); // Join words into a single string\n    fill(random(0, 255), random(0, 255), random(0, 255));\n    text(newLine, 10, y); // Draw the line on the canvas\n    y += 30; // Move y-coordinate for the next line\n  }\n  noLoop();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67462145719eb60b013caafc",
        "createdAt": "2024-11-26T20:03:41.445Z",
        "updatedAt": "2024-11-26T20:03:41.445Z",
        "id": "67462145719eb60b013caafc"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67462145719eb60b013caafb",
        "createdAt": "2024-11-26T20:03:41.445Z",
        "updatedAt": "2024-11-26T20:03:41.445Z",
        "id": "67462145719eb60b013caafb"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67462145719eb60b013caafd",
        "createdAt": "2024-11-26T20:03:41.445Z",
        "updatedAt": "2024-11-26T20:03:41.445Z",
        "id": "67462145719eb60b013caafd"
      },
      {
        "name": "twister.txt",
        "content": "Betty Botter bought some butter but, said she, the butter’s bitter.\nIf I put it in my batter, it will make my batter bitter.\nBut a bit of better butter will make my bitter batter better.\nSo she bought some better butter, better than the bitter butter,\nput it in her bitter batter, made her bitter batter better.\nSo ‘t was better Betty Botter bought some better butter.",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6746217ec17ab28bd539fa9e",
        "createdAt": "2024-11-26T20:03:41.445Z",
        "updatedAt": "2024-11-26T20:03:41.445Z",
        "id": "6746217ec17ab28bd539fa9e"
      }
    ],
    "createdAt": "2024-11-26T19:28:06.638Z",
    "updatedAt": "2024-11-26T20:03:41.445Z",
    "id": "ppvLe_mKm"
  },
  {
    "_id": "MvQ3u87xH",
    "name": "videoKILL",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "674f6b994fd105ffc39ab22b",
          "674f6b994fd105ffc39ab22c",
          "674f6b994fd105ffc39ab22d"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "674f6b994fd105ffc39ab22a",
        "createdAt": "2024-12-03T20:35:58.116Z",
        "updatedAt": "2024-12-03T20:35:58.116Z",
        "id": "674f6b994fd105ffc39ab22a"
      },
      {
        "name": "sketch.js",
        "content": "// ------------------- Global Variables -------------------\n\n// Frame rate and visual effects\nlet FR = 60; // Frame rate (10 to 60)\nlet blur = 0;\nlet bgButton = 0; // Inversion toggle\nlet rain = 0; // Rain state variable\n\n// Grain and transparency\nlet grain;\nlet grainA = 0; // Transparency (0 to 1)\nlet prevA;\n\n// Body segmentation variables\nlet bodySegmentation;\nlet video;\nlet segmentation;\nlet personImage;\n\n// Grid settings\nlet gridSize; // Number of rows and columns in the grid (1 to 10)\nlet rot2 = 11; // Rotary value to video grid mapping\n\n// Delay variables\nlet delay = 0; // Delay toggle (0 = off, 1 = on)\nlet buffers = []; // Array to hold per-cell frame buffers\nlet maxDelay = 20; // Maximum delay multiplier for buffer size\n\n// Color variables for interactive controls\nlet pot1 = 0;\nlet pot2 = 0;\nlet Rval = 0,\n  Bval = 0,\n  Hval1 = 0,\n  Hval2 = 0;\n\n// Background colors (HSB mode)\nlet rot1 = 0,\n  sat1 = 0,\n  br1 = 0; // Hue, Saturation, Brightness\n\n// BodyPix options\nconst options = { maskType: \"parts\" };\n\n// Fixed dimensions for video and canvas\nconst videoWidth = 600;\nconst videoHeight = 400;\n\n// Rain and Ball Effects\nlet drop = [];\nlet bballs = [];\nlet ballsEffect = 0; // Toggle for ball effect\n\n// Laser settings\nlet laser = 0; // Toggle laser effect\nlet xLength, yLength;\nlet leftLine = { x1: 0, y1: 0, x2: 0, y2: 0, offset: 0 };\nlet rightLine = { x1: 0, y1: 0, x2: 0, y2: 0, offset: 0 };\nlet distValue = 10; // Laser line spacing\nlet lineValue = 75; // Number of laser lines\nlet distDirection = 1; // Controls \"opening\" or \"closing\"\nlet lineDirection = 1; // Expanding or shrinking the number of lines\n\n// Serial communication variables\nconst serial = new p5.WebSerial();\nlet portButton;\nlet inData = [];\nlet inString = [];\nlet outByte = 0; // Outgoing data\n\n// ------------------- Preload -------------------\n\nfunction preload() {\n  // Load the body segmentation model\n  bodySegmentation = ml5.bodySegmentation(\"BodyPix\", options);\n}\n\n// ------------------- Setup -------------------\n\nfunction setup() {\n  createCanvas(videoWidth, videoHeight);\n  colorMode(HSB, 360, 100, 100, 100);\n\n  // Initialize effects\n  xLength = windowWidth;\n  yLength = windowHeight;\n  initializeLines();\n  initializeDrops();\n  initializeBalls();\n\n  // Create video capture\n  video = createCapture(VIDEO);\n  video.size(videoWidth, videoHeight);\n  video.hide();\n\n  // Start body segmentation\n  bodySegmentation.detectStart(video, gotResults);\n\n  // Create an image for segmented output\n  personImage = createImage(video.width, video.height);\n\n  // Initialize film grain effect\n  createFilmGrain(0, 0, videoWidth, videoHeight, 500, 3);\n\n  // Set up serial communication\n  setupSerial();\n}\n\n// ------------------- Draw -------------------\n\nfunction draw() {\n  background(rot1, sat1, br1);\n  frameRate(FR);\n\n  // Map potentiometer values to colors\n  Rval = map(pot1, 0, 100, 0, 255);\n  Bval = map(pot2, 0, 100, 0, 255);\n  Hval1 = map(pot1, 0, 100, 0, 360);\n  Hval2 = map(pot2, 0, 100, 0, 360);\n  let ranH1 = random((Hval1 + 0) % 360, (Hval1 + 50) % 360);\n  let ranH2 = random((Hval2 + 0) % 360, (Hval2 + 50) % 360);\n\n  // Ball effect\n  if (ballsEffect === 1) {\n    for (let ball of bballs) ball.draw();\n  }\n\n  // Laser effect\n  if (laser === 1) {\n    updateLaserMotion();\n    animateValues();\n    drawLasers();\n  }\n\n  // Rain effect\n  if (rain === 1) {\n    for (let drop of drops) {\n      drop.show();\n      drop.update();\n    }\n  }\n\n  // Light and ripple effects\n  myLightA(ranH1, 100, 100);\n  myRipple1(ranH2, 100, 100);\n\n  // Segmented video grid\n  if (segmentation) {\n    copyForegroundPixels(video, segmentation.mask, personImage);\n    delay === 1 ? drawDelayedGrid() : drawGrid(personImage);\n  }\n\n  // Visual filters\n  if (blur > 0) filter(BLUR, blur);\n  if (bgButton === 1) filter(INVERT);\n\n  // Film grain effect\n  if (grainA != prevA) {\n    createFilmGrain(0, 0, windowWidth, windowHeight, 500, 3);\n    prevA = grainA;\n  }\n  updateGrain();\n  displayGrain();\n}\n\n// ------------------- Effects Initialization -------------------\n\nfunction initializeBalls() {\n  bballs = [];\n  for (let i = 0; i < 700; i++) {\n    bballs.push(\n      new Ball(\n        random(0, windowWidth),\n        random(0, windowHeight),\n        random(10, 30),\n        random(0.5, 2),\n        random(windowHeight / 2, windowHeight)\n      )\n    );\n  }\n}\n\nfunction initializeDrops() {\n  drops = [];\n  let numDrops = floor((width * height) / 4000);\n  for (let i = 0; i < numDrops; i++) drops.push(new Drop());\n}\n\nfunction initializeLines() {\n  leftLine.x1 = 0;\n  leftLine.y1 = yLength;\n  leftLine.x2 = xLength;\n  leftLine.y2 = 0;\n\n  rightLine.x1 = xLength;\n  rightLine.y1 = yLength;\n  rightLine.x2 = 0;\n  rightLine.y2 = 0;\n}\n\n// ------------------- Classes -------------------\n\nclass Ball {\n  constructor(xpos, ypos, w, dy, limit) {\n    this.xpos = xpos;\n    this.ypos = ypos;\n    this.w = w;\n    this.dy = dy;\n    this.limit = windowHeight;\n    this.colorOffset = random(240, 350);\n  }\n\n  getColor() {\n    return (Hval1 + this.colorOffset) % 360;\n  }\n\n  draw() {\n    this.move();\n    noStroke();\n    fill(this.getColor(), 100, 50, 80);\n    circle(this.xpos, this.ypos, this.w);\n  }\n\n  move() {\n    if (this.ypos + this.w / 2 >= this.limit || this.ypos - this.w / 2 <= 0)\n      this.dy = -this.dy;\n    this.ypos += this.dy;\n  }\n}\n\nfunction Drop() {\n  this.x = random(0, width);\n  this.y = random(0, height);\n\n  this.show = function () {\n    stroke(Hval1, 100, 100);\n    strokeWeight(1);\n    fill(Hval2, 100, 100);\n    ellipse(this.x, this.y, random(1, 5), random(1, 5));\n  };\n\n  this.update = function () {\n    this.speed = 20;\n    this.gravity = 1.05;\n    this.y += this.speed * this.gravity;\n\n    if (this.y > height) {\n      this.y = random(0, -height);\n      this.gravity = 0;\n    }\n  };\n}\n\n// ------------------- Utility Functions -------------------\n\nfunction windowResized() {\n  xLength = windowWidth;\n  yLength = windowHeight;\n  resizeCanvas(xLength, yLength);\n  initializeLines();\n  initializeDrops();\n  initializeBalls();\n}\n\n// Key and interaction logic\nfunction keyPressed() {\n  if (key === \"b\" || key === \"B\") ballsEffect = 1 - ballsEffect;\n  if (key === \"r\" || key === \"R\") rain = 1 - rain;\n  if (key === \"l\" || key === \"L\") laser = 1 - laser;\n  if (keyCode === 27) fullscreen(!fullscreen());\n}\n\n// Serial Communication Setup\nfunction setupSerial() {\n  if (!navigator.serial)\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n  serial.getPorts();\n  serial.on(\"noport\", makePortButton);\n  serial.on(\"portavailable\", openPort);\n  serial.on(\"requesterror\", portError);\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n}\n\n// Serial Communication Handlers\nfunction portConnect() {\n  serial.getPorts();\n}\nfunction portDisconnect() {\n  serial.close();\n}\nfunction makePortButton() {\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  portButton.mousePressed(() => serial.requestPort());\n}\nfunction openPort() {\n  serial.open().then(() => console.log(\"port open\"));\n}\nfunction portError(err) {\n  console.error(\"Serial port error:\", err);\n}\nfunction serialEvent() {\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  if (inString != null) {\n    let list = split(trim(inString), \",\");\n    if (list.length > 15) {\n      // Parsing logic remains unchanged\n    }\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "674f6b994fd105ffc39ab22d",
        "createdAt": "2024-12-03T20:35:58.116Z",
        "updatedAt": "2024-12-03T20:35:58.116Z",
        "id": "674f6b994fd105ffc39ab22d"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.2/p5.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@0.20.0-alpha.4/dist/ml5.min.js\"></script>\n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n    \n  </head>\n  <body>\n    <script src=\"FilmGrainEffect.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674f6b994fd105ffc39ab22c",
        "createdAt": "2024-12-03T20:35:58.116Z",
        "updatedAt": "2024-12-03T20:35:58.116Z",
        "id": "674f6b994fd105ffc39ab22c"
      },
      {
        "name": "FilmGrainEffect.js",
        "content": "class Effects {\n  static counter = 0;\n}\n\nclass FilmGrainEffect {\n  static counter = 0;\n  static index = 0;\n\n  constructor(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.id = \"FilmGrain_\" + Effects.counter++;\n    this.reset(x, y, w, h, patternSize, sampleSize, patternAlpha);\n  }\n\n  reset(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.samples = [];\n    this.currentSampleSet = [];\n    this.patternRefreshInterval = 4;\n    FilmGrainEffect.counter = 0;\n    FilmGrainEffect.index = 0;\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.p = patternSize;\n    this.s = sampleSize;\n    this.a = map(patternAlpha, 0, 1, 0, 255);\n    for (let i = 0; i < sampleSize; i++) {\n      this.samples.push(\n        this.pattern(this.x, this.y, this.w, this.h, this.p, this.a)\n      );\n    }\n  }\n\n  add(effect) {}\n\n  pattern(x, y, w, h, patternSize, patternAlpha) {\n    // luodaan uusi p5 canvas || create new p5 canvas\n    let pg = createGraphics(patternSize, patternSize);\n    pg.pixelDensity(1);\n\n    // luodaan kohina | create noise\n    pg.loadPixels();\n    for (var _y = 0; _y < patternSize; _y += 1) {\n      for (var _x = 0; _x < patternSize; _x += 1) {\n        let i = (_x + _y * patternSize) * 4;\n        let value = (Math.random() * 255) | 0;\n        pg.pixels[i] = value;\n        pg.pixels[i + 1] = value;\n        pg.pixels[i + 2] = value;\n        pg.pixels[i + 3] = patternAlpha;\n      }\n    }\n    pg.updatePixels();\n\n    // lasketaan kohinapalojen paikat ja tallennetaan ne | calculate position of noise pieces and save them\n    let xlen = w / patternSize;\n    let ylen = h / patternSize;\n\n    let samples = [];\n    for (let i = 0; i < ylen; i++) {\n      for (let j = 0; j < xlen; j++) {\n        let _x = x + patternSize * j;\n        let _y = y + patternSize * i;\n        samples.push({\n          canvas: pg,\n          x: _x,\n          y: _y,\n          w: patternSize,\n          h: patternSize,\n        });\n      }\n    }\n    \n    return samples;\n  }\n\n  update(data) {\n    if (FilmGrainEffect.counter++ === this.patternRefreshInterval) {\n      FilmGrainEffect.counter = 0;\n      FilmGrainEffect.index++;\n      if (!this.samples[FilmGrainEffect.index]) {\n        FilmGrainEffect.index = 0;\n      }\n    }\n    this.currentSampleSet = this.samples[FilmGrainEffect.index];\n  }\n\n  display() {\n    for (let sample of this.currentSampleSet) {\n      image(sample.canvas, sample.x, sample.y, sample.w, sample.h);\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.currentSampleSet;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674f6b994fd105ffc39ab22b",
        "createdAt": "2024-12-03T20:35:58.116Z",
        "updatedAt": "2024-12-03T20:35:58.116Z",
        "id": "674f6b994fd105ffc39ab22b"
      }
    ],
    "createdAt": "2024-12-03T20:35:37.858Z",
    "updatedAt": "2024-12-03T20:35:58.116Z",
    "id": "MvQ3u87xH"
  },
  {
    "_id": "e5eQotsBQ",
    "name": "videoKILL - fin",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67509f8203934283e0fae0e0",
          "67509f8203934283e0fae0e1",
          "67509f8203934283e0fae0e2"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67509f8203934283e0fae0df",
        "createdAt": "2024-12-15T17:55:51.119Z",
        "updatedAt": "2024-12-15T17:55:51.119Z",
        "id": "67509f8203934283e0fae0df"
      },
      {
        "name": "sketch.js",
        "content": "// ------------------- Global Variables -------------------\n\n// Frame rate and visual effects\nlet FR = 0; // Frame rate (10 to 60)\nlet blur = 0; // Blur effect strength\nlet bgButton = 0; // Background inversion toggle\nlet rain = 0; // Rain effect toggle\n\n// Grain and transparency\nlet grain; // Grain effect instance\nlet grainA = 0; // Grain transparency (0 to 1)\nlet prevA; // Previous grain transparency for comparison\n\n// Body segmentation variables\nlet bodySegmentation; // Body segmentation instance\nlet video; // Video capture\nlet segmentation; // Body segmentation results\nlet personImage; // Image for segmented body output\n\n// Grid settings\nlet gridSize; // Number of rows and columns in the grid (1 to 10)\nlet rot2 = 11; // Rotary control for grid columns and rows\n\n// Delay variables for grid effect\nlet delay = 0; // Delay toggle (0 = off, 1 = on)\nlet buffers = []; // Buffers for delayed frames\nlet maxDelay = 20; // Maximum delay multiplier for buffer size\n\n// Color variables for interactive controls\nlet pot1 = 0,\n  pot2 = 0; // Potentiometer values\nlet Rval = 0,\n  Bval = 0; // Mapped red and blue values\nlet Hval1 = 0,\n  Hval2 = 0; // Mapped hue values for visual effects\n\n// Background colors (HSB mode)\nlet rot1 = 0,\n  hue = 0,\n  sat1 = 0,\n  br1 = 0; // Hue, Saturation, Brightness\n\n// BodyPix options\nlet options = { maskType: \"parts\" };\n\n// Fixed dimensions for video and canvas\nconst videoWidth = 600;\nconst videoHeight = 400;\n\n// Raindrop and ball effect variables\nlet drop = []; // Drops for rain effect\nlet bballs = []; // Ball objects for effect\nlet ballsEffect = 0; // Toggle for ball effect\n\n// Ripple effect variables\nlet ripples = []; // Ripple objects\nlet rippleA = 0; // Ripple toggle\n\n// Lightning effect variables\nlet lightA = 0; // Lightning effect toggle\n\n// p5.webserial library instance and related variables\nconst serial = new p5.WebSerial(); // WebSerial library instance\nlet portButton; // Button for port selection\nlet inData = []; // Array for incoming serial data\nlet inString = []; // String for incoming serial data\nlet outByte = 0; // Byte for outgoing serial data\n\n// Variables for laser effect\nlet laser = 0; // Laser toggle\nlet leftLine = {},\n  rightLine = {}; // Laser line positions\nlet distValue = 10; // Distance between laser lines\nlet lineValue = 75; // Number of laser lines\nlet distDirection = 1; // Direction for distance animation\nlet lineDirection = 1; // Direction for line count animation\n\n// ------------------- Preload -------------------\n\nfunction preload() {\n  // Load the body segmentation model\n  bodySegmentation = ml5.bodySegmentation(\"BodyPix\", options);\n}\n\n\n// ------------------- Setup -------------------\n\nfunction setup() {\n  \n  createCanvas(videoWidth, videoHeight); // Canvas setup\n  colorMode(HSB, 360, 100, 100, 100); // Use HSB color mode\n\n  xLength = windowWidth;\n  yLength = windowHeight;\n\n  initializeLines(); // Initialize laser lines\n  initializeDrops(); // Initialize rain drops\n  initializeBalls(); // Initialize balls for visual effect\n\n    // Enumerate video input devices\n  navigator.mediaDevices.enumerateDevices()\n    .then((devices) => {\n      let videoDevices = devices.filter(device => device.kind === 'videoinput');\n\n      if (videoDevices.length > 1) {\n        // Use the external camera (e.g., the second device)\n        let constraints = {\n          video: { deviceId: { exact: videoDevices[1].deviceId } } // Correctly specify deviceId\n        };\n        video = createCapture(constraints, () => {\n          console.log(\"External webcam activated\");\n        });\n      } else {\n        // Fallback to the default/internal webcam\n        video = createCapture(VIDEO, () => {\n          console.log(\"Using internal webcam\");\n        });\n      }\n\n      video.size(videoWidth, videoHeight);\n      video.hide();\n\n      // Start body segmentation\n      bodySegmentation.detectStart(video, gotResults); // Start body segmentation\n      personImage = createImage(video.width, video.height); // Image for segmented body\n      createFilmGrain(0, 0, videoWidth, videoHeight, 500, 3); // Create grain effect\n    })\n    .catch((err) => {\n      console.error(\"Error accessing video devices:\", err);\n    });\n\n  // Setup WebSerial events\n  setupWebSerial();\n}\n\n// Handle resizing the window dynamically\nfunction windowResized() {\n  xLength = windowWidth;\n  yLength = windowHeight;\n  resizeCanvas(xLength, yLength);\n  initializeLines();\n  initializeDrops();\n  initializeBalls();\n}\n\n// ------------------- Draw -------------------\n\nfunction draw() {\n  // Set background color\n  background(hue, sat1, br1);\n\n  // Map potentiometer values to colors\n  mapPotentiometerValues();\n\n  // // Set frame rate\n  // frameRate(FR);\n\n  // Ball effect\n  if (ballsEffect === 1) drawBalls();\n\n  // Laser effect\n  if (laser === 1) drawLasersWithAnimation();\n\n  // Rain effect\n  if (rain === 1) drawRainDrops();\n\n  // Ripple effect\n  drawRipples();\n\n  myLightA(ranH1, 100, 100);\n\n  // Segmented video grid\n  drawSegmentedVideoGrid();\n\n  // Apply visual effects (blur, invert, grain)\n  applyVisualEffects();\n}\n\n// ------------------- Helper Functions -------------------\n\n// Potentiometer mapping for colors\nfunction mapPotentiometerValues() {\n  hue = map(rot1, 0, 23, 0, 360);\n  Rval = map(pot1, 0, 100, 0, 255);\n  Bval = map(pot2, 0, 100, 0, 255);\n  Hval1 = map(pot1, 0, 100, 0, 360);\n  Hval2 = map(pot2, 0, 100, 0, 360);\n  ranH1 = random((Hval1 + 0) % 360, (Hval1 + 50) % 360);\n  ranH2 = random((Hval2 + 0) % 360, (Hval2 + 50) % 360);\n}\n\n// Draw ball effect\nfunction drawBalls() {\n  for (let ball of bballs) {\n    ball.draw();\n  }\n}\n\n// Draw rain effect\nfunction drawRainDrops() {\n  for (let i = 0; i < drops.length; i++) {\n    drops[i].show();\n    drops[i].update();\n  }\n}\n\n// Handle ripple effect\nfunction drawRipples() {\n  if (rippleA === 1 && frameCount % 10 === 0) {\n    ripples.push(new Ripple(random(width), random(height), ranH1));\n  }\n\n  for (let i = ripples.length - 1; i >= 0; i--) {\n    ripples[i].draw();\n    if (ripples[i].isFinished()) ripples.splice(i, 1);\n  }\n}\n\n// Initialize buffers for grid cells if not already done\nfunction initializeBuffers(cols, rows) {\n  let totalCells = cols * rows;\n  if (buffers.length !== totalCells) {\n    buffers = [];\n    for (let i = 0; i < totalCells; i++) {\n      buffers.push([]);\n    }\n  }\n}\nfunction manageBuffers(currentFrame) {\n  let cols = Math.round(map(rot2, 0, 23, 1, 10));\n  let rows = cols;\n  initializeBuffers(cols, rows);\n\n  // Create a new `p5.Image` to store the masked frame\n  let maskedFrame = createImage(video.width, video.height);\n  copyForegroundPixels(currentFrame, segmentation.mask, maskedFrame);\n\n  // Add the masked frame to each buffer\n  for (let i = 0; i < buffers.length; i++) {\n    let delayAmount = (i + 1) * 4; // Per-cell delay factor\n    buffers[i].push(maskedFrame.get()); // Store a copy of the masked frame\n    if (buffers[i].length > delayAmount) {\n      buffers[i].shift();\n    }\n  }\n}\n\nfunction drawDelayedGrid() {\n  let cols = Math.round(map(rot2, 0, 23, 1, 10));\n  let rows = cols;\n  let cellWidth = width / cols;\n  let cellHeight = height / rows;\n\n  for (let y = 0; y < rows; y++) {\n    for (let x = 0; x < cols; x++) {\n      let index = x + y * cols;\n\n      // Display the delayed masked frame from the buffer\n      if (buffers[index].length > 0) {\n        let frameToShow = buffers[index][0];\n        image(\n          frameToShow,\n          x * cellWidth,\n          y * cellHeight,\n          cellWidth,\n          cellHeight\n        );\n      }\n    }\n  }\n}\n\n// Draw the grid with live frames\nfunction drawGrid(segmentedImage) {\n  let cols = Math.round(map(rot2, 0, 23, 1, 10));\n  let rows = cols;\n  let cellWidth = width / cols;\n  let cellHeight = height / rows;\n\n  for (let y = 0; y < rows; y++) {\n    for (let x = 0; x < cols; x++) {\n      let dx = x * cellWidth;\n      let dy = y * cellHeight;\n\n      image(segmentedImage, dx, dy, cellWidth, cellHeight);\n    }\n  }\n}\n\n// Process the segmentation results\nfunction gotResults(result) {\n  segmentation = result;\n}\n\n// Segmented video grid rendering\nfunction drawSegmentedVideoGrid() {\n  if (segmentation) {\n    copyForegroundPixels(video, segmentation.mask, personImage);\n    if (delay === 1) {\n      manageBuffers(personImage);\n      drawDelayedGrid();\n    } else {\n      buffers = []; // Clear buffers when delay is off\n      drawGrid(personImage);\n    }\n  }\n}\n\n// Copy foreground pixels from the video based on the mask\nfunction copyForegroundPixels(imgSource, imgMask, imgResult) {\n  imgSource.loadPixels();\n  imgMask.loadPixels();\n  imgResult.loadPixels();\n\n  const imgWidth = imgSource.width;\n  const imgHeight = imgSource.height;\n  const imgChannels = 4;\n  const numValues = imgWidth * imgHeight * imgChannels;\n  const imgPixels = imgSource.pixels;\n  const maskPixels = imgMask.pixels;\n  const resultPixels = imgResult.pixels;\n\n  for (let i = 0; i < numValues; i += imgChannels) {\n    let maskR = maskPixels[i];\n    let maskG = maskPixels[i + 1];\n    let maskB = maskPixels[i + 2];\n\n    // If the mask pixel is white, clear the result pixel\n    if (maskR === 255 && maskG === 255 && maskB === 255) {\n      resultPixels[i] = 0;\n      resultPixels[i + 1] = 0;\n      resultPixels[i + 2] = 0;\n      resultPixels[i + 3] = 0;\n    } else {\n      // Otherwise, copy the source pixel with applied colors\n      resultPixels[i] = imgPixels[i]; // Red channel unchanged\n      resultPixels[i + 1] = Rval; // Green channel modified by potentiometer\n      resultPixels[i + 2] = Bval; // Blue channel modified by potentiometer\n      resultPixels[i + 3] = 255; // Ensure the pixel is opaque\n    }\n  }\n\n  imgResult.updatePixels();\n}\n\n// Apply visual effects\nfunction applyVisualEffects() {\n  if (blur > 0) filter(BLUR, blur);\n  if (bgButton === 1) filter(INVERT);\n\n  if (grainA !== prevA) {\n    createFilmGrain(0, 0, windowWidth, windowHeight, 500, 3);\n    prevA = grainA;\n  }\n  updateGrain();\n  displayGrain();\n}\n\n// ------------------- Grain Effect -------------------\n\nfunction updateGrain() {\n  grain.update();\n}\n\nfunction displayGrain() {\n  grain.display();\n}\n\nfunction createFilmGrain(x, y, w, h, patternSize, sampleSize) {\n  grain = new FilmGrainEffect(\n    x,\n    y,\n    w,\n    h,\n    patternSize,\n    sampleSize,\n    grainA * 0.1\n  );\n}\n\n// ------------------- Ripple Class -------------------\n\nclass Ripple {\n  constructor(x, y, hue) {\n    this.x = x;\n    this.y = y;\n    this.hue = hue;\n    this.size = 0;\n    this.opacity = 255;\n  }\n\n  draw() {\n    this.size += 10;\n    this.opacity -= 5;\n    noFill();\n    strokeWeight(2);\n    stroke(this.hue, 100, 100, this.opacity);\n    circle(this.x, this.y, this.size);\n    circle(this.x, this.y, this.size * 0.75);\n    circle(this.x, this.y, this.size * 0.5);\n  }\n\n  isFinished() {\n    return this.opacity <= 0;\n  }\n}\n\n// Line animation coordinates\nlet xCoord1 = 0,\n  yCoord1 = 0,\n  xCoord2 = 0,\n  yCoord2 = 0;\nfunction myLightA(H, S, B) {\n  if (lightA === 1) {\n    // Only draw lightning when lightA is enabled\n    for (let i = 0; i < 300; i++) {\n      xCoord1 = xCoord2;\n      yCoord1 = yCoord2;\n      xCoord2 = xCoord1 + int(random(-20, 20));\n      yCoord2 = yCoord1 + int(random(-10, 20));\n\n      strokeWeight(random(3, 5));\n      strokeJoin(MITER);\n      stroke(H, S, B);\n      line(xCoord1, yCoord1, xCoord2, yCoord2);\n\n      if (\n        xCoord2 > windowWidth ||\n        xCoord2 < 0 ||\n        yCoord2 > windowHeight ||\n        yCoord2 < 0\n      ) {\n        xCoord2 = int(random(0, windowWidth));\n        yCoord2 = 0;\n      }\n    }\n  }\n}\n\n// ------------------- Interaction Functions -------------------\n\nfunction keyPressed() {\n  let fs = fullscreen();\n\n  if (!fs && keyCode === 27) {\n    fullscreen(true);\n    resizeCanvas(displayWidth, displayHeight);\n    createFilmGrain(0, 0, displayWidth, displayHeight, 500, 3);\n  } else if (fs && keyCode === 27) {\n    fullscreen(false);\n    resizeCanvas(videoWidth, videoHeight);\n    video.size(videoWidth, videoHeight);\n    personImage.resize(videoWidth, videoHeight);\n    createFilmGrain(0, 0, videoWidth, videoHeight, 500, 3);\n  }\n\n  // Toggle random ripples\n  if (key === \"a\" || key === \"A\") {\n    rippleA = 1 - rippleA;\n  }\n\n  // Toggle lights\n  if (key === \"z\") lightA = 1 - lightA;\n\n  // Toggle delay\n  if (key === \"d\") delay = 1 - delay;\n\n  // Toggle laser effect\n  if (key === \"l\" || key === \"L\") laser = 1 - laser;\n\n  // Toggle rain effect\n  if (key === \"r\" || key === \"R\") rain = 1 - rain;\n\n  // Toggle ball effect\n  if (key === \"b\" || key === \"B\") ballsEffect = 1 - ballsEffect;\n}\n\n// ------------------- Laser Initialization -------------------\n\nfunction initializeLines() {\n  // Initialize or update laser line positions\n  leftLine = {\n    x1: 0,\n    y1: yLength,\n    x2: xLength,\n    y2: 0,\n    offset: 0, // Movement offset\n  };\n\n  rightLine = {\n    x1: xLength,\n    y1: yLength,\n    x2: 0,\n    y2: 0,\n    offset: 0, // Movement offset\n  };\n}\n\n// ------------------- Laser Motion Update -------------------\n\nfunction updateLaserMotion() {\n  let maxOffset = width / 4; // Maximum oscillation range\n\n  // Use sine wave for smooth oscillation\n  leftLine.offset = sin(frameCount * 0.02) * maxOffset;\n  rightLine.offset = cos(frameCount * 0.02) * maxOffset;\n\n  // Update positions based on offset\n  leftLine.x1 = leftLine.offset;\n  leftLine.x2 = xLength - leftLine.offset;\n\n  rightLine.x1 = xLength - rightLine.offset;\n  rightLine.x2 = rightLine.offset;\n}\n\n// ------------------- Laser Value Animation -------------------\n\nfunction animateValues() {\n  // Change distValue to create \"opening\" and \"closing\" effect\n  distValue += distDirection * 0.05;\n  if (distValue > 10 || distValue < 2) {\n    distDirection *= -1; // Reverse direction\n  }\n\n  // Change lineValue to expand or shrink the number of lines\n  lineValue += lineDirection * 0.1;\n  if (lineValue > 30 || lineValue < 5) {\n    lineDirection *= -1; // Reverse direction\n  }\n}\n\n// ------------------- Laser Drawing -------------------\n\nfunction drawLasersWithAnimation() {\n  // Animate laser lines and values\n  updateLaserMotion();\n  animateValues();\n\n  // Draw all four laser patterns\n  drawLasers();\n}\n\nfunction drawLasers() {\n  vertLine1();\n  vertLine2();\n  vertLine3();\n  vertLine4();\n}\n\n// Laser patterns\n\nfunction vertLine1() {\n  strokeWeight(1);\n  stroke(ranH1, 100, 100);\n  let x2 = leftLine.x2;\n  line(leftLine.x1, leftLine.y1, leftLine.x2, leftLine.y2);\n  for (let i = 0; i < lineValue; i++) {\n    line(leftLine.x1, leftLine.y1, x2, leftLine.y2);\n    let shiftX = -distValue;\n    x2 += shiftX;\n  }\n}\n\nfunction vertLine2() {\n  strokeWeight(1);\n  stroke(ranH1, 100, 100);\n  let x2 = rightLine.x2;\n  line(rightLine.x1, rightLine.y1, rightLine.x2, rightLine.y2);\n  for (let i = 0; i < lineValue; i++) {\n    line(rightLine.x1, rightLine.y1, x2, rightLine.y2);\n    let shiftX = distValue;\n    x2 += shiftX;\n  }\n}\n\nfunction vertLine3() {\n  strokeWeight(1);\n  stroke(ranH2, 100, 100);\n  let x2 = leftLine.x2;\n  line(leftLine.x1, leftLine.y2, leftLine.x2, leftLine.y1);\n  for (let i = 0; i < lineValue; i++) {\n    line(leftLine.x1, leftLine.y2, x2, leftLine.y1);\n    let shiftX = -distValue;\n    x2 += shiftX;\n  }\n}\n\nfunction vertLine4() {\n  strokeWeight(1);\n  stroke(ranH2, 100, 100);\n  let x2 = rightLine.x2;\n  line(rightLine.x1, rightLine.y2, rightLine.x2, rightLine.y1);\n  for (let i = 0; i < lineValue; i++) {\n    line(rightLine.x1, rightLine.y2, x2, rightLine.y1);\n    let shiftX = distValue;\n    x2 += shiftX;\n  }\n}\n\n// ------------------- Rain Drops Initialization -------------------\n\nfunction initializeDrops() {\n  drops = [];\n  let numDrops = floor((width * height) / 4000); // Adjust drop count based on canvas area\n  for (let i = 0; i < numDrops; i++) {\n    drops.push(new Drop());\n  }\n}\n\n// ------------------- Drop Class -------------------\n\nfunction Drop() {\n  this.x = random(0, width);\n  this.y = random(0, height);\n\n  this.show = function () {\n    stroke(Hval1, 100, 100);\n    strokeWeight(1);\n    fill(Hval2, 100, 100);\n    ellipse(this.x, this.y, random(1, 5), random(1, 5));\n  };\n\n  this.update = function () {\n    this.speed = 20;\n    this.gravity = 1.05;\n    this.y += this.speed * this.gravity;\n\n    if (this.y > height) {\n      this.y = random(0, -height);\n      this.gravity = 0;\n    }\n  };\n}\n// ------------------- Ball Initialization -------------------\n\nfunction initializeBalls() {\n  bballs = [];\n  let numBalls = 700; // Total number of balls\n  for (let i = 0; i < numBalls; i++) {\n    bballs.push(\n      new Ball(\n        random(0, windowWidth),\n        random(0, windowHeight),\n        random(10, 30),\n        random(0.5, 2),\n        random(windowHeight / 2, windowHeight)\n      )\n    );\n  }\n}\n\n// ------------------- Ball Class -------------------\n\nclass Ball {\n  constructor(xpos, ypos, w, dy, limit) {\n    this.xpos = xpos;\n    this.ypos = ypos;\n    this.w = w;\n    this.dy = dy;\n    this.limit = windowHeight; // Expand limit to cover entire window\n    this.colorOffset = random(240, 350); // Random offset for hue\n  }\n\n  getColor() {\n    return (Hval1 + this.colorOffset) % 360;\n  }\n\n  draw() {\n    this.move();\n    noStroke();\n    fill(this.getColor(), 100, 50, 80);\n    circle(this.xpos, this.ypos, this.w);\n  }\n\n  move() {\n    if (this.ypos + this.w / 2 >= this.limit || this.ypos - this.w / 2 <= 0) {\n      this.dy = -this.dy; // Reverse direction at edges\n    }\n    this.ypos += this.dy;\n  }\n}\n// ------------------- WebSerial Setup -------------------\n\nfunction setupWebSerial() {\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n\n  serial.getPorts();\n  serial.on(\"noport\", makePortButton);\n  serial.on(\"portavailable\", openPort);\n  serial.on(\"requesterror\", portError);\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n}\n\n// ------------------- Port Button Functions -------------------\n\nfunction makePortButton() {\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  portButton.mousePressed(choosePort);\n}\n\nfunction choosePort() {\n  if (portButton) portButton.show();\n  serial.requestPort();\n}\n\nfunction openPort() {\n  serial.open().then(() => {\n    console.log(\"port open\");\n    if (portButton) portButton.hide();\n  });\n}\n\n// ------------------- Serial Event Functions -------------------\n\nfunction serialEvent() {\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  if (inString != null) {\n    let list = split(trim(inString), \",\");\n    if (list.length > 15) {\n      rot1 = float(list[0]);\n      bgButton = float(list[1]);\n      sat1 = float(list[2]);\n      br1 = float(list[3]);\n      rot2 = float(list[4]);\n      pot1 = float(list[5]);\n      pot2 = float(list[6]);\n      FR = float(list[7]);\n      blur = float(list[8]);\n      grainA = float(list[9]);\n      rippleA = float(list[10]);\n      lightA = float(list[11]);\n      delay = float(list[12]);\n      rain = float(list[13]);\n      laser = float(list[14]);\n      ballsEffect = float(list[15]);\n      serial.write(\"x\");\n    }\n  }\n}\n\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67509f8203934283e0fae0e2",
        "createdAt": "2024-12-15T17:55:51.119Z",
        "updatedAt": "2024-12-15T17:55:51.119Z",
        "id": "67509f8203934283e0fae0e2"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.2/p5.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@0.20.0-alpha.4/dist/ml5.min.js\"></script>\n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n    \n  </head>\n  <body>\n    <script src=\"FilmGrainEffect.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67509f8203934283e0fae0e1",
        "createdAt": "2024-12-15T17:55:51.119Z",
        "updatedAt": "2024-12-15T17:55:51.119Z",
        "id": "67509f8203934283e0fae0e1"
      },
      {
        "name": "FilmGrainEffect.js",
        "content": "class Effects {\n  static counter = 0;\n}\n\nclass FilmGrainEffect {\n  static counter = 0;\n  static index = 0;\n\n  constructor(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.id = \"FilmGrain_\" + Effects.counter++;\n    this.reset(x, y, w, h, patternSize, sampleSize, patternAlpha);\n  }\n\n  reset(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.samples = [];\n    this.currentSampleSet = [];\n    this.patternRefreshInterval = 4;\n    FilmGrainEffect.counter = 0;\n    FilmGrainEffect.index = 0;\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.p = patternSize;\n    this.s = sampleSize;\n    this.a = map(patternAlpha, 0, 1, 0, 255);\n    for (let i = 0; i < sampleSize; i++) {\n      this.samples.push(\n        this.pattern(this.x, this.y, this.w, this.h, this.p, this.a)\n      );\n    }\n  }\n\n  add(effect) {}\n\n  pattern(x, y, w, h, patternSize, patternAlpha) {\n    // luodaan uusi p5 canvas || create new p5 canvas\n    let pg = createGraphics(patternSize, patternSize);\n    pg.pixelDensity(1);\n\n    // luodaan kohina | create noise\n    pg.loadPixels();\n    for (var _y = 0; _y < patternSize; _y += 1) {\n      for (var _x = 0; _x < patternSize; _x += 1) {\n        let i = (_x + _y * patternSize) * 4;\n        let value = (Math.random() * 255) | 0;\n        pg.pixels[i] = value;\n        pg.pixels[i + 1] = value;\n        pg.pixels[i + 2] = value;\n        pg.pixels[i + 3] = patternAlpha;\n      }\n    }\n    pg.updatePixels();\n\n    // lasketaan kohinapalojen paikat ja tallennetaan ne | calculate position of noise pieces and save them\n    let xlen = w / patternSize;\n    let ylen = h / patternSize;\n\n    let samples = [];\n    for (let i = 0; i < ylen; i++) {\n      for (let j = 0; j < xlen; j++) {\n        let _x = x + patternSize * j;\n        let _y = y + patternSize * i;\n        samples.push({\n          canvas: pg,\n          x: _x,\n          y: _y,\n          w: patternSize,\n          h: patternSize,\n        });\n      }\n    }\n    \n    return samples;\n  }\n\n  update(data) {\n    if (FilmGrainEffect.counter++ === this.patternRefreshInterval) {\n      FilmGrainEffect.counter = 0;\n      FilmGrainEffect.index++;\n      if (!this.samples[FilmGrainEffect.index]) {\n        FilmGrainEffect.index = 0;\n      }\n    }\n    this.currentSampleSet = this.samples[FilmGrainEffect.index];\n  }\n\n  display() {\n    for (let sample of this.currentSampleSet) {\n      image(sample.canvas, sample.x, sample.y, sample.w, sample.h);\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.currentSampleSet;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67509f8203934283e0fae0e0",
        "createdAt": "2024-12-15T17:55:51.119Z",
        "updatedAt": "2024-12-15T17:55:51.119Z",
        "id": "67509f8203934283e0fae0e0"
      }
    ],
    "createdAt": "2024-12-04T18:29:22.106Z",
    "updatedAt": "2024-12-15T17:55:51.119Z",
    "id": "e5eQotsBQ"
  },
  {
    "_id": "Yz1MbYvXvr",
    "name": "videoKill - final",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67411f7fd1c8eb1b27d7e239",
          "67339196c1e798c03f799543",
          "67339196c1e798c03f799544"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67339196c1e798c03f799542",
        "createdAt": "2024-12-04T00:07:40.191Z",
        "updatedAt": "2024-12-04T00:07:40.191Z",
        "id": "67339196c1e798c03f799542"
      },
      {
        "name": "sketch.js",
        "content": "// ------------------- Global Variables -------------------\n\n// Frame rate and visual effects\nlet FR = 60; // Frame rate (10 to 60)\nlet blur = 0;\nlet bgButton = 0; // Inversion toggle\nlet rain = 0; // Rain state variable\n\n// Grain and transparency\nlet grain;\nlet grainA = 0; // Transparency (0 to 1)\nlet prevA;\n\n// Body segmentation variables\nlet bodySegmentation;\nlet video;\nlet segmentation;\nlet personImage;\n\n// Grid settings\nlet gridSize; // Number of rows and columns in the grid (1 to 10)\n// rotary to video #\nlet rot2 = 11;\n// Delay variables\nlet delay = 0; // Delay toggle (0 = off, 1 = on)\nlet buffers = []; // Array to hold per-cell frame buffers\nlet maxDelay = 20; // Maximum delay multiplier for buffer size\n\n// Color variables for interactive controls\nlet pot1 = 0;\nlet pot2 = 0;\nlet Rval = 0,\n  Bval = 0,\n  Hval1 = 0,\n  Hval2 = 0;\n\n// Background colors (HSB mode)\nlet rot1 = 0,\n  sat1 = 0,\n  br1 = 0; // Hue, Saturation, Brightness\n\n// BodyPix options\nlet options = {\n  maskType: \"parts\",\n};\n\n// Fixed dimensions for video and canvas\nconst videoWidth = 600;\nconst videoHeight = 400;\n\n// Drops for rain effect\nlet drop = [];\n// Ball and ripple properties\nlet bballs = [];\nlet ballsEffect = 0; // Toggle for ball effect\n\n// variable to hold an instance of the p5.webserial library:\nconst serial = new p5.WebSerial();\n\n// HTML button object:\nlet portButton;\nlet inData = []; // for incoming serial data\nlet inString = [];\nlet outByte = 0; // for outgoing data\n\n// ------------------- Preload -------------------\n\nfunction preload() {\n  // Load the body segmentation model\n  bodySegmentation = ml5.bodySegmentation(\"BodyPix\", options);\n}\n\n// ------------------- Setup -------------------\n\nfunction setup() {\n  // Create the canvas\n  createCanvas(videoWidth, videoHeight);\n\n  colorMode(HSB, 360, 100, 100, 100);\n\n  xLength = windowWidth;\n  yLength = windowHeight;\n\n  // Initialize drops, lasers, balls\n  initializeLines();\n\n  initializeDrops();\n\n  initializeBalls();\n\n  // Create the video capture\n  video = createCapture(VIDEO);\n  video.size(videoWidth, videoHeight);\n  video.hide();\n\n  // Start the body segmentation\n  bodySegmentation.detectStart(video, gotResults);\n\n  // Create an image for segmented output\n  personImage = createImage(video.width, video.height);\n\n  // Initialize the film grain effect\n  createFilmGrain(0, 0, videoWidth, videoHeight, 500, 3);\n\n  // check to see if serial is available:\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n  // if serial is available, add connect/disconnect listeners:\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n  // check for any ports that are available:\n  serial.getPorts();\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n}\n\n// ------------------- Draw -------------------\n\nfunction draw() {\n  // Background\n  background(rot1, sat1, br1);\n\n  // Map potentiometer values to colors\n  Rval = map(pot1, 0, 100, 0, 255);\n  Bval = map(pot2, 0, 100, 0, 255);\n  Hval1 = map(pot1, 0, 100, 0, 360);\n  Hval2 = map(pot2, 0, 100, 0, 360);\n  ranH1 = random((Hval1 + 0) % 360, (Hval1 + 50) % 360);\n  ranH2 = random((Hval2 + 0) % 360, (Hval2 + 50) % 360);\n\n  // Set the frame rate\n  frameRate(FR);\n\n  // Draw the ball effect if enabled\n  if (ballsEffect === 1) {\n    for (let ball of bballs) {\n      ball.draw();\n    }\n  }\n\n  // If laser is toggled on, animate and draw the lasers\n  if (laser === 1) {\n    updateLaserMotion();\n    animateValues();\n    drawLasers();\n  }\n\n  // Handle rain effect\n  if (rain === 1) {\n    for (let i = 0; i < drops.length; i++) {\n      drops[i].show();\n      drops[i].update();\n    }\n  }\n\n  myLightA(ranH1, 100, 100);\n\n  // Handle ripple generation when rippleA is 1\n  if (rippleA === 1) {\n    if (frameCount % 10 === 0) {\n      // Add a ripple every 10 frames\n      ripples.push(new Ripple(random(width), random(height), ranH1));\n    }\n  }\n\n  // Draw all active ripples\n  for (let i = ripples.length - 1; i >= 0; i--) {\n    ripples[i].draw();\n    if (ripples[i].isFinished()) {\n      ripples.splice(i, 1); // Remove finished ripples\n    }\n  }\n\n  // Display the segmented video grid\n  if (segmentation) {\n    copyForegroundPixels(video, segmentation.mask, personImage);\n\n    // If delay is active, process and draw the grid with delay\n    if (delay === 1) {\n      manageBuffers(personImage);\n      drawDelayedGrid();\n    } else {\n      // Draw live video grid without delay\n      buffers = []; // Clear all buffers if delay is off\n      drawGrid(personImage);\n    }\n  }\n\n  // Apply visual effects\n  if (blur > 0) filter(BLUR, blur);\n  if (bgButton === 1) filter(INVERT);\n\n  // Display grain effect\n  // console.log(grainA);\n  if (grainA != prevA) {\n    createFilmGrain(0, 0, windowWidth, windowHeight, 500, 3); // Initial grain creation\n    prevA = grainA;\n  }\n  updateGrain();\n  displayGrain();\n}\n\nlet lightA = 0;\nlet rippleA = 0;\nlet randomRipplesActive = false;\nlet ripples = []; // Array to hold active ripples\n\nlet X1 = 0,\n  Y1 = 0;\nlet circleSize1 = 0;\nlet opacity1 = 255;\n\n// Line animation coordinates\nlet xCoord1 = 0,\n  yCoord1 = 0,\n  xCoord2 = 0,\n  yCoord2 = 0;\nfunction myLightA(H, S, B) {\n  if (lightA === 1) {\n    // Only draw lightning when lightA is enabled\n    for (let i = 0; i < 300; i++) {\n      xCoord1 = xCoord2;\n      yCoord1 = yCoord2;\n      xCoord2 = xCoord1 + int(random(-20, 20));\n      yCoord2 = yCoord1 + int(random(-10, 20));\n\n      strokeWeight(random(3, 5));\n      strokeJoin(MITER);\n      stroke(H, S, B);\n      line(xCoord1, yCoord1, xCoord2, yCoord2);\n\n      if (\n        xCoord2 > windowWidth ||\n        xCoord2 < 0 ||\n        yCoord2 > windowHeight ||\n        yCoord2 < 0\n      ) {\n        xCoord2 = int(random(0, windowWidth));\n        yCoord2 = 0;\n      }\n    }\n  }\n}\n\nclass Ripple {\n  constructor(x, y, hue) {\n    this.x = x;\n    this.y = y;\n    this.hue = hue;\n    this.size = 0;\n    this.opacity = 255;\n  }\n\n  draw() {\n    this.size += 10;\n    this.opacity -= 5;\n    noFill();\n    strokeWeight(2);\n    stroke(this.hue, 100, 100, this.opacity);\n    circle(this.x, this.y, this.size);\n    circle(this.x, this.y, this.size * 0.75);\n    circle(this.x, this.y, this.size * 0.5);\n  }\n\n  isFinished() {\n    return this.opacity <= 0;\n  }\n}\n\n// ------------------- Utility Functions -------------------\n\n// Initialize buffers for grid cells if not already done\nfunction initializeBuffers(cols, rows) {\n  let totalCells = cols * rows;\n  if (buffers.length !== totalCells) {\n    buffers = [];\n    for (let i = 0; i < totalCells; i++) {\n      buffers.push([]);\n    }\n  }\n}\nfunction manageBuffers(currentFrame) {\n  let cols = Math.round(map(rot2, 0, 23, 1, 10));\n  let rows = cols;\n  initializeBuffers(cols, rows);\n\n  // Create a new `p5.Image` to store the masked frame\n  let maskedFrame = createImage(video.width, video.height);\n  copyForegroundPixels(currentFrame, segmentation.mask, maskedFrame);\n\n  // Add the masked frame to each buffer\n  for (let i = 0; i < buffers.length; i++) {\n    let delayAmount = (i + 1) * 2; // Per-cell delay factor\n    buffers[i].push(maskedFrame.get()); // Store a copy of the masked frame\n    if (buffers[i].length > delayAmount) {\n      buffers[i].shift();\n    }\n  }\n}\n\nfunction drawDelayedGrid() {\n  let cols = Math.round(map(rot2, 0, 23, 1, 10));\n  let rows = cols;\n  let cellWidth = width / cols;\n  let cellHeight = height / rows;\n\n  for (let y = 0; y < rows; y++) {\n    for (let x = 0; x < cols; x++) {\n      let index = x + y * cols;\n\n      // Display the delayed masked frame from the buffer\n      if (buffers[index].length > 0) {\n        let frameToShow = buffers[index][0];\n        image(\n          frameToShow,\n          x * cellWidth,\n          y * cellHeight,\n          cellWidth,\n          cellHeight\n        );\n      }\n    }\n  }\n}\n\n// Draw the grid with live frames\nfunction drawGrid(segmentedImage) {\n  let cols = Math.round(map(rot2, 0, 23, 1, 10));\n  let rows = cols;\n  let cellWidth = width / cols;\n  let cellHeight = height / rows;\n\n  for (let y = 0; y < rows; y++) {\n    for (let x = 0; x < cols; x++) {\n      let dx = x * cellWidth;\n      let dy = y * cellHeight;\n\n      image(segmentedImage, dx, dy, cellWidth, cellHeight);\n    }\n  }\n}\n\n// Process the segmentation results\nfunction gotResults(result) {\n  segmentation = result;\n}\n\n// Copy foreground pixels from the video based on the mask\nfunction copyForegroundPixels(imgSource, imgMask, imgResult) {\n  imgSource.loadPixels();\n  imgMask.loadPixels();\n  imgResult.loadPixels();\n\n  const imgWidth = imgSource.width;\n  const imgHeight = imgSource.height;\n  const imgChannels = 4;\n  const numValues = imgWidth * imgHeight * imgChannels;\n  const imgPixels = imgSource.pixels;\n  const maskPixels = imgMask.pixels;\n  const resultPixels = imgResult.pixels;\n\n  for (let i = 0; i < numValues; i += imgChannels) {\n    let maskR = maskPixels[i];\n    let maskG = maskPixels[i + 1];\n    let maskB = maskPixels[i + 2];\n\n    // If the mask pixel is white, clear the result pixel\n    if (maskR === 255 && maskG === 255 && maskB === 255) {\n      resultPixels[i] = 0;\n      resultPixels[i + 1] = 0;\n      resultPixels[i + 2] = 0;\n      resultPixels[i + 3] = 0;\n    } else {\n      // Otherwise, copy the source pixel with applied colors\n      resultPixels[i] = imgPixels[i]; // Red channel unchanged\n      resultPixels[i + 1] = Rval; // Green channel modified by potentiometer\n      resultPixels[i + 2] = Bval; // Blue channel modified by potentiometer\n      resultPixels[i + 3] = 255; // Ensure the pixel is opaque\n    }\n  }\n\n  imgResult.updatePixels();\n}\n\n// ------------------- Interaction Functions -------------------\n\nfunction keyPressed() {\n  let fs = fullscreen();\n\n  if (!fs && keyCode === 27) {\n    fullscreen(true);\n    resizeCanvas(displayWidth, displayHeight);\n    createFilmGrain(0, 0, displayWidth, displayHeight, 500, 3);\n  } else if (fs && keyCode === 27) {\n    fullscreen(false);\n    resizeCanvas(videoWidth, videoHeight);\n    video.size(videoWidth, videoHeight);\n    personImage.resize(videoWidth, videoHeight);\n    createFilmGrain(0, 0, videoWidth, videoHeight, 500, 3);\n  }\n\n  // Toggle random ripples\n  if (key === \"a\" || key === \"A\") {\n    randomRipplesActive = !randomRipplesActive;\n  }\n\n  // Toggle lights\n  if (key === \"z\") lightA = 1 - lightA;\n\n  if (key === \"d\") {\n    delay = 1 - delay; // Toggle delay\n  }\n\n  if (key === \"l\" || key === \"L\") {\n    laser = 1 - laser; // Toggle laser state between 1 and 0\n  }\n\n  if (key === \"r\" || key === \"R\") {\n    rain = 1 - rain; // Toggle rain state between 1 and 0\n  }\n\n  if (key === \"b\" || key === \"B\") {\n    ballsEffect = 1 - ballsEffect; // Toggle ball effect\n  }\n}\n\n// ------------------- Grain Effect -------------------\n\nfunction updateGrain() {\n  grain.update();\n}\n\nfunction displayGrain() {\n  grain.display();\n}\n\nfunction createFilmGrain(x, y, w, h, patternSize, sampleSize) {\n  grain = new FilmGrainEffect(\n    x,\n    y,\n    w,\n    h,\n    patternSize,\n    sampleSize,\n    grainA * 0.1\n  );\n}\n// ------------------- Ball Initialization -------------------\n\nfunction initializeBalls() {\n  bballs = [];\n  let numBalls = 700; // Total number of balls\n  for (let i = 0; i < numBalls; i++) {\n    bballs.push(\n      new Ball(\n        random(0, windowWidth),\n        random(0, windowHeight),\n        random(10, 30),\n        random(0.5, 2),\n        random(windowHeight / 2, windowHeight)\n      )\n    );\n  }\n}\n\n// ------------------- Ball Class -------------------\n\nclass Ball {\n  constructor(xpos, ypos, w, dy, limit) {\n    this.xpos = xpos;\n    this.ypos = ypos;\n    this.w = w;\n    this.dy = dy;\n    this.limit = windowHeight; // Expand limit to cover entire window\n    this.colorOffset = random(240, 350); // Random offset for hue\n  }\n\n  getColor() {\n    return (Hval1 + this.colorOffset) % 360;\n  }\n\n  draw() {\n    this.move();\n    noStroke();\n    fill(this.getColor(), 100, 50, 80);\n    circle(this.xpos, this.ypos, this.w);\n  }\n\n  move() {\n    if (this.ypos + this.w / 2 >= this.limit || this.ypos - this.w / 2 <= 0) {\n      this.dy = -this.dy; // Reverse direction at edges\n    }\n    this.ypos += this.dy;\n  }\n}\n// ------------------- Rain Drops -------------------\n\n// Initialize or reinitialize the raindrops\nfunction initializeDrops() {\n  drops = [];\n  let numDrops = floor((width * height) / 4000); // Adjust drop count based on canvas area\n  for (let i = 0; i < numDrops; i++) {\n    drops.push(new Drop());\n  }\n}\n\n// Drop class (animated falling shapes)\nfunction Drop() {\n  this.x = random(0, width);\n  this.y = random(0, height);\n\n  this.show = function () {\n    stroke(Hval1, 100, 100);\n    strokeWeight(1);\n    fill(Hval2, 100, 100);\n    ellipse(this.x, this.y, random(1, 5), random(1, 5));\n  };\n\n  this.update = function () {\n    this.speed = 20;\n    this.gravity = 1.05;\n    this.y += this.speed * this.gravity;\n\n    if (this.y > height) {\n      this.y = random(0, -height);\n      this.gravity = 0;\n    }\n  };\n}\n\nlet xLength, yLength;\n\n// Laser line objects\nlet leftLine = {\n  x1: 0,\n  y1: 0,\n  x2: 0,\n  y2: 0,\n  offset: 0, // movement offset\n};\n\nlet rightLine = {\n  x1: 0,\n  y1: 0,\n  x2: 0,\n  y2: 0,\n  offset: 0, // movement offset\n};\n\n// Variables for automatic animation\nlet distValue = 10;\nlet lineValue = 75;\nlet distDirection = 1; // Controls \"opening\" or \"closing\"\nlet lineDirection = 1; // Expanding or shrinking the number of lines\n\n// Toggle state for lasers\nlet laser = 0; // Set to 1 to enable lasers, 0 to disable\n\n// Handle resizing the window dynamically\nfunction windowResized() {\n  xLength = windowWidth;\n  yLength = windowHeight;\n  resizeCanvas(xLength, yLength);\n  initializeLines();\n  initializeDrops();\n  initializeBalls();\n}\n\n// Initialize or update laser line positions\nfunction initializeLines() {\n  leftLine.x1 = 0;\n  leftLine.y1 = yLength;\n  leftLine.x2 = xLength;\n  leftLine.y2 = 0;\n\n  rightLine.x1 = xLength;\n  rightLine.y1 = yLength;\n  rightLine.x2 = 0;\n  rightLine.y2 = 0;\n}\n\n// Update the motion of the laser lines\nfunction updateLaserMotion() {\n  let maxOffset = width / 4; // Maximum oscillation range\n\n  // Use sine wave for smooth oscillation\n  leftLine.offset = sin(frameCount * 0.02) * maxOffset;\n  rightLine.offset = cos(frameCount * 0.02) * maxOffset;\n\n  // Update positions based on offset\n  leftLine.x1 = leftLine.offset;\n  leftLine.x2 = xLength - leftLine.offset;\n\n  rightLine.x1 = xLength - rightLine.offset;\n  rightLine.x2 = rightLine.offset;\n}\n\n// Animate the distValue (line spacing) and lineValue (number of lines)\nfunction animateValues() {\n  // Change distValue to create \"opening\" and \"closing\" effect\n  distValue += distDirection * 0.05;\n  if (distValue > 10 || distValue < 2) {\n    distDirection *= -1; // Reverse direction\n  }\n\n  // Change lineValue to expand or shrink the number of lines\n  lineValue += lineDirection * 0.1;\n  if (lineValue > 30 || lineValue < 5) {\n    lineDirection *= -1; // Reverse direction\n  }\n}\n\n// Draw all four laser patterns\nfunction drawLasers() {\n  vertLine1();\n  vertLine2();\n  vertLine3();\n  vertLine4();\n}\n\n// Laser patterns\nfunction vertLine1() {\n  strokeWeight(1);\n  stroke(ranH1, 100, 100);\n  let x2 = leftLine.x2;\n  line(leftLine.x1, leftLine.y1, leftLine.x2, leftLine.y2);\n  for (let i = 0; i < lineValue; i++) {\n    line(leftLine.x1, leftLine.y1, x2, leftLine.y2);\n    let shiftX = -distValue;\n    x2 += shiftX;\n  }\n}\n\nfunction vertLine2() {\n  strokeWeight(1);\n  stroke(ranH1, 100, 100);\n  let x2 = rightLine.x2;\n  line(rightLine.x1, rightLine.y1, rightLine.x2, rightLine.y2);\n  for (let i = 0; i < lineValue; i++) {\n    line(rightLine.x1, rightLine.y1, x2, rightLine.y2);\n    let shiftX = distValue;\n    x2 += shiftX;\n  }\n}\n\nfunction vertLine3() {\n  strokeWeight(1);\n  stroke(ranH2, 100, 100);\n  let x2 = leftLine.x2;\n  line(leftLine.x1, leftLine.y2, leftLine.x2, leftLine.y1);\n  for (let i = 0; i < lineValue; i++) {\n    line(leftLine.x1, leftLine.y2, x2, leftLine.y1);\n    let shiftX = -distValue;\n    x2 += shiftX;\n  }\n}\n\nfunction vertLine4() {\n  strokeWeight(1);\n  stroke(ranH2, 100, 100);\n  let x2 = rightLine.x2;\n  line(rightLine.x1, rightLine.y2, rightLine.x2, rightLine.y1);\n  for (let i = 0; i < lineValue; i++) {\n    line(rightLine.x1, rightLine.y2, x2, rightLine.y1);\n    let shiftX = distValue;\n    x2 += shiftX;\n  }\n}\n\n// ------------------- Serial Stuff -------------------\n// if there's no port selected,\n// make a port select button appear:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n\n// make the port selector window appear:\nfunction choosePort() {\n  if (portButton) portButton.show();\n  serial.requestPort();\n}\n\n// open the selected port, and make the port\n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  serial.open().then(initiateSerial);\n\n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n\n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n\n// read any incoming data:\nfunction serialEvent() {\n  // read from port until new line:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  if (inString != null) {\n    let list = split(trim(inString), \",\");\n    if (list.length > 15) {\n      // conver list items to floats:\n      rot1 = float(list[0]);\n      bgButton = float(list[1]);\n      sat1 = float(list[2]);\n      br1 = float(list[3]);\n      rot2 = float(list[4]);\n      pot1 = float(list[5]);\n      pot2 = float(list[6]);\n      FR = float(list[7]);\n      blur = float(list[8]);\n      grainA = float(list[9]);\n      rippleA = float(list[10]);\n      lightA = float(list[11]);\n      delay = float(list[12]);\n      rain = float(list[13]);\n      laser = float(list[14]);\n      ballsEffect = float(list[15]);\n      // send a byte to the microcontroller to get new data:\n      serial.write(\"x\");\n    }\n  }\n}\n\n// try to connect if a new serial port\n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n\n// if a port is disconnected:\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n\nfunction closePort() {\n  serial.close();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67339196c1e798c03f799544",
        "createdAt": "2024-12-04T00:07:40.191Z",
        "updatedAt": "2024-12-04T00:07:40.191Z",
        "id": "67339196c1e798c03f799544"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.2/p5.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@0.20.0-alpha.4/dist/ml5.min.js\"></script>\n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n    \n  </head>\n  <body>\n    <script src=\"FilmGrainEffect.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67339196c1e798c03f799543",
        "createdAt": "2024-12-04T00:07:40.191Z",
        "updatedAt": "2024-12-04T00:07:40.191Z",
        "id": "67339196c1e798c03f799543"
      },
      {
        "name": "FilmGrainEffect.js",
        "content": "class Effects {\n  static counter = 0;\n}\n\nclass FilmGrainEffect {\n  static counter = 0;\n  static index = 0;\n\n  constructor(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.id = \"FilmGrain_\" + Effects.counter++;\n    this.reset(x, y, w, h, patternSize, sampleSize, patternAlpha);\n  }\n\n  reset(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.samples = [];\n    this.currentSampleSet = [];\n    this.patternRefreshInterval = 4;\n    FilmGrainEffect.counter = 0;\n    FilmGrainEffect.index = 0;\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.p = patternSize;\n    this.s = sampleSize;\n    this.a = map(patternAlpha, 0, 1, 0, 255);\n    for (let i = 0; i < sampleSize; i++) {\n      this.samples.push(\n        this.pattern(this.x, this.y, this.w, this.h, this.p, this.a)\n      );\n    }\n  }\n\n  add(effect) {}\n\n  pattern(x, y, w, h, patternSize, patternAlpha) {\n    // luodaan uusi p5 canvas || create new p5 canvas\n    let pg = createGraphics(patternSize, patternSize);\n    pg.pixelDensity(1);\n\n    // luodaan kohina | create noise\n    pg.loadPixels();\n    for (var _y = 0; _y < patternSize; _y += 1) {\n      for (var _x = 0; _x < patternSize; _x += 1) {\n        let i = (_x + _y * patternSize) * 4;\n        let value = (Math.random() * 255) | 0;\n        pg.pixels[i] = value;\n        pg.pixels[i + 1] = value;\n        pg.pixels[i + 2] = value;\n        pg.pixels[i + 3] = patternAlpha;\n      }\n    }\n    pg.updatePixels();\n\n    // lasketaan kohinapalojen paikat ja tallennetaan ne | calculate position of noise pieces and save them\n    let xlen = w / patternSize;\n    let ylen = h / patternSize;\n\n    let samples = [];\n    for (let i = 0; i < ylen; i++) {\n      for (let j = 0; j < xlen; j++) {\n        let _x = x + patternSize * j;\n        let _y = y + patternSize * i;\n        samples.push({\n          canvas: pg,\n          x: _x,\n          y: _y,\n          w: patternSize,\n          h: patternSize,\n        });\n      }\n    }\n    \n    return samples;\n  }\n\n  update(data) {\n    if (FilmGrainEffect.counter++ === this.patternRefreshInterval) {\n      FilmGrainEffect.counter = 0;\n      FilmGrainEffect.index++;\n      if (!this.samples[FilmGrainEffect.index]) {\n        FilmGrainEffect.index = 0;\n      }\n    }\n    this.currentSampleSet = this.samples[FilmGrainEffect.index];\n  }\n\n  display() {\n    for (let sample of this.currentSampleSet) {\n      image(sample.canvas, sample.x, sample.y, sample.w, sample.h);\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.currentSampleSet;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67411f7fd1c8eb1b27d7e239",
        "createdAt": "2024-12-04T00:07:40.191Z",
        "updatedAt": "2024-12-04T00:07:40.191Z",
        "id": "67411f7fd1c8eb1b27d7e239"
      }
    ],
    "createdAt": "2024-11-12T17:34:14.936Z",
    "updatedAt": "2024-12-04T00:07:40.191Z",
    "id": "Yz1MbYvXvr"
  },
  {
    "_id": "dOMX4Sr8H",
    "name": "videoKill - final copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "674f49629124ec06fb8219ec",
          "674f49629124ec06fb8219ed",
          "674f49629124ec06fb8219ee",
          "674f49629124ec06fb8219ef"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "674f49629124ec06fb8219eb",
        "createdAt": "2024-12-03T18:59:21.280Z",
        "updatedAt": "2024-12-03T18:59:21.280Z",
        "id": "674f49629124ec06fb8219eb"
      },
      {
        "name": "sketch.js",
        "content": "// ------------------- Global Variables -------------------\n\n// Frame rate and visual effects\nlet FR = 40; // Frame rate (10 to 60)\nlet blur = 0;\nlet bgButton = 0; // Inversion toggle\nlet rain = 0; // Rain state variable\nlet previousRain = !rain; // Keep track of the previous state of `rain`\nlet raining = false; // Tracks if it's currently raining\n\n// Grain and transparency\nlet grain;\nlet grainA = 0; // Transparency (0 to 1)\nlet prevA;\n\n// Body segmentation variables\nlet bodySegmentation;\nlet video;\nlet segmentation;\nlet personImage;\n\n// Grid settings\nlet gridSize; // Number of rows and columns in the grid (1 to 10)\n// rotary to video #\nlet rot2 = 11;\n\n// Color variables for interactive controls\nlet pot1 = 0;\nlet pot2 = 0;\nlet Rval = 0,\n  Bval = 0,\n  Hval1 = 0,\n  Hval2 = 0;\n\n// Background colors (HSB mode)\nlet rot1 = 0,\n  sat1 = 0,\n  br1 = 0; // Hue, Saturation, Brightness\n\n// BodyPix options\nlet options = {\n  maskType: \"parts\",\n};\n\n// Fixed dimensions for video and canvas\nconst videoWidth = 600;\nconst videoHeight = 400;\n\n// Drops for rain effect\nlet drop = [];\n\n// variable to hold an instance of the p5.webserial library:\nconst serial = new p5.WebSerial();\n\n// HTML button object:\nlet portButton;\nlet inData = []; // for incoming serial data\nlet inString = [];\nlet outByte = 0; // for outgoing data\n\n// ------------------- Preload -------------------\n\nfunction preload() {\n  // Load the body segmentation model\n  bodySegmentation = ml5.bodySegmentation(\"BodyPix\", options);\n}\n\n// ------------------- Setup -------------------\n\nfunction setup() {\n  // Create the canvas\n  createCanvas(videoWidth, videoHeight);\n  colorMode(HSB, 360, 100, 100, 100);\n\n  // Initialize drops for rain effect\n  for (let i = 0; i < 400; i++) drop[i] = new Drop();\n\n  // Create the video capture\n  video = createCapture(VIDEO);\n  video.size(videoWidth, videoHeight);\n  video.hide();\n\n  // Start the body segmentation\n  bodySegmentation.detectStart(video, gotResults);\n\n  // Create an image for segmented output\n  personImage = createImage(video.width, video.height);\n\n  // Initialize the film grain effect\n  createFilmGrain(0, 0, videoWidth, videoHeight, 500, 3);\n\n  // check to see if serial is available:\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n  // if serial is available, add connect/disconnect listeners:\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n  // check for any ports that are available:\n  serial.getPorts();\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n}\n\n// ------------------- Draw -------------------\n\nfunction draw() {\n  // Background with transparency\n  background(rot1, sat1, br1);\n\n  // Map potentiometer values to colors\n  Rval = map(pot1, 0, 100, 0, 255);\n  Bval = map(pot2, 0, 100, 0, 255);\n  Hval1 = map(pot1, 0, 100, 0, 360);\n  Hval2 = map(pot2, 0, 100, 0, 360);\n\n  // Set the frame rate\n  frameRate(FR);\n\n  // Toggle raining state when the `rain` variable changes\n  if (rain !== previousRain) {\n    raining = !raining; // Toggle raining\n    previousRain = rain; // Update previous state\n  }\n\n  // Handle drops based on the raining state\n  if (raining && drop.length > 0) {\n    for (let i = 0; i < drop.length; i++) {\n      drop[i].show();\n      drop[i].update();\n    }\n  } else if (drop.length > 0) {\n    for (let i = 0; i < drop.length; i++) {\n      drop[i].show(); // Show static drops when not raining\n    }\n  }\n\n  // Display the segmented video grid\n  if (segmentation) {\n    copyForegroundPixels(video, segmentation.mask, personImage);\n    drawGrid(personImage);\n  }\n\n  // Apply visual effects\n  if (blur > 0) filter(BLUR, blur);\n  if (bgButton === 1) filter(INVERT);\n\n  // Display grain effect\n  // console.log(grainA);\n  if (grainA != prevA) {\n    createFilmGrain(0, 0, windowWidth, windowHeight, 500, 3); // Initial grain creation\n    prevA = grainA;\n  }\n  updateGrain();\n  displayGrain();\n}\n\n// ------------------- Utility Functions -------------------\n\n// Draw a grid of the segmented video\nfunction drawGrid(segmentedImage) {\n  gridSize = Math.round(map(rot2, 0, 23, 1, 10));\n  //   console.log(gridSize)\n  let cellWidth = width / gridSize; // Width of each grid cell\n  let cellHeight = height / gridSize; // Height of each grid cell\n\n  for (let y = 0; y < gridSize; y++) {\n    for (let x = 0; x < gridSize; x++) {\n      let dx = x * cellWidth; // Top-left x of grid cell\n      let dy = y * cellHeight; // Top-left y of grid cell\n      let dw = cellWidth; // Width of grid cell\n      let dh = cellHeight; // Height of grid cell\n\n      // Scale the segmented image to fit each grid cell\n      image(segmentedImage, dx, dy, dw, dh);\n    }\n  }\n}\n\n// Process the segmentation results\nfunction gotResults(result) {\n  segmentation = result;\n}\n\n// Copy foreground pixels from the video based on the mask\nfunction copyForegroundPixels(imgSource, imgMask, imgResult) {\n  imgSource.loadPixels();\n\n  imgMask.loadPixels();\n  imgResult.loadPixels();\n\n  const imgWidth = imgSource.width;\n  const imgHeight = imgSource.height;\n  const imgChannels = 4;\n  const numValues = imgWidth * imgHeight * imgChannels;\n  const imgPixels = imgSource.pixels;\n  const maskPixels = imgMask.pixels;\n  const resultPixels = imgResult.pixels;\n\n  for (let i = 0; i < numValues; i += imgChannels) {\n    let maskR = maskPixels[i];\n    let maskG = maskPixels[i + 1];\n    let maskB = maskPixels[i + 2];\n\n    // If the mask pixel is white, clear the result pixel\n    if (maskR === 255 && maskG === 255 && maskB === 255) {\n      resultPixels[i] = 0;\n      resultPixels[i + 1] = 0;\n      resultPixels[i + 2] = 0;\n      resultPixels[i + 3] = 0;\n    } else {\n      // Otherwise, copy the source pixel\n      resultPixels[i] = imgPixels[i];\n      resultPixels[i + 1] = Rval;\n      resultPixels[i + 2] = Bval;\n      resultPixels[i + 3] = 255; // Ensure the pixel is opaque\n    }\n  }\n\n  imgResult.updatePixels();\n}\n\n// ------------------- Interaction Functions -------------------\n\n// key press for fullscreen toggle\nfunction keyPressed() {\n  let fs = fullscreen();\n\n  // // Toggle song play/pause with space\n  // if (key === \" \" && song.isPlaying()) song.pause();\n  // else if (key === \" \") song.loop();\n  // // Reset song with left arrow\n  // else if (keyCode === LEFT_ARROW) {\n  //   song.stop();\n  //   song.loop();\n  // } else\n  if (!fs && keyCode === 27) {\n    fullscreen(true);\n    resizeCanvas(displayWidth, displayHeight);\n    createFilmGrain(0, 0, displayWidth, displayHeight, 500, 3);\n    initializeDrops();\n  } else {\n    fullscreen(false);\n    resizeCanvas(videoWidth, videoHeight);\n    video.size(videoWidth, videoHeight);\n    personImage.resize(videoWidth, videoHeight);\n    createFilmGrain(0, 0, videoWidth, videoHeight, 500, 3);\n    initializeDrops();\n  }\n}\n\n// ------------------- Grain Effect -------------------\n\nfunction updateGrain() {\n  grain.update();\n}\n\nfunction displayGrain() {\n  grain.display();\n}\n\nfunction createFilmGrain(x, y, w, h, patternSize, sampleSize) {\n  grain = new FilmGrainEffect(\n    x,\n    y,\n    w,\n    h,\n    patternSize,\n    sampleSize,\n    grainA * 0.1\n  );\n}\n\n// ------------------- Rain Drops -------------------\n\n// Initialize or reinitialize the drops\nfunction initializeDrops() {\n  drop = [];\n  let numDrops = floor((width * height) / 2000); // Adjust drop count based on canvas area\n  for (let i = 0; i < numDrops; i++) {\n    drop.push(new Drop());\n  }\n}\n\n// Drop class (animated falling shapes)\nfunction Drop() {\n  this.x = random(0, width);\n  this.y = random(0, height);\n\n  this.show = function () {\n    stroke(Hval1, 100, 100);\n    strokeWeight(1);\n    fill(Hval2, 100, 100);\n    ellipse(this.x, this.y, random(1, 5), random(1, 5));\n  };\n\n  this.update = function () {\n    this.speed = 20;\n    // mappedAmp / 4;\n    this.gravity = 1.05;\n    this.y += this.speed * this.gravity;\n\n    if (this.y > height) {\n      this.y = random(0, -height);\n      this.gravity = 0;\n    }\n  };\n}\n\n// ------------------- Serial Stuff -------------------\n// if there's no port selected,\n// make a port select button appear:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n\n// make the port selector window appear:\nfunction choosePort() {\n  if (portButton) portButton.show();\n  serial.requestPort();\n}\n\n// open the selected port, and make the port\n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  serial.open().then(initiateSerial);\n\n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n\n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n\n// read any incoming data:\nfunction serialEvent() {\n  // read from port until new line:\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  if (inString != null) {\n    let list = split(trim(inString), \",\");\n    if (list.length > 15) {\n      // conver list items to floats:\n      rot1 = float(list[0]);\n      BGbutton = float(list[1]);\n      sat1 = float(list[2]);\n      br1 = float(list[3]);\n      rot2 = float(list[4]);\n      pot1 = float(list[5]);\n      pot2 = float(list[6]);\n      FR = float(list[7]);\n      blur = float(list[8]);\n      grainA = float(list[9]);\n      rippleA = float(list[10]);\n      rippleB = float(list[11]);\n      rippleC = float(list[12]);\n      lightA = float(list[13]);\n      lightB = float(list[14]);\n      lightC = float(list[15]);\n\n      // console.log(\n      //   rot1 +\n      //     \",\" +\n      //     BGbutton +\n      //     \",\" +\n      //     sat1 +\n      //     \",\" +\n      //     br1 +\n      //     \",\" +\n      //     rot2 +\n      //     \",\" +\n      //     pot1 +\n      //     \",\" +\n      //     pot2 +\n      //     \",\" +\n      //     FR +\n      //     \",\" +\n      //     blur +\n      //     \",\" +\n      //     grainA +\n      //     \",\" +\n      //     rippleA +\n      //     \",\" +\n      //     rippleB +\n      //     \",\" +\n      //     rippleC +\n      //     \",\" +\n      //     lightA +\n      //     \",\" +\n      //     lightB +\n      //     \",\" +\n      //     lightC\n      // );\n      // send a byte to the microcontroller to get new data:\n      serial.write(\"x\");\n    }\n  }\n}\n\n// try to connect if a new serial port\n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n\n// if a port is disconnected:\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n\nfunction closePort() {\n  serial.close();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "674f49629124ec06fb8219ee",
        "createdAt": "2024-12-03T18:59:21.280Z",
        "updatedAt": "2024-12-03T18:59:21.280Z",
        "id": "674f49629124ec06fb8219ee"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.2/p5.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@0.20.0-alpha.4/dist/ml5.min.js\"></script>\n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n    \n  </head>\n  <body>\n    <script src=\"FilmGrainEffect.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674f49629124ec06fb8219ed",
        "createdAt": "2024-12-03T18:59:21.280Z",
        "updatedAt": "2024-12-03T18:59:21.280Z",
        "id": "674f49629124ec06fb8219ed"
      },
      {
        "name": "FilmGrainEffect.js",
        "content": "class Effects {\n  static counter = 0;\n}\n\nclass FilmGrainEffect {\n  static counter = 0;\n  static index = 0;\n\n  constructor(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.id = \"FilmGrain_\" + Effects.counter++;\n    this.reset(x, y, w, h, patternSize, sampleSize, patternAlpha);\n  }\n\n  reset(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.samples = [];\n    this.currentSampleSet = [];\n    this.patternRefreshInterval = 4;\n    FilmGrainEffect.counter = 0;\n    FilmGrainEffect.index = 0;\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.p = patternSize;\n    this.s = sampleSize;\n    this.a = map(patternAlpha, 0, 1, 0, 255);\n    for (let i = 0; i < sampleSize; i++) {\n      this.samples.push(\n        this.pattern(this.x, this.y, this.w, this.h, this.p, this.a)\n      );\n    }\n  }\n\n  add(effect) {}\n\n  pattern(x, y, w, h, patternSize, patternAlpha) {\n    // luodaan uusi p5 canvas || create new p5 canvas\n    let pg = createGraphics(patternSize, patternSize);\n    pg.pixelDensity(1);\n\n    // luodaan kohina | create noise\n    pg.loadPixels();\n    for (var _y = 0; _y < patternSize; _y += 1) {\n      for (var _x = 0; _x < patternSize; _x += 1) {\n        let i = (_x + _y * patternSize) * 4;\n        let value = (Math.random() * 255) | 0;\n        pg.pixels[i] = value;\n        pg.pixels[i + 1] = value;\n        pg.pixels[i + 2] = value;\n        pg.pixels[i + 3] = patternAlpha;\n      }\n    }\n    pg.updatePixels();\n\n    // lasketaan kohinapalojen paikat ja tallennetaan ne | calculate position of noise pieces and save them\n    let xlen = w / patternSize;\n    let ylen = h / patternSize;\n\n    let samples = [];\n    for (let i = 0; i < ylen; i++) {\n      for (let j = 0; j < xlen; j++) {\n        let _x = x + patternSize * j;\n        let _y = y + patternSize * i;\n        samples.push({\n          canvas: pg,\n          x: _x,\n          y: _y,\n          w: patternSize,\n          h: patternSize,\n        });\n      }\n    }\n    \n    return samples;\n  }\n\n  update(data) {\n    if (FilmGrainEffect.counter++ === this.patternRefreshInterval) {\n      FilmGrainEffect.counter = 0;\n      FilmGrainEffect.index++;\n      if (!this.samples[FilmGrainEffect.index]) {\n        FilmGrainEffect.index = 0;\n      }\n    }\n    this.currentSampleSet = this.samples[FilmGrainEffect.index];\n  }\n\n  display() {\n    for (let sample of this.currentSampleSet) {\n      image(sample.canvas, sample.x, sample.y, sample.w, sample.h);\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.currentSampleSet;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674f49629124ec06fb8219ec",
        "createdAt": "2024-12-03T18:59:21.280Z",
        "updatedAt": "2024-12-03T18:59:21.280Z",
        "id": "674f49629124ec06fb8219ec"
      },
      {
        "name": "sweet.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/89025a3f-caaf-4e36-909e-e7998fedba69.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674f49629124ec06fb8219ef",
        "createdAt": "2024-12-03T18:59:21.280Z",
        "updatedAt": "2024-12-03T18:59:21.280Z",
        "id": "674f49629124ec06fb8219ef"
      }
    ],
    "createdAt": "2024-12-03T18:09:39.419Z",
    "updatedAt": "2024-12-03T18:59:21.280Z",
    "id": "dOMX4Sr8H"
  },
  {
    "_id": "JEKbrVrzN",
    "name": "videoKill - final copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "674f450cec74bceff785db56",
          "674f450cec74bceff785db57",
          "674f450cec74bceff785db58",
          "674f450cec74bceff785db59"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "674f450cec74bceff785db55",
        "createdAt": "2024-12-03T18:09:21.902Z",
        "updatedAt": "2024-12-03T18:09:21.902Z",
        "id": "674f450cec74bceff785db55"
      },
      {
        "name": "sketch.js",
        "content": "// ------------------- Global Variables -------------------\n\n// Sound and FFT analysis\nlet song;\nlet fft;\nlet mic;\nlet amp, mappedAmp;\n\n// Frame rate and visual effects\nlet FR = 40; // Frame rate (10 to 60)\nlet blur = 0;\nlet bgButton = 0; // Inversion toggle\nlet rain = 0; // Rain state variable\nlet previousRain = !rain; // Keep track of the previous state of `rain`\nlet raining = false; // Tracks if it's currently raining\n\n// Grain and transparency\nlet grain;\nlet grainA = 0; // Transparency (0 to 1)\nlet prevA;\n\n// Body segmentation variables\nlet bodySegmentation;\nlet video;\nlet segmentation;\nlet personImage;\n\n// Grid settings\nlet gridSize; // Number of rows and columns in the grid (1 to 10)\n// rotary to video #\nlet rot2 = 11;\n\n// Color variables for interactive controls\nlet pot1 = 0;\nlet pot2 = 0;\nlet Rval = 0,\n  Bval = 0,\n  Hval1 = 0,\n  Hval2 = 0;\n\n// Background colors (HSB mode)\nlet rot1 = 0,\n  sat1 = 0,\n  br1 = 0; // Hue, Saturation, Brightness\n\n// BodyPix options\nlet options = {\n  maskType: \"parts\",\n};\n\n// Fixed dimensions for video and canvas\nconst videoWidth = 600;\nconst videoHeight = 400;\n\n// Drops for rain effect\nlet drop = [];\n\n\n// ------------------- Preload -------------------\n\nfunction preload() {\n  //   // Load the sound file\n  // song = loadSound(\"sweet.mp3\");\n  // Load the body segmentation model\n  bodySegmentation = ml5.bodySegmentation(\"BodyPix\", options); \n}\n\n// ------------------- Setup -------------------\n\nfunction setup() {\n  // Create the canvas\n  createCanvas(videoWidth, videoHeight);\n  colorMode(HSB, 360, 100, 100, 100);\n\n\n   // initializeSound();\n  \n  // song.loop();\n  // fft = new p5.FFT();\n  // fft.setInput(song);\n\n  // Initialize drops for rain effect\n  for (let i = 0; i < 400; i++) drop[i] = new Drop();\n\n  // Create the video capture\n  video = createCapture(VIDEO);\n  video.size(videoWidth, videoHeight);\n  video.hide();\n\n  // Start the body segmentation\n  bodySegmentation.detectStart(video, gotResults);\n\n  // Create an image for segmented output\n  personImage = createImage(video.width, video.height);\n\n  // Initialize the film grain effect\n  createFilmGrain(0, 0, videoWidth, videoHeight, 500, 3);\n}\n\n// ------------------- Draw -------------------\n\nfunction draw() {\n  // fft.analyze();\n  // // Get amplitude energy from FFT\n  // amp = fft.getEnergy(10, 1050);\n\n  // Map amp value to the range 0-100\n  mappedAmp = map(amp, 0, 255, 0, 100);\n  // Background with transparency\n  background(rot1, sat1, br1);\n\n  // Map potentiometer values to colors\n  Rval = map(pot1, 0, 100, 0, 255);\n  Bval = map(pot2, 0, 100, 0, 255);\n  Hval1 = map(pot1, 0, 100, 0, 360);\n  Hval2 = map(pot2, 0, 100, 0, 360);\n\n  // Set the frame rate\n  frameRate(FR);\n\n  // Toggle raining state when the `rain` variable changes\n  if (rain !== previousRain) {\n    raining = !raining; // Toggle raining\n    previousRain = rain; // Update previous state\n  }\n\n  // Handle drops based on the raining state\n  if (raining && drop.length > 0) {\n    for (let i = 0; i < drop.length; i++) {\n      drop[i].show();\n      drop[i].update();\n    }\n  } else if (drop.length > 0) {\n    for (let i = 0; i < drop.length; i++) {\n      drop[i].show(); // Show static drops when not raining\n    }\n  }\n\n  // Display the segmented video grid\n  if (segmentation) {\n    copyForegroundPixels(video, segmentation.mask, personImage);\n    drawGrid(personImage);\n  }\n\n  // Apply visual effects\n  if (blur > 0) filter(BLUR, blur);\n  if (bgButton === 1) filter(INVERT);\n\n  // Display grain effect\n  // console.log(grainA);\n  if (grainA != prevA) {\n    createFilmGrain(0, 0, windowWidth, windowHeight, 500, 3); // Initial grain creation\n    prevA = grainA;\n  }\n  updateGrain();\n  displayGrain();\n}\n\n// ------------------- Utility Functions -------------------\n\n// Draw a grid of the segmented video\nfunction drawGrid(segmentedImage) {\n  gridSize = Math.round(map(rot2, 0, 23, 1, 10));\n  //   console.log(gridSize)\n  let cellWidth = width / gridSize; // Width of each grid cell\n  let cellHeight = height / gridSize; // Height of each grid cell\n\n  for (let y = 0; y < gridSize; y++) {\n    for (let x = 0; x < gridSize; x++) {\n      let dx = x * cellWidth; // Top-left x of grid cell\n      let dy = y * cellHeight; // Top-left y of grid cell\n      let dw = cellWidth; // Width of grid cell\n      let dh = cellHeight; // Height of grid cell\n\n      // Scale the segmented image to fit each grid cell\n      image(segmentedImage, dx, dy, dw, dh);\n    }\n  }\n}\n\n// Process the segmentation results\nfunction gotResults(result) {\n  segmentation = result;\n}\n\n// Copy foreground pixels from the video based on the mask\nfunction copyForegroundPixels(imgSource, imgMask, imgResult) {\n  imgSource.loadPixels();\n\n  imgMask.loadPixels();\n  imgResult.loadPixels();\n\n  const imgWidth = imgSource.width;\n  const imgHeight = imgSource.height;\n  const imgChannels = 4;\n  const numValues = imgWidth * imgHeight * imgChannels;\n  const imgPixels = imgSource.pixels;\n  const maskPixels = imgMask.pixels;\n  const resultPixels = imgResult.pixels;\n\n  for (let i = 0; i < numValues; i += imgChannels) {\n    let maskR = maskPixels[i];\n    let maskG = maskPixels[i + 1];\n    let maskB = maskPixels[i + 2];\n\n    // If the mask pixel is white, clear the result pixel\n    if (maskR === 255 && maskG === 255 && maskB === 255) {\n      resultPixels[i] = 0;\n      resultPixels[i + 1] = 0;\n      resultPixels[i + 2] = 0;\n      resultPixels[i + 3] = 0;\n    } else {\n      // Otherwise, copy the source pixel\n      resultPixels[i] = imgPixels[i];\n      resultPixels[i + 1] = Rval;\n      resultPixels[i + 2] = Bval;\n      resultPixels[i + 3] = 255; // Ensure the pixel is opaque\n    }\n  }\n\n  imgResult.updatePixels();\n}\n\n// ------------------- Interaction Functions -------------------\n\n// key press for fullscreen toggle\nfunction keyPressed() {\n  let fs = fullscreen();\n\n  // // Toggle song play/pause with space\n  if (key === \" \" && song.isPlaying()) song.pause();\n  else if (key === \" \") song.loop();\n  // Reset song with left arrow\n  else if (keyCode === LEFT_ARROW) {\n    song.stop();\n    song.loop();\n  } else if (!fs && keyCode === 27) {\n    fullscreen(true);\n    resizeCanvas(displayWidth, displayHeight);\n    createFilmGrain(0, 0, displayWidth, displayHeight, 500, 3);\n    initializeDrops();\n    initializeSound();\n  } else {\n    fullscreen(false);\n    resizeCanvas(videoWidth, videoHeight);\n    video.size(videoWidth, videoHeight);\n    personImage.resize(videoWidth, videoHeight);\n    createFilmGrain(0, 0, videoWidth, videoHeight, 500, 3);\n    initializeDrops();\n    initializeSound();\n  }\n}\n\n// ------------------- Grain Effect -------------------\n\nfunction updateGrain() {\n  grain.update();\n}\n\nfunction displayGrain() {\n  grain.display();\n}\n\nfunction createFilmGrain(x, y, w, h, patternSize, sampleSize) {\n  grain = new FilmGrainEffect(\n    x,\n    y,\n    w,\n    h,\n    patternSize,\n    sampleSize,\n    grainA * 0.1\n  );\n}\n\n// ------------------- Initialize Sound -------------------\n\nfunction initializeSound() {\n  // Start FFT analysis\n  fft = new p5.FFT();\n  // mic = new p5.AudioIn();\n  // mic.start();\n  song.loop();\n  fft.setInput(song);\n}\n\n// ------------------- Rain Drops -------------------\n\n// Initialize or reinitialize the drops\nfunction initializeDrops() {\n  drop = [];\n  let numDrops = floor((width * height) / 2000); // Adjust drop count based on canvas area\n  for (let i = 0; i < numDrops; i++) {\n    drop.push(new Drop());\n  }\n}\n\n// Drop class (animated falling shapes)\nfunction Drop() {\n  this.x = random(0, width);\n  this.y = random(0, height);\n\n  this.show = function () {\n    stroke(Hval1, 100, 100);\n    strokeWeight(1);\n    fill(Hval2, 100, 100);\n    ellipse(this.x, this.y, random(1, 5), random(1, 5));\n  };\n\n  this.update = function () {\n    this.speed = 20;\n      // mappedAmp / 4;\n    this.gravity = 1.05;\n    this.y += this.speed * this.gravity;\n\n    if (this.y > height) {\n      this.y = random(0, -height);\n      this.gravity = 0;\n    }\n  };\n}\n\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "674f450cec74bceff785db58",
        "createdAt": "2024-12-03T18:09:21.902Z",
        "updatedAt": "2024-12-03T18:09:21.902Z",
        "id": "674f450cec74bceff785db58"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ml5.js faceMesh p5 Webcam Example</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.2/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.2/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.2/addons/p5.sound.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@0.20.0-alpha.4/dist/ml5.min.js\"></script>\n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n    \n  </head>\n  <body>\n    <script src=\"FilmGrainEffect.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674f450cec74bceff785db57",
        "createdAt": "2024-12-03T18:09:21.902Z",
        "updatedAt": "2024-12-03T18:09:21.902Z",
        "id": "674f450cec74bceff785db57"
      },
      {
        "name": "FilmGrainEffect.js",
        "content": "class Effects {\n  static counter = 0;\n}\n\nclass FilmGrainEffect {\n  static counter = 0;\n  static index = 0;\n\n  constructor(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.id = \"FilmGrain_\" + Effects.counter++;\n    this.reset(x, y, w, h, patternSize, sampleSize, patternAlpha);\n  }\n\n  reset(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.samples = [];\n    this.currentSampleSet = [];\n    this.patternRefreshInterval = 4;\n    FilmGrainEffect.counter = 0;\n    FilmGrainEffect.index = 0;\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.p = patternSize;\n    this.s = sampleSize;\n    this.a = map(patternAlpha, 0, 1, 0, 255);\n    for (let i = 0; i < sampleSize; i++) {\n      this.samples.push(\n        this.pattern(this.x, this.y, this.w, this.h, this.p, this.a)\n      );\n    }\n  }\n\n  add(effect) {}\n\n  pattern(x, y, w, h, patternSize, patternAlpha) {\n    // luodaan uusi p5 canvas || create new p5 canvas\n    let pg = createGraphics(patternSize, patternSize);\n    pg.pixelDensity(1);\n\n    // luodaan kohina | create noise\n    pg.loadPixels();\n    for (var _y = 0; _y < patternSize; _y += 1) {\n      for (var _x = 0; _x < patternSize; _x += 1) {\n        let i = (_x + _y * patternSize) * 4;\n        let value = (Math.random() * 255) | 0;\n        pg.pixels[i] = value;\n        pg.pixels[i + 1] = value;\n        pg.pixels[i + 2] = value;\n        pg.pixels[i + 3] = patternAlpha;\n      }\n    }\n    pg.updatePixels();\n\n    // lasketaan kohinapalojen paikat ja tallennetaan ne | calculate position of noise pieces and save them\n    let xlen = w / patternSize;\n    let ylen = h / patternSize;\n\n    let samples = [];\n    for (let i = 0; i < ylen; i++) {\n      for (let j = 0; j < xlen; j++) {\n        let _x = x + patternSize * j;\n        let _y = y + patternSize * i;\n        samples.push({\n          canvas: pg,\n          x: _x,\n          y: _y,\n          w: patternSize,\n          h: patternSize,\n        });\n      }\n    }\n    \n    return samples;\n  }\n\n  update(data) {\n    if (FilmGrainEffect.counter++ === this.patternRefreshInterval) {\n      FilmGrainEffect.counter = 0;\n      FilmGrainEffect.index++;\n      if (!this.samples[FilmGrainEffect.index]) {\n        FilmGrainEffect.index = 0;\n      }\n    }\n    this.currentSampleSet = this.samples[FilmGrainEffect.index];\n  }\n\n  display() {\n    for (let sample of this.currentSampleSet) {\n      image(sample.canvas, sample.x, sample.y, sample.w, sample.h);\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.currentSampleSet;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674f450cec74bceff785db56",
        "createdAt": "2024-12-03T18:09:21.902Z",
        "updatedAt": "2024-12-03T18:09:21.902Z",
        "id": "674f450cec74bceff785db56"
      },
      {
        "name": "sweet.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/04a55e9d-2ab1-4632-bcce-fd03e82c6f33.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674f450cec74bceff785db59",
        "createdAt": "2024-12-03T18:09:21.902Z",
        "updatedAt": "2024-12-03T18:09:21.902Z",
        "id": "674f450cec74bceff785db59"
      }
    ],
    "createdAt": "2024-12-03T17:51:09.791Z",
    "updatedAt": "2024-12-03T18:09:21.902Z",
    "id": "JEKbrVrzN"
  },
  {
    "_id": "89DohdKNp",
    "name": "videoKill - final copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "674273a8ee42b94450901162",
          "674273a8ee42b94450901163",
          "674273a8ee42b94450901164"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "674273a8ee42b94450901161",
        "createdAt": "2024-11-23T18:33:49.665Z",
        "updatedAt": "2024-11-23T18:33:49.665Z",
        "id": "674273a8ee42b94450901161"
      },
      {
        "name": "sketch.js",
        "content": "// ------------------- Global Variables -------------------\n\n// Frame rate and visual effects\nlet FR = 40; // Frame rate (10 to 60)\nlet blur = 0;\nlet bgButton = 0; // Inversion toggle\nlet rain = 0; // Rain state variable\nlet previousRain = !rain; // Keep track of the previous state of `rain`\nlet raining = false; // Tracks if it's currently raining\n\n// Grain and transparency\nlet grain;\nlet alpha = 0; // Transparency (0 to 1)\n\n// Body segmentation variables\nlet bodySegmentation;\nlet video;\nlet segmentation;\nlet personImage;\n\n// Grid settings\nlet gridSize; // Number of rows and columns in the grid (1 to 10)\n// rotary to video #\nlet rot2 = 11;\n\n// Color variables for interactive controls\nlet pot1 = 0;\nlet pot2 = 100;\nlet Rval = 0,\n  Bval = 0,\n  Hval1 = 0,\n  Hval2 = 0;\n\n\n\n// Background colors (HSB mode)\nlet hue1 = 0,\n  sat1 = 0,\n  br1 = 0; // Hue, Saturation, Brightness\n\n// BodyPix options\nlet options = {\n  maskType: \"parts\",\n};\n\n// Fixed dimensions for video and canvas\nconst videoWidth = 600;\nconst videoHeight = 400;\n\n// Drops for rain effect\nlet drop = [];\n\n// ------------------- Preload -------------------\n\nfunction preload() {\n  // Load the body segmentation model\n  bodySegmentation = ml5.bodySegmentation(\"BodyPix\", options);\n}\n\n// ------------------- Setup -------------------\n\nfunction setup() {\n  // Create the canvas\n  createCanvas(videoWidth, videoHeight);\n  colorMode(HSB, 360, 100, 100, 100);\n\n  // Initialize drops for rain effect\n  for (let i = 0; i < 400; i++) drop[i] = new Drop();\n\n  // Create the video capture\n  video = createCapture(VIDEO);\n  video.size(videoWidth, videoHeight);\n  video.hide();\n\n  // Start the body segmentation\n  bodySegmentation.detectStart(video, gotResults);\n\n  // Create an image for segmented output\n  personImage = createImage(video.width, video.height);\n\n  // Initialize the film grain effect\n  createFilmGrain(0, 0, videoWidth, videoHeight, 500, 3);\n}\n\n// ------------------- Draw -------------------\n\nfunction draw() {\n  // Background with transparency\n  background(hue1, sat1, br1);\n\n  // Map potentiometer values to colors\n  Rval = map(pot1, 0, 100, 0, 255);\n  Bval = map(pot2, 0, 100, 0, 255);\n  Hval1 = map(pot1, 0, 100, 0, 360);\n  Hval2 = map(pot2, 0, 100, 0, 360);\n  \n\n  // Set the frame rate\n  frameRate(FR);\n\n  // Toggle raining state when the `rain` variable changes\n  if (rain !== previousRain) {\n    raining = !raining; // Toggle raining\n    previousRain = rain; // Update previous state\n  }\n\n  // Handle drops based on the raining state\n  if (raining && drop.length > 0) {\n    for (let i = 0; i < drop.length; i++) {\n      drop[i].show();\n      drop[i].update();\n    }\n  } else if (drop.length > 0) {\n    for (let i = 0; i < drop.length; i++) {\n      drop[i].show(); // Show static drops when not raining\n    }\n  }\n\n  // Display the segmented video grid\n  if (segmentation) {\n    copyForegroundPixels(video, segmentation.mask, personImage);\n    drawGrid(personImage);\n  }\n\n  // Apply visual effects\n  if (blur > 0) filter(BLUR, blur);\n  if (bgButton === 1) filter(INVERT);\n\n  // Update and display grain\n  updateGrain();\n  displayGrain();\n}\n\n// ------------------- Utility Functions -------------------\n\n// Draw a grid of the segmented video\nfunction drawGrid(segmentedImage) {\n  gridSize = Math.round(map(rot2, 0, 23, 1, 10));\n  console.log(gridSize)\n  let cellWidth = width / gridSize; // Width of each grid cell\n  let cellHeight = height / gridSize; // Height of each grid cell\n\n  for (let y = 0; y < gridSize; y++) {\n    for (let x = 0; x < gridSize; x++) {\n      let dx = x * cellWidth; // Top-left x of grid cell\n      let dy = y * cellHeight; // Top-left y of grid cell\n      let dw = cellWidth; // Width of grid cell\n      let dh = cellHeight; // Height of grid cell\n\n      // Scale the segmented image to fit each grid cell\n      image(segmentedImage, dx, dy, dw, dh);\n    }\n  }\n}\n\n// Process the segmentation results\nfunction gotResults(result) {\n  segmentation = result;\n}\n\n// Copy foreground pixels from the video based on the mask\nfunction copyForegroundPixels(imgSource, imgMask, imgResult) {\n  imgSource.loadPixels();\n  imgMask.loadPixels();\n  imgResult.loadPixels();\n\n  const imgWidth = imgSource.width;\n  const imgHeight = imgSource.height;\n  const imgChannels = 4;\n  const numValues = imgWidth * imgHeight * imgChannels;\n  const imgPixels = imgSource.pixels;\n  const maskPixels = imgMask.pixels;\n  const resultPixels = imgResult.pixels;\n\n  for (let i = 0; i < numValues; i += imgChannels) {\n    let maskR = maskPixels[i];\n    let maskG = maskPixels[i + 1];\n    let maskB = maskPixels[i + 2];\n\n    // If the mask pixel is white, clear the result pixel\n    if (maskR === 255 && maskG === 255 && maskB === 255) {\n      resultPixels[i] = 0;\n      resultPixels[i + 1] = 0;\n      resultPixels[i + 2] = 0;\n      resultPixels[i + 3] = 0;\n    } else {\n      // Otherwise, copy the source pixel\n      resultPixels[i] = imgPixels[i];\n      resultPixels[i + 1] = Rval;\n      resultPixels[i + 2] = Bval;\n      resultPixels[i + 3] = 255; // Ensure the pixel is opaque\n    }\n  }\n\n  imgResult.updatePixels();\n}\n\n// ------------------- Interaction Functions -------------------\n\n// Handle mouse press for fullscreen toggle\nfunction mousePressed() {\n  let fs = fullscreen();\n\n  if (!fs) {\n    fullscreen(true);\n    resizeCanvas(displayWidth, displayHeight);\n    video.size(displayWidth, displayHeight);\n    personImage.resize(displayWidth, displayHeight);\n    createFilmGrain(0, 0, displayWidth, displayHeight, 500, 3);\n    initializeDrops();\n  } else {\n    fullscreen(false);\n    resizeCanvas(videoWidth, videoHeight);\n    video.size(videoWidth, videoHeight);\n    personImage.resize(videoWidth, videoHeight);\n    createFilmGrain(0, 0, videoWidth, videoHeight, 500, 3);\n    initializeDrops();\n  }\n}\n\n// ------------------- Grain Effect -------------------\n\nfunction updateGrain() {\n  grain.update();\n}\n\nfunction displayGrain() {\n  grain.display();\n}\n\nfunction createFilmGrain(x, y, w, h, patternSize, sampleSize) {\n  grain = new FilmGrainEffect(x, y, w, h, patternSize, sampleSize, alpha * 0.1);\n}\n\n// ------------------- Rain Drops -------------------\n\n// Initialize or reinitialize the drops\nfunction initializeDrops() {\n  drop = [];\n  let numDrops = floor((width * height) / 2000); // Adjust drop count based on canvas area\n  for (let i = 0; i < numDrops; i++) {\n    drop.push(new Drop());\n  }\n}\n\n// Drop class (animated falling shapes)\nfunction Drop() {\n  this.x = random(0, width);\n  this.y = random(0, height);\n\n  this.show = function () {\n    stroke(Hval1, 100, 100);\n    strokeWeight(1);\n    fill(Hval2, 100, 100);\n    ellipse(this.x, this.y, random(1, 5), random(1, 5));\n  };\n\n  this.update = function () {\n    this.speed = 18;\n    this.gravity = 1.05;\n    this.y += this.speed * this.gravity;\n\n    if (this.y > height) {\n      this.y = random(0, -height);\n      this.gravity = 0;\n    }\n  };\n}\n\n// // ------------------- Key Interaction -------------------\n\n// // Key handling for song control\n// // function keyPressed() {\n// //   // Toggle song play/pause with space\n// //   if (key === \" \" && song.isPlaying()) song.pause();\n// //   else if (key === \" \") song.loop();\n\n// //   // Restart song with left arrow\n// //   else if (keyCode === LEFT_ARROW) {\n// //     song.stop();\n// //     song.loop();\n// //   }\n// // }\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "674273a8ee42b94450901164",
        "createdAt": "2024-11-23T18:33:49.665Z",
        "updatedAt": "2024-11-23T18:33:49.665Z",
        "id": "674273a8ee42b94450901164"
      },
      {
        "name": "index.html",
        "content": "<!--\n  👋 Hello! This is an ml5.js example made and shared with ❤️.\n  Learn more about the ml5.js project: https://ml5js.org/\n  ml5.js license and Code of Conduct: https://github.com/ml5js/ml5-next-gen/blob/main/LICENSE.md\n\n  This example demonstrates tracking a particular face feature through ml5.faceMesh.\n-->\n\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ml5.js faceMesh p5 Webcam Example</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.2/p5.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@0.20.0-alpha.4/dist/ml5.min.js\"></script>\n  </head>\n  <body>\n    <script src=\"FilmGrainEffect.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674273a8ee42b94450901163",
        "createdAt": "2024-11-23T18:33:49.665Z",
        "updatedAt": "2024-11-23T18:33:49.665Z",
        "id": "674273a8ee42b94450901163"
      },
      {
        "name": "FilmGrainEffect.js",
        "content": "class Effects {\n  static counter = 0;\n}\n\nclass FilmGrainEffect {\n  static counter = 0;\n  static index = 0;\n\n  constructor(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.id = \"FilmGrain_\" + Effects.counter++;\n    this.reset(x, y, w, h, patternSize, sampleSize, patternAlpha);\n  }\n\n  reset(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.samples = [];\n    this.currentSampleSet = [];\n    this.patternRefreshInterval = 4;\n    FilmGrainEffect.counter = 0;\n    FilmGrainEffect.index = 0;\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.p = patternSize;\n    this.s = sampleSize;\n    this.a = map(patternAlpha, 0, 1, 0, 255);\n    for (let i = 0; i < sampleSize; i++) {\n      this.samples.push(\n        this.pattern(this.x, this.y, this.w, this.h, this.p, this.a)\n      );\n    }\n  }\n\n  add(effect) {}\n\n  pattern(x, y, w, h, patternSize, patternAlpha) {\n    // luodaan uusi p5 canvas || create new p5 canvas\n    let pg = createGraphics(patternSize, patternSize);\n    pg.pixelDensity(1);\n\n    // luodaan kohina | create noise\n    pg.loadPixels();\n    for (var _y = 0; _y < patternSize; _y += 1) {\n      for (var _x = 0; _x < patternSize; _x += 1) {\n        let i = (_x + _y * patternSize) * 4;\n        let value = (Math.random() * 255) | 0;\n        pg.pixels[i] = value;\n        pg.pixels[i + 1] = value;\n        pg.pixels[i + 2] = value;\n        pg.pixels[i + 3] = patternAlpha;\n      }\n    }\n    pg.updatePixels();\n\n    // lasketaan kohinapalojen paikat ja tallennetaan ne | calculate position of noise pieces and save them\n    let xlen = w / patternSize;\n    let ylen = h / patternSize;\n\n    let samples = [];\n    for (let i = 0; i < ylen; i++) {\n      for (let j = 0; j < xlen; j++) {\n        let _x = x + patternSize * j;\n        let _y = y + patternSize * i;\n        samples.push({\n          canvas: pg,\n          x: _x,\n          y: _y,\n          w: patternSize,\n          h: patternSize,\n        });\n      }\n    }\n    \n    return samples;\n  }\n\n  update(data) {\n    if (FilmGrainEffect.counter++ === this.patternRefreshInterval) {\n      FilmGrainEffect.counter = 0;\n      FilmGrainEffect.index++;\n      if (!this.samples[FilmGrainEffect.index]) {\n        FilmGrainEffect.index = 0;\n      }\n    }\n    this.currentSampleSet = this.samples[FilmGrainEffect.index];\n  }\n\n  display() {\n    for (let sample of this.currentSampleSet) {\n      image(sample.canvas, sample.x, sample.y, sample.w, sample.h);\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.currentSampleSet;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "674273a8ee42b94450901162",
        "createdAt": "2024-11-23T18:33:49.665Z",
        "updatedAt": "2024-11-23T18:33:49.665Z",
        "id": "674273a8ee42b94450901162"
      }
    ],
    "createdAt": "2024-11-24T00:30:32.636Z",
    "updatedAt": "2024-11-24T00:30:32.636Z",
    "id": "89DohdKNp"
  },
  {
    "_id": "tTbfM_P_a",
    "name": "videoKILL - w/ audio",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "675a04a18d5c39aa15ee341b",
          "675a04a18d5c39aa15ee341c",
          "675a0668c0bfecfb8417f66d",
          "675a04a18d5c39aa15ee341d"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "675a04a18d5c39aa15ee341a",
        "createdAt": "2024-12-16T19:24:44.408Z",
        "updatedAt": "2024-12-16T19:24:44.408Z",
        "id": "675a04a18d5c39aa15ee341a"
      },
      {
        "name": "sketch.js",
        "content": "// ------------------- Global Variables -------------------\n\n// Frame rate and visual effects\nlet FR = 60; // Frame rate (10 to 60)\nlet blur = 0; // Blur effect strength\nlet bgButton = 0; // Background inversion toggle\nlet rain = 0; // Rain effect toggle\n\n// Grain and transparency\nlet grain; // Grain effect instance\nlet grainA = 0; // Grain transparency (0 to 1)\nlet prevA; // Previous grain transparency for comparison\n\n// Body segmentation variables\nlet bodySegmentation; // Body segmentation instance\nlet video; // Video capture\nlet segmentation; // Body segmentation results\nlet personImage; // Image for segmented body output\n\n// Grid settings\nlet gridSize; // Number of rows and columns in the grid (1 to 10)\nlet rot2 = 11; // Rotary control for grid columns and rows\n\n// Delay variables for grid effect\nlet delay = 0; // Delay toggle (0 = off, 1 = on)\nlet buffers = []; // Buffers for delayed frames\nlet maxDelay = 20; // Maximum delay multiplier for buffer size\n\n// Color variables for interactive controls\nlet pot1 = 0,\n  pot2 = 0; // Potentiometer values\nlet Rval = 0,\n  Bval = 0; // Mapped red and blue values\nlet Hval1 = 0,\n  Hval2 = 0; // Mapped hue values for visual effects\n\n// Background colors (HSB mode)\nlet rot1 = 0,\n  hue = 0,\n  sat1 = 0,\n  br1 = 0; // Hue, Saturation, Brightness\n\n// BodyPix options\nlet options = { maskType: \"parts\" };\n\n// Fixed dimensions for video and canvas\nconst videoWidth = 600;\nconst videoHeight = 400;\n\n// Raindrop and ball effect variables\nlet drop = []; // Drops for rain effect\nlet bballs = []; // Ball objects for effect\nlet ballsEffect = 0; // Toggle for ball effect\n\n// Ripple effect variables\nlet ripples = []; // Ripple objects\nlet rippleA = 0; // Ripple toggle\n\n// Lightning effect variables\nlet lightA = 0; // Lightning effect toggle\n\n// p5.webserial library instance and related variables\nconst serial = new p5.WebSerial(); // WebSerial library instance\nlet portButton; // Button for port selection\nlet inData = []; // Array for incoming serial data\nlet inString = []; // String for incoming serial data\nlet outByte = 0; // Byte for outgoing serial data\n\n// Variables for laser effect\nlet laser = 0; // Laser toggle\nlet leftLine = {},\n  rightLine = {}; // Laser line positions\nlet distValue = 10; // Distance between laser lines\nlet lineValue = 75; // Number of laser lines\nlet distDirection = 1; // Direction for distance animation\nlet lineDirection = 1; // Direction for line count animation\n\n// ------------------- Preload -------------------\n\nlet sound;\nlet amp;\nlet mic;\nlet myAmp;\nlet mappedAmp;\n\nfunction preload() {\n  // Load the body segmentation model\n  bodySegmentation = ml5.bodySegmentation(\"BodyPix\", options);\n  // sound = loadSound(\"shiver-short.mp3\")\n}\n\n// ------------------- Initialize Mic -------------------\n\nfunction initializeSound() {\n     // Start FFT analysis\n  fft = new p5.FFT();\n  mic = new p5.AudioIn();\n  mic.start();\n  // amp = new p5.Amplitude(0.9)\n  fft.setInput(mic);\n}\n\n// ------------------- Setup -------------------\n\nfunction setup() {\n  createCanvas(videoWidth, videoHeight); // Canvas setup\n  colorMode(HSB, 360, 100, 100, 100); // Use HSB color mode\n\n  xLength = windowWidth;\n  yLength = windowHeight;\n\n  initializeLines(); // Initialize laser lines\n  initializeDrops(); // Initialize rain drops\n  initializeBalls(); // Initialize balls for visual effect\n\n  video = createCapture(VIDEO); // Capture video\n  video.size(videoWidth, videoHeight);\n  video.hide();\n\n  bodySegmentation.detectStart(video, gotResults); // Start body segmentation\n  personImage = createImage(video.width, video.height); // Image for segmented body\n\n  createFilmGrain(0, 0, videoWidth, videoHeight, 500, 3); // Create grain effect\n\n  // Setup WebSerial events\n  setupWebSerial();\n  initializeSound()\n  // sound.loop()\n}\n\n// Handle resizing the window dynamically\nfunction windowResized() {\n  xLength = windowWidth;\n  yLength = windowHeight;\n  resizeCanvas(xLength, yLength);\n  initializeLines();\n  initializeDrops();\n  initializeBalls();\n}\n\n// ------------------- Draw -------------------\n\nfunction draw() {\n  // Set background color\n  background(hue, sat1, br1);\n  \n  // get amplitude level\n  // myAmp = amp.getLevel();\n  fft.analyze();\n  // Get amplitude energy from FFT\n  amp = fft.getEnergy(10, 1050);\n\n  // Map amp value to the range 0-100\n  mappedAmp = map(amp, 0, 255, 0, 100);\n\n  console.log(amp)\n  \n  // Map potentiometer values to colors\n  mapPotentiometerValues();\n\n  // Set frame rate\n  frameRate(FR);\n\n  // Ball effect\n  if (ballsEffect === 1) drawBalls();\n\n  // Laser effect\n  if (laser === 1) drawLasersWithAnimation();\n\n  // Rain effect\n  if (rain === 1) drawRainDrops();\n\n  // Ripple effect\n  drawRipples();\n\n  myLightA(ranH1, 100, 100);\n\n  // Segmented video grid\n  drawSegmentedVideoGrid();\n\n  // Apply visual effects (blur, invert, grain)\n  applyVisualEffects();\n}\n\n// ------------------- Helper Functions -------------------\n\n// Potentiometer mapping for colors\nfunction mapPotentiometerValues() {\n  hue = map(rot1, 0, 23, 0, 360);\n  Rval = map(pot1, 0, 100, 0, 255);\n  Bval = map(pot2, 0, 100, 0, 255);\n  Hval1 = map(pot1, 0, 100, 0, 360);\n  Hval2 = map(pot2, 0, 100, 0, 360);\n  ranH1 = random((Hval1 + 0) % 360, (Hval1 + 50) % 360);\n  ranH2 = random((Hval2 + 0) % 360, (Hval2 + 50) % 360);\n}\n\n// Draw ball effect\nfunction drawBalls() {\n  for (let ball of bballs) {\n    ball.draw();\n  }\n}\n\n// Draw rain effect\nfunction drawRainDrops() {\n  for (let i = 0; i < drops.length; i++) {\n    drops[i].show();\n    drops[i].update();\n  }\n}\n\n// Handle ripple effect\nfunction drawRipples() {\n  if (rippleA === 1 && frameCount % 10 === 0) {\n    ripples.push(new Ripple(random(width), random(height), ranH1));\n  }\n\n  for (let i = ripples.length - 1; i >= 0; i--) {\n    ripples[i].draw();\n    if (ripples[i].isFinished()) ripples.splice(i, 1);\n  }\n}\n\n// Initialize buffers for grid cells if not already done\nfunction initializeBuffers(cols, rows) {\n  let totalCells = cols * rows;\n  if (buffers.length !== totalCells) {\n    buffers = [];\n    for (let i = 0; i < totalCells; i++) {\n      buffers.push([]);\n    }\n  }\n}\nfunction manageBuffers(currentFrame) {\n  let cols = Math.round(map(rot2, 0, 23, 1, 10));\n  let rows = cols;\n  initializeBuffers(cols, rows);\n\n  // Create a new `p5.Image` to store the masked frame\n  let maskedFrame = createImage(video.width, video.height);\n  copyForegroundPixels(currentFrame, segmentation.mask, maskedFrame);\n\n  // Add the masked frame to each buffer\n  for (let i = 0; i < buffers.length; i++) {\n    let delayAmount = (i + 1) * 2; // Per-cell delay factor\n    buffers[i].push(maskedFrame.get()); // Store a copy of the masked frame\n    if (buffers[i].length > delayAmount) {\n      buffers[i].shift();\n    }\n  }\n}\n\nfunction drawDelayedGrid() {\n  let cols = Math.round(map(rot2, 0, 23, 1, 10));\n  let rows = cols;\n  let cellWidth = width / cols;\n  let cellHeight = height / rows;\n\n  for (let y = 0; y < rows; y++) {\n    for (let x = 0; x < cols; x++) {\n      let index = x + y * cols;\n\n      // Display the delayed masked frame from the buffer\n      if (buffers[index].length > 0) {\n        let frameToShow = buffers[index][0];\n        image(\n          frameToShow,\n          x * cellWidth,\n          y * cellHeight,\n          cellWidth,\n          cellHeight\n        );\n      }\n    }\n  }\n}\n\n// Draw the grid with live frames\nfunction drawGrid(segmentedImage) {\n  let cols = Math.round(map(rot2, 0, 23, 1, 10));\n  let rows = cols;\n  let cellWidth = width / cols;\n  let cellHeight = height / rows;\n\n  for (let y = 0; y < rows; y++) {\n    for (let x = 0; x < cols; x++) {\n      let dx = x * cellWidth;\n      let dy = y * cellHeight;\n\n      image(segmentedImage, dx, dy, cellWidth, cellHeight);\n    }\n  }\n}\n\n// Process the segmentation results\nfunction gotResults(result) {\n  segmentation = result;\n}\n\n// Segmented video grid rendering\nfunction drawSegmentedVideoGrid() {\n  if (segmentation) {\n    copyForegroundPixels(video, segmentation.mask, personImage);\n    if (delay === 1) {\n      manageBuffers(personImage);\n      drawDelayedGrid();\n    } else {\n      buffers = []; // Clear buffers when delay is off\n      drawGrid(personImage);\n    }\n  }\n}\n\n// Copy foreground pixels from the video based on the mask\nfunction copyForegroundPixels(imgSource, imgMask, imgResult) {\n  imgSource.loadPixels();\n  imgMask.loadPixels();\n  imgResult.loadPixels();\n\n  const imgWidth = imgSource.width;\n  const imgHeight = imgSource.height;\n  const imgChannels = 4;\n  const numValues = imgWidth * imgHeight * imgChannels;\n  const imgPixels = imgSource.pixels;\n  const maskPixels = imgMask.pixels;\n  const resultPixels = imgResult.pixels;\n\n  for (let i = 0; i < numValues; i += imgChannels) {\n    let maskR = maskPixels[i];\n    let maskG = maskPixels[i + 1];\n    let maskB = maskPixels[i + 2];\n\n    // If the mask pixel is white, clear the result pixel\n    if (maskR === 255 && maskG === 255 && maskB === 255) {\n      resultPixels[i] = 0;\n      resultPixels[i + 1] = 0;\n      resultPixels[i + 2] = 0;\n      resultPixels[i + 3] = 0;\n    } else {\n      // Otherwise, copy the source pixel with applied colors\n      resultPixels[i] = imgPixels[i]; // Red channel unchanged\n      resultPixels[i + 1] = Rval; // Green channel modified by potentiometer\n      resultPixels[i + 2] = Bval; // Blue channel modified by potentiometer\n      resultPixels[i + 3] = 255; // Ensure the pixel is opaque\n    }\n  }\n\n  imgResult.updatePixels();\n}\n\n// Apply visual effects\nfunction applyVisualEffects() {\n  if (blur > 0) filter(BLUR, blur);\n  if (bgButton === 1) filter(INVERT);\n\n  if (grainA !== prevA) {\n    createFilmGrain(0, 0, windowWidth, windowHeight, 500, 3);\n    prevA = grainA;\n  }\n  updateGrain();\n  displayGrain();\n}\n\n// ------------------- Grain Effect -------------------\n\nfunction updateGrain() {\n  grain.update();\n}\n\nfunction displayGrain() {\n  grain.display();\n}\n\nfunction createFilmGrain(x, y, w, h, patternSize, sampleSize) {\n  grain = new FilmGrainEffect(\n    x,\n    y,\n    w,\n    h,\n    patternSize,\n    sampleSize,\n    grainA * 0.1\n  );\n}\n\n// ------------------- Ripple Class -------------------\n\nclass Ripple {\n  constructor(x, y, hue) {\n    this.x = x;\n    this.y = y;\n    this.hue = hue;\n    this.size = 0;\n    this.opacity = 255;\n  }\n\n  draw() {\n    this.size += 10;\n    this.opacity -= 5;\n    noFill();\n    strokeWeight(2);\n    stroke(this.hue, 100, 100, this.opacity);\n    circle(this.x, this.y, this.size);\n    circle(this.x, this.y, this.size * 0.75);\n    circle(this.x, this.y, this.size * 0.5);\n  }\n\n  isFinished() {\n    return this.opacity <= 0;\n  }\n}\n\n// Line animation coordinates\nlet xCoord1 = 0,\n  yCoord1 = 0,\n  xCoord2 = 0,\n  yCoord2 = 0;\nfunction myLightA(H, S, B) {\n  if (lightA === 1) {\n    // Only draw lightning when lightA is enabled\n    for (let i = 0; i < 300; i++) {\n      xCoord1 = xCoord2;\n      yCoord1 = yCoord2;\n      xCoord2 = xCoord1 + int(random(-20, 20));\n      yCoord2 = yCoord1 + int(random(-10, 20));\n\n      strokeWeight(random(3, 5));\n      strokeJoin(MITER);\n      stroke(H, S, B);\n      line(xCoord1, yCoord1, xCoord2, yCoord2);\n\n      if (\n        xCoord2 > windowWidth ||\n        xCoord2 < 0 ||\n        yCoord2 > windowHeight ||\n        yCoord2 < 0\n      ) {\n        xCoord2 = int(random(0, windowWidth));\n        yCoord2 = 0;\n      }\n    }\n  }\n}\n\n// ------------------- Interaction Functions -------------------\n\nfunction keyPressed() {\n  let fs = fullscreen();\n\n  if (!fs && keyCode === 27) {\n    fullscreen(true);\n    resizeCanvas(displayWidth, displayHeight);\n    createFilmGrain(0, 0, displayWidth, displayHeight, 500, 3);\n  } else if (fs && keyCode === 27) {\n    fullscreen(false);\n    resizeCanvas(videoWidth, videoHeight);\n    video.size(videoWidth, videoHeight);\n    personImage.resize(videoWidth, videoHeight);\n    createFilmGrain(0, 0, videoWidth, videoHeight, 500, 3);\n  }\n\n  // Toggle random ripples\n  if (key === \"a\" || key === \"A\") {\n    rippleA = 1 - rippleA;\n  }\n\n  // Toggle lights\n  if (key === \"z\") lightA = 1 - lightA;\n\n  // Toggle delay\n  if (key === \"d\") delay = 1 - delay;\n\n  // Toggle laser effect\n  if (key === \"l\" || key === \"L\") laser = 1 - laser;\n\n  // Toggle rain effect\n  if (key === \"r\" || key === \"R\") rain = 1 - rain;\n\n  // Toggle ball effect\n  if (key === \"b\" || key === \"B\") ballsEffect = 1 - ballsEffect;\n}\n\n// ------------------- Laser Initialization -------------------\n\nfunction initializeLines() {\n  // Initialize or update laser line positions\n  leftLine = {\n    x1: 0,\n    y1: yLength,\n    x2: xLength,\n    y2: 0,\n    offset: 0, // Movement offset\n  };\n\n  rightLine = {\n    x1: xLength,\n    y1: yLength,\n    x2: 0,\n    y2: 0,\n    offset: 0, // Movement offset\n  };\n}\n\n// ------------------- Laser Motion Update -------------------\n\nfunction updateLaserMotion() {\n  let maxOffset = width / 4; // Maximum oscillation range\n\n  // Use sine wave for smooth oscillation\n  leftLine.offset = sin(frameCount * 0.02) * maxOffset;\n  rightLine.offset = cos(frameCount * 0.02) * maxOffset;\n\n  // Update positions based on offset\n  leftLine.x1 = leftLine.offset;\n  leftLine.x2 = xLength - leftLine.offset;\n\n  rightLine.x1 = xLength - rightLine.offset;\n  rightLine.x2 = rightLine.offset;\n}\n\n// ------------------- Laser Value Animation -------------------\n\nfunction animateValues() {\n  // Change distValue to create \"opening\" and \"closing\" effect\n  distValue += distDirection * 0.05;\n  if (distValue > 10 || distValue < 2) {\n    distDirection *= -1; // Reverse direction\n  }\n\n  // Change lineValue to expand or shrink the number of lines\n  lineValue += lineDirection * 0.1;\n  if (lineValue > 30 || lineValue < 5) {\n    lineDirection *= -1; // Reverse direction\n  }\n}\n\n// ------------------- Laser Drawing -------------------\n\nfunction drawLasersWithAnimation() {\n  // Animate laser lines and values\n  updateLaserMotion();\n  animateValues();\n\n  // Draw all four laser patterns\n  drawLasers();\n}\n\nfunction drawLasers() {\n  vertLine1();\n  vertLine2();\n  vertLine3();\n  vertLine4();\n}\n\n// Laser patterns\n\nfunction vertLine1() {\n  strokeWeight(1);\n  stroke(ranH1, 100, 100);\n  let x2 = leftLine.x2;\n  line(leftLine.x1, leftLine.y1, leftLine.x2, leftLine.y2);\n  for (let i = 0; i < lineValue; i++) {\n    line(leftLine.x1, leftLine.y1, x2, leftLine.y2);\n    let shiftX = -distValue;\n    x2 += shiftX;\n  }\n}\n\nfunction vertLine2() {\n  strokeWeight(1);\n  stroke(ranH1, 100, 100);\n  let x2 = rightLine.x2;\n  line(rightLine.x1, rightLine.y1, rightLine.x2, rightLine.y2);\n  for (let i = 0; i < lineValue; i++) {\n    line(rightLine.x1, rightLine.y1, x2, rightLine.y2);\n    let shiftX = distValue;\n    x2 += shiftX;\n  }\n}\n\nfunction vertLine3() {\n  strokeWeight(1);\n  stroke(ranH2, 100, 100);\n  let x2 = leftLine.x2;\n  line(leftLine.x1, leftLine.y2, leftLine.x2, leftLine.y1);\n  for (let i = 0; i < lineValue; i++) {\n    line(leftLine.x1, leftLine.y2, x2, leftLine.y1);\n    let shiftX = -distValue;\n    x2 += shiftX;\n  }\n}\n\nfunction vertLine4() {\n  strokeWeight(1);\n  stroke(ranH2, 100, 100);\n  let x2 = rightLine.x2;\n  line(rightLine.x1, rightLine.y2, rightLine.x2, rightLine.y1);\n  for (let i = 0; i < lineValue; i++) {\n    line(rightLine.x1, rightLine.y2, x2, rightLine.y1);\n    let shiftX = distValue;\n    x2 += shiftX;\n  }\n}\n\n// ------------------- Rain Drops Initialization -------------------\n\nfunction initializeDrops() {\n  drops = [];\n  let numDrops = floor((width * height) / 4000); // Adjust drop count based on canvas area\n  for (let i = 0; i < numDrops; i++) {\n    drops.push(new Drop());\n  }\n}\n\n// ------------------- Drop Class -------------------\n\nfunction Drop() {\n  this.x = random(0, width);\n  this.y = random(0, height);\n\n  this.show = function () {\n    stroke(Hval1, 100, 100);\n    strokeWeight(1);\n    fill(Hval2, 100, 100);\n    ellipse(this.x, this.y, random(1, 5), random(1, 5));\n  };\n\n  this.update = function () {\n    this.speed = 20;\n    this.gravity = 1.05;\n    this.y += this.speed * this.gravity;\n\n    if (this.y > height) {\n      this.y = random(0, -height);\n      this.gravity = 0;\n    }\n  };\n}\n// ------------------- Ball Initialization -------------------\n\nfunction initializeBalls() {\n  bballs = [];\n  let numBalls = 700; // Total number of balls\n  for (let i = 0; i < numBalls; i++) {\n    bballs.push(\n      new Ball(\n        random(0, windowWidth),\n        random(0, windowHeight),\n        random(10, 30),\n        random(0.5, 2),\n        random(windowHeight / 2, windowHeight)\n      )\n    );\n  }\n}\n\n// ------------------- Ball Class -------------------\n\nclass Ball {\n  constructor(xpos, ypos, w, dy, limit) {\n    this.xpos = xpos;\n    this.ypos = ypos;\n    this.w = w;\n    this.dy = dy;\n    this.limit = windowHeight; // Expand limit to cover entire window\n    this.colorOffset = random(240, 350); // Random offset for hue\n  }\n\n  getColor() {\n    return (Hval1 + this.colorOffset) % 360;\n  }\n\n  draw() {\n    this.move();\n    noStroke();\n    fill(this.getColor(), 100, 50, 80);\n    circle(this.xpos, this.ypos, this.w);\n  }\n\n  move() {\n    if (this.ypos + this.w / 2 >= this.limit || this.ypos - this.w / 2 <= 0) {\n      this.dy = -this.dy; // Reverse direction at edges\n    }\n    this.ypos += this.dy;\n  }\n}\n// ------------------- WebSerial Setup -------------------\n\nfunction setupWebSerial() {\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n\n  serial.getPorts();\n  serial.on(\"noport\", makePortButton);\n  serial.on(\"portavailable\", openPort);\n  serial.on(\"requesterror\", portError);\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n}\n\n// ------------------- Port Button Functions -------------------\n\nfunction makePortButton() {\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  portButton.mousePressed(choosePort);\n}\n\nfunction choosePort() {\n  if (portButton) portButton.show();\n  serial.requestPort();\n}\n\nfunction openPort() {\n  serial.open().then(() => {\n    console.log(\"port open\");\n    if (portButton) portButton.hide();\n  });\n}\n\n// ------------------- Serial Event Functions -------------------\n\nfunction serialEvent() {\n  let inString = serial.readStringUntil(\"\\r\\n\");\n  if (inString != null) {\n    let list = split(trim(inString), \",\");\n    if (list.length > 15) {\n      rot1 = float(list[0]);\n      bgButton = float(list[1]);\n      sat1 = float(list[2]);\n      br1 = float(list[3]);\n      rot2 = float(list[4]);\n      pot1 = float(list[5]);\n      pot2 = float(list[6]);\n      FR = float(list[7]);\n      blur = float(list[8]);\n      grainA = float(list[9]);\n      rippleA = float(list[10]);\n      lightA = float(list[11]);\n      delay = float(list[12]);\n      rain = float(list[13]);\n      laser = float(list[14]);\n      ballsEffect = float(list[15]);\n      serial.write(\"x\");\n    }\n  }\n}\n\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "675a04a18d5c39aa15ee341d",
        "createdAt": "2024-12-16T19:24:44.408Z",
        "updatedAt": "2024-12-16T19:24:44.408Z",
        "id": "675a04a18d5c39aa15ee341d"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.2/p5.min.js\"></script>\n    <script src=\"https://unpkg.com/ml5@0.20.0-alpha.4/dist/ml5.min.js\"></script>\n    <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/addons/p5.sound.min.js\"></script>\n    \n  </head>\n  <body>\n    <script src=\"FilmGrainEffect.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675a04a18d5c39aa15ee341c",
        "createdAt": "2024-12-16T19:24:44.408Z",
        "updatedAt": "2024-12-16T19:24:44.408Z",
        "id": "675a04a18d5c39aa15ee341c"
      },
      {
        "name": "FilmGrainEffect.js",
        "content": "class Effects {\n  static counter = 0;\n}\n\nclass FilmGrainEffect {\n  static counter = 0;\n  static index = 0;\n\n  constructor(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.id = \"FilmGrain_\" + Effects.counter++;\n    this.reset(x, y, w, h, patternSize, sampleSize, patternAlpha);\n  }\n\n  reset(x, y, w, h, patternSize, sampleSize = 1, patternAlpha = 0.1) {\n    this.samples = [];\n    this.currentSampleSet = [];\n    this.patternRefreshInterval = 4;\n    FilmGrainEffect.counter = 0;\n    FilmGrainEffect.index = 0;\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.p = patternSize;\n    this.s = sampleSize;\n    this.a = map(patternAlpha, 0, 1, 0, 255);\n    for (let i = 0; i < sampleSize; i++) {\n      this.samples.push(\n        this.pattern(this.x, this.y, this.w, this.h, this.p, this.a)\n      );\n    }\n  }\n\n  add(effect) {}\n\n  pattern(x, y, w, h, patternSize, patternAlpha) {\n    // luodaan uusi p5 canvas || create new p5 canvas\n    let pg = createGraphics(patternSize, patternSize);\n    pg.pixelDensity(1);\n\n    // luodaan kohina | create noise\n    pg.loadPixels();\n    for (var _y = 0; _y < patternSize; _y += 1) {\n      for (var _x = 0; _x < patternSize; _x += 1) {\n        let i = (_x + _y * patternSize) * 4;\n        let value = (Math.random() * 255) | 0;\n        pg.pixels[i] = value;\n        pg.pixels[i + 1] = value;\n        pg.pixels[i + 2] = value;\n        pg.pixels[i + 3] = patternAlpha;\n      }\n    }\n    pg.updatePixels();\n\n    // lasketaan kohinapalojen paikat ja tallennetaan ne | calculate position of noise pieces and save them\n    let xlen = w / patternSize;\n    let ylen = h / patternSize;\n\n    let samples = [];\n    for (let i = 0; i < ylen; i++) {\n      for (let j = 0; j < xlen; j++) {\n        let _x = x + patternSize * j;\n        let _y = y + patternSize * i;\n        samples.push({\n          canvas: pg,\n          x: _x,\n          y: _y,\n          w: patternSize,\n          h: patternSize,\n        });\n      }\n    }\n    \n    return samples;\n  }\n\n  update(data) {\n    if (FilmGrainEffect.counter++ === this.patternRefreshInterval) {\n      FilmGrainEffect.counter = 0;\n      FilmGrainEffect.index++;\n      if (!this.samples[FilmGrainEffect.index]) {\n        FilmGrainEffect.index = 0;\n      }\n    }\n    this.currentSampleSet = this.samples[FilmGrainEffect.index];\n  }\n\n  display() {\n    for (let sample of this.currentSampleSet) {\n      image(sample.canvas, sample.x, sample.y, sample.w, sample.h);\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.currentSampleSet;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675a04a18d5c39aa15ee341b",
        "createdAt": "2024-12-16T19:24:44.408Z",
        "updatedAt": "2024-12-16T19:24:44.408Z",
        "id": "675a04a18d5c39aa15ee341b"
      },
      {
        "name": "shiver-short.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/0619dfee-49cd-4349-8a46-20a9ba9fe9e9.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "675a0668c0bfecfb8417f66d",
        "createdAt": "2024-12-16T19:24:44.408Z",
        "updatedAt": "2024-12-16T19:24:44.408Z",
        "id": "675a0668c0bfecfb8417f66d"
      }
    ],
    "createdAt": "2024-12-11T21:31:13.103Z",
    "updatedAt": "2024-12-16T19:24:44.408Z",
    "id": "tTbfM_P_a"
  },
  {
    "_id": "CmAK0mN9z",
    "name": "visualize - waveform filled circle copy",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "678ff3c3ad711425bb6520d1",
          "678ff3c3ad711425bb6520d2",
          "678ff3c3ad711425bb6520d3",
          "678ff3c3ad711425bb6520d4",
          "678ff3c3ad711425bb6520d6"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "678ff3c3ad711425bb6520d0",
        "createdAt": "2024-09-16T15:51:16.050Z",
        "updatedAt": "2024-09-16T15:51:16.050Z",
        "id": "678ff3c3ad711425bb6520d0"
      },
      {
        "name": "sketch.js",
        "content": "const sound = new SimplePlayer(\"sounds/Ambiente_3.mp3\");\nlet analyzer = new Tone.Waveform(1024);\nsound.toDestination();\nsound.connect(analyzer);\n\nlet loaded = false;\n\nfunction setup(){\n  createCanvas(600,600);\n}\n\nfunction draw(){\n  if(loaded){\n  background(0);\n  let waveform = analyzer.getValue();\n    \n  fill(255);\n  noStroke();\n  translate(width/2, height/2);\n  beginShape();\n  // divide the 360 degrees into equal increments\n  let points = floor(analyzer.getValue().length / 36);\n  for (let i = 0; i < waveform.length; i+= points) {\n    // use polar coordinates\n    let phi = map(i, 0, waveform.length, 0, 360);\n    let radius = map(waveform[i], -1, 1, 0, width/3);\n    \n    // polar to cartesian    \n    let x = radius * cos(phi);\n    let y = radius * sin(phi);\n    fill(255, 0, 0);\n    // ellipse(x,y, 10,10);\n    fill(255);\n    // vertex(x, y);\n    curveVertex(x, y);\n    \n  }\n  endShape();\n  }\n  else{\n    background(220);\n    text(\"loading...\", 20, 20);\n  }\n}\n\nfunction mouseClicked(){\n  if(loaded){\n    sound.start();\n  }\n}\n\nTone.loaded().then(function(){\n  loaded = true;\n});\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "678ff3c3ad711425bb6520d3",
        "createdAt": "2024-09-16T15:51:16.050Z",
        "updatedAt": "2024-09-16T15:51:16.050Z",
        "id": "678ff3c3ad711425bb6520d3"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.1/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.6.1/addons/p5.dom.min.js\"></script>\n    <script src=\"https://unpkg.com/tone@15.0.4/build/Tone.js\"></script>\n    <script src=\"SimplePlayer.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "678ff3c3ad711425bb6520d2",
        "createdAt": "2024-09-16T15:51:16.050Z",
        "updatedAt": "2024-09-16T15:51:16.050Z",
        "id": "678ff3c3ad711425bb6520d2"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "678ff3c3ad711425bb6520d6",
        "createdAt": "2024-09-16T15:51:16.050Z",
        "updatedAt": "2024-09-16T15:51:16.050Z",
        "id": "678ff3c3ad711425bb6520d6"
      },
      {
        "name": "sounds",
        "content": "",
        "children": [
          "678ff3c3ad711425bb6520d5"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "678ff3c3ad711425bb6520d4",
        "createdAt": "2024-09-16T15:51:16.050Z",
        "updatedAt": "2024-09-16T15:51:16.050Z",
        "id": "678ff3c3ad711425bb6520d4"
      },
      {
        "name": "SimplePlayer.js",
        "content": "// a subclass of Tone.Player that adds a progress function to it.\n// The only permitted playbackRate is 1.\n\nclass SimplePlayer extends Tone.Player {\n  constructor(...args){\n    super(...args);\n    this.playbackRate = 1;\n  }\n  \n  start(...args){\n    // assuming args[0] is always time\n    this.startTime = args[0];\n    super.start(...args);\n  }\n  \n  progress(){\n    return (Tone.now() - this.startTime) / this._buffer.duration;\n  }\n  \n  // disable setting playbackRate to anything other than 1\n  set playbackRate(rate) {\n    if(rate != 1) throw new Error(\"Setting the playbackRate value to any value other than 1 is disabled in SimplePlayer. If required, use Tone.Player instead.\");\n  }\n}\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "678ff3c3ad711425bb6520d1",
        "createdAt": "2024-09-16T15:51:16.050Z",
        "updatedAt": "2024-09-16T15:51:16.050Z",
        "id": "678ff3c3ad711425bb6520d1"
      },
      {
        "name": "Ambiente_3.mp3",
        "content": "",
        "url": "https://assets.editor.p5js.org/65ef285a10d9f8001c340f79/4382cbfb-6bfb-45a7-af1e-63170b66a3e3.mp3",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "678ff3c3ad711425bb6520d5",
        "createdAt": "2024-09-16T15:51:16.050Z",
        "updatedAt": "2024-09-16T15:51:16.050Z",
        "id": "678ff3c3ad711425bb6520d5"
      }
    ],
    "createdAt": "2025-01-21T19:21:40.198Z",
    "updatedAt": "2025-01-21T19:21:40.198Z",
    "id": "CmAK0mN9z"
  },
  {
    "_id": "-CPrW3npy",
    "name": "W4: Re-write as a loop - III - OliviaLee",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6700369e0cd5f1705b957bb2",
          "6700369e0cd5f1705b957bb3",
          "6700369e0cd5f1705b957bb4"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "6700369e0cd5f1705b957bb1",
        "createdAt": "2024-10-04T18:47:32.264Z",
        "updatedAt": "2024-10-04T18:47:32.264Z",
        "id": "6700369e0cd5f1705b957bb1"
      },
      {
        "name": "sketch.js",
        "content": "let num = 10\nlet W\nlet H\n\nfunction setup() {\n  createCanvas(100, 100);\n  background(220);\n}\n\nfunction draw() {\n  for (i=0;i<10;i++) {\n    let xpos= width/num*i\n    let ypos= height/num*i\n    H = height-10*i\n    W = width - 10*i\n    rect(xpos,ypos,W,H)\n  }\n}\n\n\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "6700369e0cd5f1705b957bb3",
        "createdAt": "2024-10-04T18:47:32.264Z",
        "updatedAt": "2024-10-04T18:47:32.264Z",
        "id": "6700369e0cd5f1705b957bb3"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.7.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.7.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6700369e0cd5f1705b957bb2",
        "createdAt": "2024-10-04T18:47:32.264Z",
        "updatedAt": "2024-10-04T18:47:32.264Z",
        "id": "6700369e0cd5f1705b957bb2"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "6700369e0cd5f1705b957bb4",
        "createdAt": "2024-10-04T18:47:32.264Z",
        "updatedAt": "2024-10-04T18:47:32.264Z",
        "id": "6700369e0cd5f1705b957bb4"
      }
    ],
    "createdAt": "2024-10-04T18:40:30.332Z",
    "updatedAt": "2024-10-04T18:47:32.264Z",
    "id": "-CPrW3npy"
  },
  {
    "_id": "8tqHSQ8-A",
    "name": "W4: Re-write as a loop - OliviaLee",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67003675ce2e496bd99aace8",
          "67003675ce2e496bd99aace9",
          "67003675ce2e496bd99aacea"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "67003675ce2e496bd99aace7",
        "createdAt": "2024-10-04T18:40:00.683Z",
        "updatedAt": "2024-10-04T18:40:00.683Z",
        "id": "67003675ce2e496bd99aace7"
      },
      {
        "name": "sketch.js",
        "content": "let num = 10\nlet W\n\nfunction setup() {\n  createCanvas(100, 100);\n  background(220);\n}\n\nfunction draw() {\n  W = width/num\n  for (i=0;i<10;i++) {\n    let xpos= W*i\n    rect(xpos,0,W,height)\n  }\n}\n\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67003675ce2e496bd99aace9",
        "createdAt": "2024-10-04T18:40:00.683Z",
        "updatedAt": "2024-10-04T18:40:00.683Z",
        "id": "67003675ce2e496bd99aace9"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.7.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.7.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67003675ce2e496bd99aace8",
        "createdAt": "2024-10-04T18:40:00.683Z",
        "updatedAt": "2024-10-04T18:40:00.683Z",
        "id": "67003675ce2e496bd99aace8"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "67003675ce2e496bd99aacea",
        "createdAt": "2024-10-04T18:40:00.683Z",
        "updatedAt": "2024-10-04T18:40:00.683Z",
        "id": "67003675ce2e496bd99aacea"
      }
    ],
    "createdAt": "2024-10-04T18:39:50.046Z",
    "updatedAt": "2024-10-04T18:40:00.683Z",
    "id": "8tqHSQ8-A"
  },
  {
    "_id": "jAawXrjWD",
    "name": "webSerial multiple ascii values P5 to Arduino COPY",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "672a3d3d139bda98153dd5b8",
          "672a3d3d139bda98153dd5b9",
          "672a3d3d139bda98153dd5ba"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "672a3d3d139bda98153dd5b7",
        "createdAt": "2024-11-05T15:44:01.768Z",
        "updatedAt": "2024-11-05T15:44:01.768Z",
        "id": "672a3d3d139bda98153dd5b7"
      },
      {
        "name": "sketch.js",
        "content": "// send mutiple ascii values from P5 to Arduino with webSerial\n// based on Tom Igoe's lab examples\n\nconst serial = new p5.WebSerial();\nlet portButton;\n\nfunction setup() {\n  createCanvas(400, 300);\n  allSerialStuff();\n}\n\nfunction draw() {\n\tbackground(0,0,255);\n  var firstValueToSend = mouseX;\n  var secondValueToSend = mouseY;\n  serial.write(firstValueToSend + \",\"); // this makes it a string and adds a comma\n  serial.write(secondValueToSend +\",\"); // this makes it a string and adds a comma\n  serial.write(\"\\n\" ); \t\t\t\t\t// this adds a linefeed in end (ascii 10)\n}\n\n/*\n// Arduino Code \nvoid setup() {\n  Serial.begin(9600);\n}\nvoid loop() {\n  if (Serial.available()) {\n    int fromSerial = Serial.parseInt();               // read first part of string as int\n    analogWrite(3, fromSerial);\n    fromSerial = Serial.parseInt();                    // read second part of string as int            \n    analogWrite(5, fromSerial);   \n  }\n}\n*/\n\nfunction allSerialStuff() {\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n  // check for any ports that are available:\n  serial.getPorts();\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n  // add serial connect/disconnect listeners:\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n}\n// if there's no port selected,\n// make a port select button appear:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n\n// make the port selector window appear:\nfunction choosePort() {\n  if (portButton) portButton.show();\n  serial.requestPort();\n}\n\n\nfunction serialEvent() {\n}\n\n\n// open the selected port, and make the port\n// button invisible:\n// open the selected port, and make the port\n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  serial.open().then(initiateSerial);\n\n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n\n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n// read any incoming data as a string\n// (assumes a newline at the end of it):\n\n// try to connect if a new serial port\n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n\n// if a port is disconnected:\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n\nfunction closePort() {\n  serial.close();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "672a3d3d139bda98153dd5b9",
        "createdAt": "2024-11-05T15:44:01.768Z",
        "updatedAt": "2024-11-05T15:44:01.768Z",
        "id": "672a3d3d139bda98153dd5b9"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.min.js\"\n  integrity=\"sha512-WIklPM6qPCIp6d3fSSr90j+1unQHUOoWDS4sdTiR8gxUTnyZ8S2Mr8e10sKKJ/bhJgpAa/qG068RDkg6fIlNFA==\"\n  crossorigin=\"anonymous\"></script>\n  <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n <script src=\"sketch.js\"></script>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>p5.webserial</title>\n</head>\n</html>",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672a3d3d139bda98153dd5b8",
        "createdAt": "2024-11-05T15:44:01.768Z",
        "updatedAt": "2024-11-05T15:44:01.768Z",
        "id": "672a3d3d139bda98153dd5b8"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672a3d3d139bda98153dd5ba",
        "createdAt": "2024-11-05T15:44:01.768Z",
        "updatedAt": "2024-11-05T15:44:01.768Z",
        "id": "672a3d3d139bda98153dd5ba"
      }
    ],
    "createdAt": "2024-11-05T15:43:57.556Z",
    "updatedAt": "2024-11-05T15:44:01.768Z",
    "id": "jAawXrjWD"
  },
  {
    "_id": "eMacJJdEjq",
    "name": "webSerial one binary value P5 to Arduino COPY",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "672a30a2f31216e3084cc15f",
          "672a30a2f31216e3084cc160",
          "672a30a2f31216e3084cc161"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "672a30a2f31216e3084cc15e",
        "createdAt": "2024-11-05T14:51:50.132Z",
        "updatedAt": "2024-11-05T14:51:50.132Z",
        "id": "672a30a2f31216e3084cc15e"
      },
      {
        "name": "sketch.js",
        "content": "// send one binary value from P5 to Arduino with webSerial\n// based on Tom Igoe's lab examples\n\nconst serial = new p5.WebSerial();\nlet portButton;\nlet video;\n\nfunction setup() {\n  createCanvas(400, 300);\n  allSerialStuff();\n  video = createCapture(VIDEO);\n  video.hide();\n}\n\nfunction draw() {\n  background(255,0,0);\n  serial.write(mouseX);   // sends as byte unles it's a string\n}\n\n/*  \n// Arduino Code \nvoid setup() {\n  Serial.begin(9600);\n}\nvoid loop() {\n  if(Serial.available()){\n  byte byteFromSerial = Serial.read();\n  analogWrite(3,byteFromSerial);\n  }\n}\n*/\n\n\n\n\n\n\n\n\nfunction allSerialStuff() {\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n  // check for any ports that are available:\n  serial.getPorts();\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n  // add serial connect/disconnect listeners:\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n}\n// if there's no port selected,\n// make a port select button appear:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n\n// make the port selector window appear:\nfunction choosePort() {\n  if (portButton) portButton.show();\n  serial.requestPort();\n}\n\n\nfunction serialEvent() {\n}\n\n\n// open the selected port, and make the port\n// button invisible:\n// open the selected port, and make the port\n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  serial.open().then(initiateSerial);\n\n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n\n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n// read any incoming data as a string\n// (assumes a newline at the end of it):\n\n// try to connect if a new serial port\n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n\n// if a port is disconnected:\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n\nfunction closePort() {\n  serial.close();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "672a30a2f31216e3084cc160",
        "createdAt": "2024-11-05T14:51:50.132Z",
        "updatedAt": "2024-11-05T14:51:50.132Z",
        "id": "672a30a2f31216e3084cc160"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.min.js\"\n  integrity=\"sha512-WIklPM6qPCIp6d3fSSr90j+1unQHUOoWDS4sdTiR8gxUTnyZ8S2Mr8e10sKKJ/bhJgpAa/qG068RDkg6fIlNFA==\"\n  crossorigin=\"anonymous\"></script>\n  <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n <script src=\"sketch.js\"></script>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>p5.webserial</title>\n</head>\n</html>",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672a30a2f31216e3084cc15f",
        "createdAt": "2024-11-05T14:51:50.132Z",
        "updatedAt": "2024-11-05T14:51:50.132Z",
        "id": "672a30a2f31216e3084cc15f"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672a30a2f31216e3084cc161",
        "createdAt": "2024-11-05T14:51:50.132Z",
        "updatedAt": "2024-11-05T14:51:50.132Z",
        "id": "672a30a2f31216e3084cc161"
      }
    ],
    "createdAt": "2024-11-05T14:50:10.908Z",
    "updatedAt": "2024-11-05T14:51:50.132Z",
    "id": "eMacJJdEjq"
  },
  {
    "_id": "XMO9qrztj",
    "name": "webSerial one binary value P5 to Arduino with capture COPY",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "672a38544e207751e34a8066",
          "672a38544e207751e34a8067",
          "672a38544e207751e34a8068"
        ],
        "fileType": "folder",
        "isSelectedFile": false,
        "_id": "672a38544e207751e34a8065",
        "createdAt": "2024-11-05T15:35:59.825Z",
        "updatedAt": "2024-11-05T15:35:59.825Z",
        "id": "672a38544e207751e34a8065"
      },
      {
        "name": "sketch.js",
        "content": "// send one binary value from P5 to Arduino with webSerial\n// with video capture and pixel brightness access\n// based on Tom Igoe's lab examples\n\nconst serial = new p5.WebSerial();\nlet portButton;\nlet capture;\n\nfunction setup() {\n  createCanvas(400, 300);\n  allSerialStuff();\n\n  capture = createCapture(VIDEO); // initiate the capture object\n  capture.size(width, height); // define the capture size\n  capture.hide(); // make it not show on HTML\n}\n\nfunction draw() {\n  background(255, 0, 0);\n  image(capture, 0, 0); // show the live video\n  let pixi = get(mouseX, mouseY); // get the pixel under the mouse\n  let brighti = int(brightness(pixi)); // get the brightness of the pixel\n  //print(brighti); // puts in the console\n  serial.write(brighti); // sends as byte unles its a string\n}\n\n/*  \n// Arduino Code \nvoid setup() {\n  Serial.begin(9600);\n}\nvoid loop() {\n  if(Serial.available()){\n  byte byteFromSerial = Serial.read();\n  int mappedValue= map(byteFromSerial, 0,100,0,255);\n  analogWrite(3,mappedValue);\n  }\n}\n\n\n\n\n\n\n*/\nfunction allSerialStuff() {\n  if (!navigator.serial) {\n    alert(\"WebSerial is not supported in this browser. Try Chrome or MS Edge.\");\n  }\n  // check for any ports that are available:\n  serial.getPorts();\n  // if there's no port chosen, choose one:\n  serial.on(\"noport\", makePortButton);\n  // open whatever port is available:\n  serial.on(\"portavailable\", openPort);\n  // handle serial errors:\n  serial.on(\"requesterror\", portError);\n  // handle any incoming serial data:\n  serial.on(\"data\", serialEvent);\n  serial.on(\"close\", makePortButton);\n  // add serial connect/disconnect listeners:\n  navigator.serial.addEventListener(\"connect\", portConnect);\n  navigator.serial.addEventListener(\"disconnect\", portDisconnect);\n}\n// if there's no port selected,\n// make a port select button appear:\nfunction makePortButton() {\n  // create and position a port chooser button:\n  portButton = createButton(\"choose port\");\n  portButton.position(10, 10);\n  // give the port button a mousepressed handler:\n  portButton.mousePressed(choosePort);\n}\n\n// make the port selector window appear:\nfunction choosePort() {\n  if (portButton) portButton.show();\n  serial.requestPort();\n}\n\nfunction serialEvent() {}\n\n// open the selected port, and make the port\n// button invisible:\n// open the selected port, and make the port\n// button invisible:\nfunction openPort() {\n  // wait for the serial.open promise to return,\n  // then call the initiateSerial function\n  serial.open().then(initiateSerial);\n\n  // once the port opens, let the user know:\n  function initiateSerial() {\n    console.log(\"port open\");\n  }\n  // hide the port button once a port is chosen:\n  if (portButton) portButton.hide();\n}\n\n// pop up an alert if there's a port error:\nfunction portError(err) {\n  alert(\"Serial port error: \" + err);\n}\n// read any incoming data as a string\n// (assumes a newline at the end of it):\n\n// try to connect if a new serial port\n// gets added (i.e. plugged in via USB):\nfunction portConnect() {\n  console.log(\"port connected\");\n  serial.getPorts();\n}\n\n// if a port is disconnected:\nfunction portDisconnect() {\n  serial.close();\n  console.log(\"port disconnected\");\n}\n\nfunction closePort() {\n  serial.close();\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "672a38544e207751e34a8067",
        "createdAt": "2024-11-05T15:35:59.825Z",
        "updatedAt": "2024-11-05T15:35:59.825Z",
        "id": "672a38544e207751e34a8067"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.1.9/p5.min.js\"\n  integrity=\"sha512-WIklPM6qPCIp6d3fSSr90j+1unQHUOoWDS4sdTiR8gxUTnyZ8S2Mr8e10sKKJ/bhJgpAa/qG068RDkg6fIlNFA==\"\n  crossorigin=\"anonymous\"></script>\n  <script src=\"https://unpkg.com/p5-webserial@0.1.1/build/p5.webserial.js\"></script>\n <script src=\"sketch.js\"></script>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>p5.webserial</title>\n</head>\n</html>",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672a38544e207751e34a8066",
        "createdAt": "2024-11-05T15:35:59.825Z",
        "updatedAt": "2024-11-05T15:35:59.825Z",
        "id": "672a38544e207751e34a8066"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": false,
        "_id": "672a38544e207751e34a8068",
        "createdAt": "2024-11-05T15:35:59.825Z",
        "updatedAt": "2024-11-05T15:35:59.825Z",
        "id": "672a38544e207751e34a8068"
      }
    ],
    "createdAt": "2024-11-05T15:23:00.722Z",
    "updatedAt": "2024-11-05T15:35:59.825Z",
    "id": "XMO9qrztj"
  },
  {
    "_id": "NrOWew7Kk",
    "name": "ZoogFunctions",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "67059483998532522ff1d6fb",
          "67059483998532522ff1d6fc",
          "67059483998532522ff1d6fd"
        ],
        "fileType": "folder",
        "_id": "67059483998532522ff1d6fa",
        "createdAt": "2024-10-08T20:30:48.424Z",
        "updatedAt": "2024-10-08T20:30:48.424Z",
        "id": "67059483998532522ff1d6fa"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n  background(120);\n  drawFace();\n  drawEyes();\n  drawEBs();\n  drawAntenna();\n  drawMouth();\n  drawArms();\n  drawBody();\n}\n\nfunction drawFace() {\n  fill(127, 0, 127);\n  ellipse(200, 200, 150, 200);\n}\n\nfunction drawEyes() {\n  fill(0, 200, 127);\n  ellipse(150, 150, 70, 40);\n  ellipse(250, 150, 40, 60);\n  fill(0);\n  ellipse(170, 150, 5, 5);\n  ellipse(270, 150, 10, 10);\n}\n\nfunction drawEBs() {\n  stroke(255, 100, 100);\n  strokeWeight(15);\n  line(130, 110, 170, 120);\n  line(230, 105, 270, 100);\n}\n\nfunction drawAntenna() {\n  stroke(255);\n  strokeWeight(5);\n  line(200, 125, 200, 50);\n  noFill();\n  ellipse(200, 40, 20, 20);\n}\n\nfunction drawMouth() {\n  noStroke();\n  fill(255, 0, 127);\n  ellipse(200, 250, 50, 20);\n}\n\nfunction drawArms() {\n  stroke(0);\n  strokeWeight(30);\n  line(150, 350, 300, 300);\n}\n\nfunction drawBody() {\n  noStroke();\n  fill(255, 255, 0);\n  rect(150, 275, 100, 200);\n}\n",
        "children": [],
        "fileType": "file",
        "isSelectedFile": true,
        "_id": "67059483998532522ff1d6fc",
        "createdAt": "2024-10-08T20:30:48.424Z",
        "updatedAt": "2024-10-08T20:30:48.424Z",
        "id": "67059483998532522ff1d6fc"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.10.2/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.10.2/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "67059483998532522ff1d6fb",
        "createdAt": "2024-10-08T20:30:48.424Z",
        "updatedAt": "2024-10-08T20:30:48.424Z",
        "id": "67059483998532522ff1d6fb"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "67059483998532522ff1d6fd",
        "createdAt": "2024-10-08T20:30:48.424Z",
        "updatedAt": "2024-10-08T20:30:48.424Z",
        "id": "67059483998532522ff1d6fd"
      }
    ],
    "createdAt": "2024-10-08T20:22:27.203Z",
    "updatedAt": "2024-10-08T20:30:48.424Z",
    "id": "NrOWew7Kk"
  }
]
